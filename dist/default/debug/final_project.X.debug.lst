

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jan 11 15:45:38 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76   000000                     
    77                           ; Version 2.40
    78                           ; Generated 04/07/2022 GMT
    79                           ; 
    80                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F4520 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112   000000                     
   113                           	psect	idataBANK0
   114   002404                     __pidataBANK0:
   115                           	callstack 0
   116                           
   117                           ;initializer for _adc_time
   118   002404  1388               	dw	5000
   119                           
   120                           ;initializer for _cur_play_times
   121   002406  FFFF               	dw	65535
   122                           
   123                           	psect	idataBANK1
   124   0023CC                     __pidataBANK1:
   125                           	callstack 0
   126                           
   127                           ;initializer for round@F3251
   128   0023CC  0001               	dw	1
   129   0023CE  0002               	dw	2
   130   0023D0  0004               	dw	4
   131   0023D2  0008               	dw	8
   132   0023D4  0010               	dw	16
   133   0023D6  0020               	dw	32
   134   0023D8  0040               	dw	64
   135   0023DA  0080               	dw	128
   136   000000                     _RCREG	set	4014
   137   000000                     _TXREG	set	4013
   138   000000                     _SPBRG	set	4015
   139   000000                     _BAUDCONbits	set	4024
   140   000000                     _ADRESL	set	4035
   141   000000                     _TRISD	set	3989
   142   000000                     _TRISEbits	set	3990
   143   000000                     _PIE1bits	set	3997
   144   000000                     _PIR1bits	set	3998
   145   000000                     _ADRESH	set	4036
   146   000000                     _LATD	set	3980
   147   000000                     _CCP1CON	set	4029
   148   000000                     _ADCON1	set	4033
   149   000000                     _CREN	set	32092
   150   000000                     _RCIF	set	31989
   151   000000                     _IRCF0	set	32412
   152   000000                     _IRCF1	set	32413
   153   000000                     _ADFM	set	32263
   154   000000                     _PORTBbits	set	3969
   155   000000                     _INTCONbits	set	4082
   156   000000                     _T2CONbits	set	4042
   157   000000                     _RCSTAbits	set	4011
   158   000000                     _TXSTAbits	set	4012
   159   000000                     _IPR1bits	set	3999
   160   000000                     _CCP1CONbits	set	4029
   161   000000                     _CCPR1L	set	4030
   162   000000                     _ADCON0bits	set	4034
   163   000000                     _PORTEbits	set	3972
   164   000000                     _LATDbits	set	3980
   165   000000                     _TRISA	set	3986
   166   000000                     _TRISBbits	set	3987
   167   000000                     _TRISCbits	set	3988
   168   000000                     _LATCbits	set	3979
   169   000000                     _ADCON2bits	set	4032
   170   000000                     _ADCON1bits	set	4033
   171   000000                     _RCONbits	set	4048
   172   000000                     _PR2	set	4043
   173   000000                     _IRCF2	set	32414
   174                           
   175                           	psect	mediumconst
   176   007AFC                     __pmediumconst:
   177                           	callstack 0
   178   007AFC  00                 	db	0
   179   007AFD                     STR_6:
   180   007AFD  4E                 	db	78	;'N'
   181   007AFE  6F                 	db	111	;'o'
   182   007AFF  77                 	db	119	;'w'
   183   007B00  20                 	db	32
   184   007B01  79                 	db	121	;'y'
   185   007B02  6F                 	db	111	;'o'
   186   007B03  75                 	db	117	;'u'
   187   007B04  20                 	db	32
   188   007B05  68                 	db	104	;'h'
   189   007B06  61                 	db	97	;'a'
   190   007B07  76                 	db	118	;'v'
   191   007B08  65                 	db	101	;'e'
   192   007B09  20                 	db	32
   193   007B0A  31                 	db	49	;'1'
   194   007B0B  30                 	db	48	;'0'
   195   007B0C  20                 	db	32
   196   007B0D  73                 	db	115	;'s'
   197   007B0E  65                 	db	101	;'e'
   198   007B0F  63                 	db	99	;'c'
   199   007B10  6F                 	db	111	;'o'
   200   007B11  6E                 	db	110	;'n'
   201   007B12  64                 	db	100	;'d'
   202   007B13  73                 	db	115	;'s'
   203   007B14  20                 	db	32
   204   007B15  74                 	db	116	;'t'
   205   007B16  6F                 	db	111	;'o'
   206   007B17  20                 	db	32
   207   007B18  63                 	db	99	;'c'
   208   007B19  68                 	db	104	;'h'
   209   007B1A  6F                 	db	111	;'o'
   210   007B1B  6F                 	db	111	;'o'
   211   007B1C  73                 	db	115	;'s'
   212   007B1D  65                 	db	101	;'e'
   213   007B1E  20                 	db	32
   214   007B1F  74                 	db	116	;'t'
   215   007B20  68                 	db	104	;'h'
   216   007B21  65                 	db	101	;'e'
   217   007B22  20                 	db	32
   218   007B23  70                 	db	112	;'p'
   219   007B24  6C                 	db	108	;'l'
   220   007B25  61                 	db	97	;'a'
   221   007B26  79                 	db	121	;'y'
   222   007B27  69                 	db	105	;'i'
   223   007B28  6E                 	db	110	;'n'
   224   007B29  67                 	db	103	;'g'
   225   007B2A  20                 	db	32
   226   007B2B  72                 	db	114	;'r'
   227   007B2C  6F                 	db	111	;'o'
   228   007B2D  75                 	db	117	;'u'
   229   007B2E  6E                 	db	110	;'n'
   230   007B2F  64                 	db	100	;'d'
   231   007B30  73                 	db	115	;'s'
   232   007B31  2C                 	db	44
   233   007B32  20                 	db	32
   234   007B33  0A                 	db	10
   235   007B34  0D                 	db	13
   236   007B35  00                 	db	0
   237   007B36                     STR_3:
   238   007B36  45                 	db	69	;'E'
   239   007B37  6E                 	db	110	;'n'
   240   007B38  6A                 	db	106	;'j'
   241   007B39  6F                 	db	111	;'o'
   242   007B3A  79                 	db	121	;'y'
   243   007B3B  20                 	db	32
   244   007B3C  79                 	db	121	;'y'
   245   007B3D  6F                 	db	111	;'o'
   246   007B3E  75                 	db	117	;'u'
   247   007B3F  72                 	db	114	;'r'
   248   007B40  20                 	db	32
   249   007B41  67                 	db	103	;'g'
   250   007B42  61                 	db	97	;'a'
   251   007B43  6D                 	db	109	;'m'
   252   007B44  65                 	db	101	;'e'
   253   007B45  2C                 	db	44
   254   007B46  20                 	db	32
   255   007B47  74                 	db	116	;'t'
   256   007B48  79                 	db	121	;'y'
   257   007B49  70                 	db	112	;'p'
   258   007B4A  65                 	db	101	;'e'
   259   007B4B  20                 	db	32
   260   007B4C  5B                 	db	91	;'['
   261   007B4D  73                 	db	115	;'s'
   262   007B4E  74                 	db	116	;'t'
   263   007B4F  61                 	db	97	;'a'
   264   007B50  72                 	db	114	;'r'
   265   007B51  74                 	db	116	;'t'
   266   007B52  5D                 	db	93	;']'
   267   007B53  20                 	db	32
   268   007B54  74                 	db	116	;'t'
   269   007B55  6F                 	db	111	;'o'
   270   007B56  20                 	db	32
   271   007B57  63                 	db	99	;'c'
   272   007B58  6F                 	db	111	;'o'
   273   007B59  6E                 	db	110	;'n'
   274   007B5A  74                 	db	116	;'t'
   275   007B5B  69                 	db	105	;'i'
   276   007B5C  6E                 	db	110	;'n'
   277   007B5D  75                 	db	117	;'u'
   278   007B5E  65                 	db	101	;'e'
   279   007B5F  2E                 	db	46
   280   007B60  2E                 	db	46
   281   007B61  2E                 	db	46
   282   007B62  0A                 	db	10
   283   007B63  0A                 	db	10
   284   007B64  0D                 	db	13
   285   007B65  00                 	db	0
   286   007B66                     STR_24:
   287   007B66  50                 	db	80	;'P'
   288   007B67  6C                 	db	108	;'l'
   289   007B68  65                 	db	101	;'e'
   290   007B69  61                 	db	97	;'a'
   291   007B6A  73                 	db	115	;'s'
   292   007B6B  65                 	db	101	;'e'
   293   007B6C  20                 	db	32
   294   007B6D  74                 	db	116	;'t'
   295   007B6E  79                 	db	121	;'y'
   296   007B6F  70                 	db	112	;'p'
   297   007B70  65                 	db	101	;'e'
   298   007B71  20                 	db	32
   299   007B72  5B                 	db	91	;'['
   300   007B73  6C                 	db	108	;'l'
   301   007B74  65                 	db	101	;'e'
   302   007B75  76                 	db	118	;'v'
   303   007B76  65                 	db	101	;'e'
   304   007B77  6C                 	db	108	;'l'
   305   007B78  31                 	db	49	;'1'
   306   007B79  5D                 	db	93	;']'
   307   007B7A  20                 	db	32
   308   007B7B  5B                 	db	91	;'['
   309   007B7C  6C                 	db	108	;'l'
   310   007B7D  65                 	db	101	;'e'
   311   007B7E  76                 	db	118	;'v'
   312   007B7F  65                 	db	101	;'e'
   313   007B80  6C                 	db	108	;'l'
   314   007B81  32                 	db	50	;'2'
   315   007B82  5D                 	db	93	;']'
   316   007B83  20                 	db	32
   317   007B84  5B                 	db	91	;'['
   318   007B85  6C                 	db	108	;'l'
   319   007B86  65                 	db	101	;'e'
   320   007B87  76                 	db	118	;'v'
   321   007B88  65                 	db	101	;'e'
   322   007B89  6C                 	db	108	;'l'
   323   007B8A  33                 	db	51	;'3'
   324   007B8B  5D                 	db	93	;']'
   325   007B8C  0A                 	db	10
   326   007B8D  0A                 	db	10
   327   007B8E  0D                 	db	13
   328   007B8F  00                 	db	0
   329   007B90                     STR_5:
   330   007B90  50                 	db	80	;'P'
   331   007B91  6C                 	db	108	;'l'
   332   007B92  65                 	db	101	;'e'
   333   007B93  61                 	db	97	;'a'
   334   007B94  73                 	db	115	;'s'
   335   007B95  65                 	db	101	;'e'
   336   007B96  20                 	db	32
   337   007B97  66                 	db	102	;'f'
   338   007B98  6F                 	db	111	;'o'
   339   007B99  6C                 	db	108	;'l'
   340   007B9A  6C                 	db	108	;'l'
   341   007B9B  6F                 	db	111	;'o'
   342   007B9C  77                 	db	119	;'w'
   343   007B9D  20                 	db	32
   344   007B9E  6F                 	db	111	;'o'
   345   007B9F  75                 	db	117	;'u'
   346   007BA0  72                 	db	114	;'r'
   347   007BA1  20                 	db	32
   348   007BA2  69                 	db	105	;'i'
   349   007BA3  6E                 	db	110	;'n'
   350   007BA4  73                 	db	115	;'s'
   351   007BA5  74                 	db	116	;'t'
   352   007BA6  72                 	db	114	;'r'
   353   007BA7  75                 	db	117	;'u'
   354   007BA8  63                 	db	99	;'c'
   355   007BA9  74                 	db	116	;'t'
   356   007BAA  69                 	db	105	;'i'
   357   007BAB  6F                 	db	111	;'o'
   358   007BAC  6E                 	db	110	;'n'
   359   007BAD  73                 	db	115	;'s'
   360   007BAE  20                 	db	32
   361   007BAF  74                 	db	116	;'t'
   362   007BB0  6F                 	db	111	;'o'
   363   007BB1  20                 	db	32
   364   007BB2  70                 	db	112	;'p'
   365   007BB3  6C                 	db	108	;'l'
   366   007BB4  61                 	db	97	;'a'
   367   007BB5  79                 	db	121	;'y'
   368   007BB6  0A                 	db	10
   369   007BB7  0D                 	db	13
   370   007BB8  00                 	db	0
   371   007BB9                     STR_15:
   372   007BB9  0A                 	db	10
   373   007BBA  20                 	db	32
   374   007BBB  37                 	db	55	;'7'
   375   007BBC  20                 	db	32
   376   007BBD  73                 	db	115	;'s'
   377   007BBE  63                 	db	99	;'c'
   378   007BBF  6F                 	db	111	;'o'
   379   007BC0  72                 	db	114	;'r'
   380   007BC1  65                 	db	101	;'e'
   381   007BC2  64                 	db	100	;'d'
   382   007BC3  20                 	db	32
   383   007BC4  3D                 	db	61	;'='
   384   007BC5  20                 	db	32
   385   007BC6  25                 	db	37
   386   007BC7  64                 	db	100	;'d'
   387   007BC8  2C                 	db	44
   388   007BC9  20                 	db	32
   389   007BCA  6E                 	db	110	;'n'
   390   007BCB  6F                 	db	111	;'o'
   391   007BCC  74                 	db	116	;'t'
   392   007BCD  5F                 	db	95	;'_'
   393   007BCE  73                 	db	115	;'s'
   394   007BCF  63                 	db	99	;'c'
   395   007BD0  6F                 	db	111	;'o'
   396   007BD1  72                 	db	114	;'r'
   397   007BD2  65                 	db	101	;'e'
   398   007BD3  64                 	db	100	;'d'
   399   007BD4  20                 	db	32
   400   007BD5  3D                 	db	61	;'='
   401   007BD6  20                 	db	32
   402   007BD7  25                 	db	37
   403   007BD8  64                 	db	100	;'d'
   404   007BD9  20                 	db	32
   405   007BDA  25                 	db	37
   406   007BDB  64                 	db	100	;'d'
   407   007BDC  0D                 	db	13
   408   007BDD  00                 	db	0
   409   007BDE                     STR_22:
   410   007BDE  0A                 	db	10
   411   007BDF  54                 	db	84	;'T'
   412   007BE0  79                 	db	121	;'y'
   413   007BE1  70                 	db	112	;'p'
   414   007BE2  65                 	db	101	;'e'
   415   007BE3  20                 	db	32
   416   007BE4  5B                 	db	91	;'['
   417   007BE5  73                 	db	115	;'s'
   418   007BE6  74                 	db	116	;'t'
   419   007BE7  61                 	db	97	;'a'
   420   007BE8  72                 	db	114	;'r'
   421   007BE9  74                 	db	116	;'t'
   422   007BEA  5D                 	db	93	;']'
   423   007BEB  20                 	db	32
   424   007BEC  74                 	db	116	;'t'
   425   007BED  6F                 	db	111	;'o'
   426   007BEE  20                 	db	32
   427   007BEF  70                 	db	112	;'p'
   428   007BF0  6C                 	db	108	;'l'
   429   007BF1  61                 	db	97	;'a'
   430   007BF2  79                 	db	121	;'y'
   431   007BF3  20                 	db	32
   432   007BF4  61                 	db	97	;'a'
   433   007BF5  67                 	db	103	;'g'
   434   007BF6  61                 	db	97	;'a'
   435   007BF7  69                 	db	105	;'i'
   436   007BF8  6E                 	db	110	;'n'
   437   007BF9  2E                 	db	46
   438   007BFA  2E                 	db	46
   439   007BFB  2E                 	db	46
   440   007BFC  0A                 	db	10
   441   007BFD  0A                 	db	10
   442   007BFE  0D                 	db	13
   443   007BFF  00                 	db	0
   444   007C00                     STR_1:
   445   007C00  0A                 	db	10
   446   007C01  49                 	db	73	;'I'
   447   007C02  20                 	db	32
   448   007C03  77                 	db	119	;'w'
   449   007C04  6F                 	db	111	;'o'
   450   007C05  75                 	db	117	;'u'
   451   007C06  6C                 	db	108	;'l'
   452   007C07  64                 	db	100	;'d'
   453   007C08  20                 	db	32
   454   007C09  6C                 	db	108	;'l'
   455   007C0A  69                 	db	105	;'i'
   456   007C0B  6B                 	db	107	;'k'
   457   007C0C  65                 	db	101	;'e'
   458   007C0D  20                 	db	32
   459   007C0E  74                 	db	116	;'t'
   460   007C0F  6F                 	db	111	;'o'
   461   007C10  20                 	db	32
   462   007C11  75                 	db	117	;'u'
   463   007C12  73                 	db	115	;'s'
   464   007C13  65                 	db	101	;'e'
   465   007C14  20                 	db	32
   466   007C15  25                 	db	37
   467   007C16  64                 	db	100	;'d'
   468   007C17  20                 	db	32
   469   007C18  6D                 	db	109	;'m'
   470   007C19  61                 	db	97	;'a'
   471   007C1A  72                 	db	114	;'r'
   472   007C1B  62                 	db	98	;'b'
   473   007C1C  6C                 	db	108	;'l'
   474   007C1D  65                 	db	101	;'e'
   475   007C1E  73                 	db	115	;'s'
   476   007C1F  21                 	db	33
   477   007C20  0D                 	db	13
   478   007C21  00                 	db	0
   479   007C22                     STR_8:
   480   007C22  0A                 	db	10
   481   007C23  20                 	db	32
   482   007C24  30                 	db	48	;'0'
   483   007C25  20                 	db	32
   484   007C26  73                 	db	115	;'s'
   485   007C27  63                 	db	99	;'c'
   486   007C28  6F                 	db	111	;'o'
   487   007C29  72                 	db	114	;'r'
   488   007C2A  65                 	db	101	;'e'
   489   007C2B  64                 	db	100	;'d'
   490   007C2C  20                 	db	32
   491   007C2D  3D                 	db	61	;'='
   492   007C2E  20                 	db	32
   493   007C2F  25                 	db	37
   494   007C30  64                 	db	100	;'d'
   495   007C31  2C                 	db	44
   496   007C32  20                 	db	32
   497   007C33  6E                 	db	110	;'n'
   498   007C34  6F                 	db	111	;'o'
   499   007C35  74                 	db	116	;'t'
   500   007C36  5F                 	db	95	;'_'
   501   007C37  73                 	db	115	;'s'
   502   007C38  63                 	db	99	;'c'
   503   007C39  6F                 	db	111	;'o'
   504   007C3A  72                 	db	114	;'r'
   505   007C3B  65                 	db	101	;'e'
   506   007C3C  64                 	db	100	;'d'
   507   007C3D  20                 	db	32
   508   007C3E  3D                 	db	61	;'='
   509   007C3F  20                 	db	32
   510   007C40  25                 	db	37
   511   007C41  64                 	db	100	;'d'
   512   007C42  0D                 	db	13
   513   007C43  00                 	db	0
   514   007C44                     STR_9:
   515   007C44  0A                 	db	10
   516   007C45  20                 	db	32
   517   007C46  31                 	db	49	;'1'
   518   007C47  20                 	db	32
   519   007C48  73                 	db	115	;'s'
   520   007C49  63                 	db	99	;'c'
   521   007C4A  6F                 	db	111	;'o'
   522   007C4B  72                 	db	114	;'r'
   523   007C4C  65                 	db	101	;'e'
   524   007C4D  64                 	db	100	;'d'
   525   007C4E  20                 	db	32
   526   007C4F  3D                 	db	61	;'='
   527   007C50  20                 	db	32
   528   007C51  25                 	db	37
   529   007C52  64                 	db	100	;'d'
   530   007C53  2C                 	db	44
   531   007C54  20                 	db	32
   532   007C55  6E                 	db	110	;'n'
   533   007C56  6F                 	db	111	;'o'
   534   007C57  74                 	db	116	;'t'
   535   007C58  5F                 	db	95	;'_'
   536   007C59  73                 	db	115	;'s'
   537   007C5A  63                 	db	99	;'c'
   538   007C5B  6F                 	db	111	;'o'
   539   007C5C  72                 	db	114	;'r'
   540   007C5D  65                 	db	101	;'e'
   541   007C5E  64                 	db	100	;'d'
   542   007C5F  20                 	db	32
   543   007C60  3D                 	db	61	;'='
   544   007C61  20                 	db	32
   545   007C62  25                 	db	37
   546   007C63  64                 	db	100	;'d'
   547   007C64  0D                 	db	13
   548   007C65  00                 	db	0
   549   007C66                     STR_10:
   550   007C66  0A                 	db	10
   551   007C67  20                 	db	32
   552   007C68  32                 	db	50	;'2'
   553   007C69  20                 	db	32
   554   007C6A  73                 	db	115	;'s'
   555   007C6B  63                 	db	99	;'c'
   556   007C6C  6F                 	db	111	;'o'
   557   007C6D  72                 	db	114	;'r'
   558   007C6E  65                 	db	101	;'e'
   559   007C6F  64                 	db	100	;'d'
   560   007C70  20                 	db	32
   561   007C71  3D                 	db	61	;'='
   562   007C72  20                 	db	32
   563   007C73  25                 	db	37
   564   007C74  64                 	db	100	;'d'
   565   007C75  2C                 	db	44
   566   007C76  20                 	db	32
   567   007C77  6E                 	db	110	;'n'
   568   007C78  6F                 	db	111	;'o'
   569   007C79  74                 	db	116	;'t'
   570   007C7A  5F                 	db	95	;'_'
   571   007C7B  73                 	db	115	;'s'
   572   007C7C  63                 	db	99	;'c'
   573   007C7D  6F                 	db	111	;'o'
   574   007C7E  72                 	db	114	;'r'
   575   007C7F  65                 	db	101	;'e'
   576   007C80  64                 	db	100	;'d'
   577   007C81  20                 	db	32
   578   007C82  3D                 	db	61	;'='
   579   007C83  20                 	db	32
   580   007C84  25                 	db	37
   581   007C85  64                 	db	100	;'d'
   582   007C86  0D                 	db	13
   583   007C87  00                 	db	0
   584   007C88                     STR_11:
   585   007C88  0A                 	db	10
   586   007C89  20                 	db	32
   587   007C8A  33                 	db	51	;'3'
   588   007C8B  20                 	db	32
   589   007C8C  73                 	db	115	;'s'
   590   007C8D  63                 	db	99	;'c'
   591   007C8E  6F                 	db	111	;'o'
   592   007C8F  72                 	db	114	;'r'
   593   007C90  65                 	db	101	;'e'
   594   007C91  64                 	db	100	;'d'
   595   007C92  20                 	db	32
   596   007C93  3D                 	db	61	;'='
   597   007C94  20                 	db	32
   598   007C95  25                 	db	37
   599   007C96  64                 	db	100	;'d'
   600   007C97  2C                 	db	44
   601   007C98  20                 	db	32
   602   007C99  6E                 	db	110	;'n'
   603   007C9A  6F                 	db	111	;'o'
   604   007C9B  74                 	db	116	;'t'
   605   007C9C  5F                 	db	95	;'_'
   606   007C9D  73                 	db	115	;'s'
   607   007C9E  63                 	db	99	;'c'
   608   007C9F  6F                 	db	111	;'o'
   609   007CA0  72                 	db	114	;'r'
   610   007CA1  65                 	db	101	;'e'
   611   007CA2  64                 	db	100	;'d'
   612   007CA3  20                 	db	32
   613   007CA4  3D                 	db	61	;'='
   614   007CA5  20                 	db	32
   615   007CA6  25                 	db	37
   616   007CA7  64                 	db	100	;'d'
   617   007CA8  0D                 	db	13
   618   007CA9  00                 	db	0
   619   007CAA                     STR_12:
   620   007CAA  0A                 	db	10
   621   007CAB  20                 	db	32
   622   007CAC  34                 	db	52	;'4'
   623   007CAD  20                 	db	32
   624   007CAE  73                 	db	115	;'s'
   625   007CAF  63                 	db	99	;'c'
   626   007CB0  6F                 	db	111	;'o'
   627   007CB1  72                 	db	114	;'r'
   628   007CB2  65                 	db	101	;'e'
   629   007CB3  64                 	db	100	;'d'
   630   007CB4  20                 	db	32
   631   007CB5  3D                 	db	61	;'='
   632   007CB6  20                 	db	32
   633   007CB7  25                 	db	37
   634   007CB8  64                 	db	100	;'d'
   635   007CB9  2C                 	db	44
   636   007CBA  20                 	db	32
   637   007CBB  6E                 	db	110	;'n'
   638   007CBC  6F                 	db	111	;'o'
   639   007CBD  74                 	db	116	;'t'
   640   007CBE  5F                 	db	95	;'_'
   641   007CBF  73                 	db	115	;'s'
   642   007CC0  63                 	db	99	;'c'
   643   007CC1  6F                 	db	111	;'o'
   644   007CC2  72                 	db	114	;'r'
   645   007CC3  65                 	db	101	;'e'
   646   007CC4  64                 	db	100	;'d'
   647   007CC5  20                 	db	32
   648   007CC6  3D                 	db	61	;'='
   649   007CC7  20                 	db	32
   650   007CC8  25                 	db	37
   651   007CC9  64                 	db	100	;'d'
   652   007CCA  0D                 	db	13
   653   007CCB  00                 	db	0
   654   007CCC                     STR_13:
   655   007CCC  0A                 	db	10
   656   007CCD  20                 	db	32
   657   007CCE  35                 	db	53	;'5'
   658   007CCF  20                 	db	32
   659   007CD0  73                 	db	115	;'s'
   660   007CD1  63                 	db	99	;'c'
   661   007CD2  6F                 	db	111	;'o'
   662   007CD3  72                 	db	114	;'r'
   663   007CD4  65                 	db	101	;'e'
   664   007CD5  64                 	db	100	;'d'
   665   007CD6  20                 	db	32
   666   007CD7  3D                 	db	61	;'='
   667   007CD8  20                 	db	32
   668   007CD9  25                 	db	37
   669   007CDA  64                 	db	100	;'d'
   670   007CDB  2C                 	db	44
   671   007CDC  20                 	db	32
   672   007CDD  6E                 	db	110	;'n'
   673   007CDE  6F                 	db	111	;'o'
   674   007CDF  74                 	db	116	;'t'
   675   007CE0  5F                 	db	95	;'_'
   676   007CE1  73                 	db	115	;'s'
   677   007CE2  63                 	db	99	;'c'
   678   007CE3  6F                 	db	111	;'o'
   679   007CE4  72                 	db	114	;'r'
   680   007CE5  65                 	db	101	;'e'
   681   007CE6  64                 	db	100	;'d'
   682   007CE7  20                 	db	32
   683   007CE8  3D                 	db	61	;'='
   684   007CE9  20                 	db	32
   685   007CEA  25                 	db	37
   686   007CEB  64                 	db	100	;'d'
   687   007CEC  0D                 	db	13
   688   007CED  00                 	db	0
   689   007CEE                     STR_14:
   690   007CEE  0A                 	db	10
   691   007CEF  20                 	db	32
   692   007CF0  36                 	db	54	;'6'
   693   007CF1  20                 	db	32
   694   007CF2  73                 	db	115	;'s'
   695   007CF3  63                 	db	99	;'c'
   696   007CF4  6F                 	db	111	;'o'
   697   007CF5  72                 	db	114	;'r'
   698   007CF6  65                 	db	101	;'e'
   699   007CF7  64                 	db	100	;'d'
   700   007CF8  20                 	db	32
   701   007CF9  3D                 	db	61	;'='
   702   007CFA  20                 	db	32
   703   007CFB  25                 	db	37
   704   007CFC  64                 	db	100	;'d'
   705   007CFD  2C                 	db	44
   706   007CFE  20                 	db	32
   707   007CFF  6E                 	db	110	;'n'
   708   007D00  6F                 	db	111	;'o'
   709   007D01  74                 	db	116	;'t'
   710   007D02  5F                 	db	95	;'_'
   711   007D03  73                 	db	115	;'s'
   712   007D04  63                 	db	99	;'c'
   713   007D05  6F                 	db	111	;'o'
   714   007D06  72                 	db	114	;'r'
   715   007D07  65                 	db	101	;'e'
   716   007D08  64                 	db	100	;'d'
   717   007D09  20                 	db	32
   718   007D0A  3D                 	db	61	;'='
   719   007D0B  20                 	db	32
   720   007D0C  25                 	db	37
   721   007D0D  64                 	db	100	;'d'
   722   007D0E  0D                 	db	13
   723   007D0F  00                 	db	0
   724   007D10                     STR_4:
   725   007D10  0A                 	db	10
   726   007D11  57                 	db	87	;'W'
   727   007D12  65                 	db	101	;'e'
   728   007D13  6C                 	db	108	;'l'
   729   007D14  63                 	db	99	;'c'
   730   007D15  6F                 	db	111	;'o'
   731   007D16  6D                 	db	109	;'m'
   732   007D17  65                 	db	101	;'e'
   733   007D18  20                 	db	32
   734   007D19  74                 	db	116	;'t'
   735   007D1A  6F                 	db	111	;'o'
   736   007D1B  20                 	db	32
   737   007D1C  6F                 	db	111	;'o'
   738   007D1D  75                 	db	117	;'u'
   739   007D1E  72                 	db	114	;'r'
   740   007D1F  20                 	db	32
   741   007D20  70                 	db	112	;'p'
   742   007D21  69                 	db	105	;'i'
   743   007D22  6E                 	db	110	;'n'
   744   007D23  62                 	db	98	;'b'
   745   007D24  61                 	db	97	;'a'
   746   007D25  6C                 	db	108	;'l'
   747   007D26  6C                 	db	108	;'l'
   748   007D27  20                 	db	32
   749   007D28  67                 	db	103	;'g'
   750   007D29  61                 	db	97	;'a'
   751   007D2A  6D                 	db	109	;'m'
   752   007D2B  65                 	db	101	;'e'
   753   007D2C  21                 	db	33
   754   007D2D  21                 	db	33
   755   007D2E  0A                 	db	10
   756   007D2F  0D                 	db	13
   757   007D30  00                 	db	0
   758   007D31                     STR_7:
   759   007D31  75                 	db	117	;'u'
   760   007D32  73                 	db	115	;'s'
   761   007D33  65                 	db	101	;'e'
   762   007D34  20                 	db	32
   763   007D35  74                 	db	116	;'t'
   764   007D36  68                 	db	104	;'h'
   765   007D37  65                 	db	101	;'e'
   766   007D38  20                 	db	32
   767   007D39  56                 	db	86	;'V'
   768   007D3A  61                 	db	97	;'a'
   769   007D3B  72                 	db	114	;'r'
   770   007D3C  69                 	db	105	;'i'
   771   007D3D  61                 	db	97	;'a'
   772   007D3E  62                 	db	98	;'b'
   773   007D3F  6C                 	db	108	;'l'
   774   007D40  65                 	db	101	;'e'
   775   007D41  20                 	db	32
   776   007D42  52                 	db	82	;'R'
   777   007D43  65                 	db	101	;'e'
   778   007D44  73                 	db	115	;'s'
   779   007D45  69                 	db	105	;'i'
   780   007D46  73                 	db	115	;'s'
   781   007D47  74                 	db	116	;'t'
   782   007D48  65                 	db	101	;'e'
   783   007D49  72                 	db	114	;'r'
   784   007D4A  2E                 	db	46
   785   007D4B  2E                 	db	46
   786   007D4C  2E                 	db	46
   787   007D4D  0A                 	db	10
   788   007D4E  0A                 	db	10
   789   007D4F  0D                 	db	13
   790   007D50  00                 	db	0
   791   007D51                     STR_2:
   792   007D51  0A                 	db	10
   793   007D52  59                 	db	89	;'Y'
   794   007D53  6F                 	db	111	;'o'
   795   007D54  75                 	db	117	;'u'
   796   007D55  20                 	db	32
   797   007D56  63                 	db	99	;'c'
   798   007D57  61                 	db	97	;'a'
   799   007D58  6E                 	db	110	;'n'
   800   007D59  20                 	db	32
   801   007D5A  73                 	db	115	;'s'
   802   007D5B  74                 	db	116	;'t'
   803   007D5C  61                 	db	97	;'a'
   804   007D5D  72                 	db	114	;'r'
   805   007D5E  74                 	db	116	;'t'
   806   007D5F  20                 	db	32
   807   007D60  74                 	db	116	;'t'
   808   007D61  68                 	db	104	;'h'
   809   007D62  65                 	db	101	;'e'
   810   007D63  20                 	db	32
   811   007D64  67                 	db	103	;'g'
   812   007D65  61                 	db	97	;'a'
   813   007D66  6D                 	db	109	;'m'
   814   007D67  65                 	db	101	;'e'
   815   007D68  20                 	db	32
   816   007D69  6E                 	db	110	;'n'
   817   007D6A  6F                 	db	111	;'o'
   818   007D6B  77                 	db	119	;'w'
   819   007D6C  2E                 	db	46
   820   007D6D  0A                 	db	10
   821   007D6E  0D                 	db	13
   822   007D6F  00                 	db	0
   823   007D70                     STR_23:
   824   007D70  0A                 	db	10
   825   007D71  0A                 	db	10
   826   007D72  53                 	db	83	;'S'
   827   007D73  65                 	db	101	;'e'
   828   007D74  6C                 	db	108	;'l'
   829   007D75  65                 	db	101	;'e'
   830   007D76  63                 	db	99	;'c'
   831   007D77  74                 	db	116	;'t'
   832   007D78  20                 	db	32
   833   007D79  64                 	db	100	;'d'
   834   007D7A  69                 	db	105	;'i'
   835   007D7B  66                 	db	102	;'f'
   836   007D7C  66                 	db	102	;'f'
   837   007D7D  69                 	db	105	;'i'
   838   007D7E  63                 	db	99	;'c'
   839   007D7F  75                 	db	117	;'u'
   840   007D80  6C                 	db	108	;'l'
   841   007D81  74                 	db	116	;'t'
   842   007D82  79                 	db	121	;'y'
   843   007D83  20                 	db	32
   844   007D84  6C                 	db	108	;'l'
   845   007D85  65                 	db	101	;'e'
   846   007D86  76                 	db	118	;'v'
   847   007D87  65                 	db	101	;'e'
   848   007D88  6C                 	db	108	;'l'
   849   007D89  3A                 	db	58	;':'
   850   007D8A  0A                 	db	10
   851   007D8B  0D                 	db	13
   852   007D8C  00                 	db	0
   853   007D8D                     STR_20:
   854   007D8D  0A                 	db	10
   855   007D8E  0A                 	db	10
   856   007D8F  59                 	db	89	;'Y'
   857   007D90  4F                 	db	79	;'O'
   858   007D91  55                 	db	85	;'U'
   859   007D92  20                 	db	32
   860   007D93  4C                 	db	76	;'L'
   861   007D94  4F                 	db	79	;'O'
   862   007D95  53                 	db	83	;'S'
   863   007D96  45                 	db	69	;'E'
   864   007D97  52                 	db	82	;'R'
   865   007D98  20                 	db	32
   866   007D99  21                 	db	33
   867   007D9A  21                 	db	33
   868   007D9B  21                 	db	33
   869   007D9C  21                 	db	33
   870   007D9D  0A                 	db	10
   871   007D9E  0D                 	db	13
   872   007D9F  00                 	db	0
   873   007DA0                     STR_17:
   874   007DA0  0A                 	db	10
   875   007DA1  0A                 	db	10
   876   007DA2  59                 	db	89	;'Y'
   877   007DA3  4F                 	db	79	;'O'
   878   007DA4  55                 	db	85	;'U'
   879   007DA5  20                 	db	32
   880   007DA6  57                 	db	87	;'W'
   881   007DA7  49                 	db	73	;'I'
   882   007DA8  4E                 	db	78	;'N'
   883   007DA9  20                 	db	32
   884   007DAA  21                 	db	33
   885   007DAB  21                 	db	33
   886   007DAC  21                 	db	33
   887   007DAD  21                 	db	33
   888   007DAE  0A                 	db	10
   889   007DAF  0D                 	db	13
   890   007DB0  00                 	db	0
   891   007DB1                     STR_21:
   892   007DB1  0A                 	db	10
   893   007DB2  47                 	db	71	;'G'
   894   007DB3  61                 	db	97	;'a'
   895   007DB4  6D                 	db	109	;'m'
   896   007DB5  65                 	db	101	;'e'
   897   007DB6  20                 	db	32
   898   007DB7  65                 	db	101	;'e'
   899   007DB8  6E                 	db	110	;'n'
   900   007DB9  64                 	db	100	;'d'
   901   007DBA  65                 	db	101	;'e'
   902   007DBB  64                 	db	100	;'d'
   903   007DBC  0A                 	db	10
   904   007DBD  0D                 	db	13
   905   007DBE  00                 	db	0
   906   007DBF  00                 	db	0	; dummy byte at the end
   907   000000                     
   908                           ; #config settings
   909                           
   910                           	psect	cinit
   911   001EEA                     __pcinit:
   912                           	callstack 0
   913   001EEA                     start_initialization:
   914                           	callstack 0
   915   001EEA                     __initialization:
   916                           	callstack 0
   917                           
   918                           ; Initialize objects allocated to BANK1 (16 bytes)
   919                           ; load TBLPTR registers with __pidataBANK1
   920   001EEA  0ECC               	movlw	low __pidataBANK1
   921   001EEC  6EF6               	movwf	tblptrl,c
   922   001EEE  0E23               	movlw	high __pidataBANK1
   923   001EF0  6EF7               	movwf	tblptrh,c
   924   001EF2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   925   001EF4  6EF8               	movwf	tblptru,c
   926   001EF6  EE01  F0C8         	lfsr	0,__pdataBANK1
   927   001EFA  EE10 F010          	lfsr	1,16
   928   001EFE                     copy_data0:
   929   001EFE  0009               	tblrd		*+
   930   001F00  CFF5 FFEE          	movff	tablat,postinc0
   931   001F04  50E5               	movf	postdec1,w,c
   932   001F06  50E1               	movf	fsr1l,w,c
   933   001F08  E1FA               	bnz	copy_data0
   934                           
   935                           ; Initialize objects allocated to BANK0 (4 bytes)
   936                           ; load TBLPTR registers with __pidataBANK0
   937   001F0A  0E04               	movlw	low __pidataBANK0
   938   001F0C  6EF6               	movwf	tblptrl,c
   939   001F0E  0E24               	movlw	high __pidataBANK0
   940   001F10  6EF7               	movwf	tblptrh,c
   941   001F12  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   942   001F14  6EF8               	movwf	tblptru,c
   943   001F16  EE00  F0C0         	lfsr	0,__pdataBANK0
   944   001F1A  EE10 F004          	lfsr	1,4
   945   001F1E                     copy_data1:
   946   001F1E  0009               	tblrd		*+
   947   001F20  CFF5 FFEE          	movff	tablat,postinc0
   948   001F24  50E5               	movf	postdec1,w,c
   949   001F26  50E1               	movf	fsr1l,w,c
   950   001F28  E1FA               	bnz	copy_data1
   951                           
   952                           ; Clear objects allocated to BANK2 (2 bytes)
   953   001F2A  0102               	movlb	2
   954   001F2C  6BF3               	clrf	(__pbssBANK2+1)& (0+255),b
   955   001F2E  6BF2               	clrf	__pbssBANK2& (0+255),b
   956                           
   957                           ; Clear objects allocated to BANK1 (85 bytes)
   958   001F30  EE01  F073         	lfsr	0,__pbssBANK1
   959   001F34  0E55               	movlw	85
   960   001F36                     clear_0:
   961   001F36  6AEE               	clrf	postinc0,c
   962   001F38  06E8               	decf	wreg,f,c
   963   001F3A  E1FD               	bnz	clear_0
   964                           
   965                           ; Clear objects allocated to BANK0 (2 bytes)
   966   001F3C  0100               	movlb	0
   967   001F3E  6BC5               	clrf	(__pbssBANK0+1)& (0+255),b
   968   001F40  6BC4               	clrf	__pbssBANK0& (0+255),b
   969   001F42                     end_of_initialization:
   970                           	callstack 0
   971   001F42                     __end_of__initialization:
   972                           	callstack 0
   973   001F42  9074               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   974   001F44  9274               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   975   001F46  0E00               	movlw	low (__Lmediumconst shr (0+16))
   976   001F48  6EF8               	movwf	tblptru,c
   977   001F4A  0100               	movlb	0
   978   001F4C  EF11  F00A         	goto	_main	;jump to C main() function
   979                           
   980                           	psect	bssBANK0
   981   0000C4                     __pbssBANK0:
   982                           	callstack 0
   983   0000C4                     _lenStr:
   984                           	callstack 0
   985   0000C4                     	ds	2
   986                           
   987                           	psect	dataBANK0
   988   0000C0                     __pdataBANK0:
   989                           	callstack 0
   990   0000C0                     _adc_time:
   991                           	callstack 0
   992   0000C0                     	ds	2
   993   0000C2                     _cur_play_times:
   994                           	callstack 0
   995   0000C2                     	ds	2
   996                           
   997                           	psect	bssBANK1
   998   000173                     __pbssBANK1:
   999                           	callstack 0
  1000   000173                     _width:
  1001                           	callstack 0
  1002   000173                     	ds	2
  1003   000175                     _prec:
  1004                           	callstack 0
  1005   000175                     	ds	2
  1006   000177                     _begin:
  1007                           	callstack 0
  1008   000177                     	ds	2
  1009   000179                     _difficulty:
  1010                           	callstack 0
  1011   000179                     	ds	2
  1012   00017B                     _flags:
  1013                           	callstack 0
  1014   00017B                     	ds	1
  1015   00017C                     _dbuf:
  1016                           	callstack 0
  1017   00017C                     	ds	32
  1018   00019C                     _mystring:
  1019                           	callstack 0
  1020   00019C                     	ds	20
  1021   0001B0                     _str:
  1022                           	callstack 0
  1023   0001B0                     	ds	20
  1024   0001C4                     _seed:
  1025                           	callstack 0
  1026   0001C4                     	ds	4
  1027                           
  1028                           	psect	dataBANK1
  1029   0001C8                     __pdataBANK1:
  1030                           	callstack 0
  1031   0001C8                     round@F3251:
  1032                           	callstack 0
  1033   0001C8                     	ds	16
  1034                           
  1035                           	psect	bssBANK2
  1036   0002F2                     __pbssBANK2:
  1037                           	callstack 0
  1038   0002F2                     _no_scored:
  1039                           	callstack 0
  1040   0002F2                     	ds	1
  1041   0002F3                     _scored:
  1042                           	callstack 0
  1043   0002F3                     	ds	1
  1044                           
  1045                           	psect	cstackBANK2
  1046   000200                     __pcstackBANK2:
  1047                           	callstack 0
  1048   000200                     count_score@txt:
  1049                           	callstack 0
  1050                           
  1051                           ; 30 bytes @ 0x0
  1052   000200                     	ds	30
  1053   00021E                     count_score@txt_813:
  1054                           	callstack 0
  1055                           
  1056                           ; 30 bytes @ 0x1E
  1057   00021E                     	ds	30
  1058   00023C                     count_score@txt_815:
  1059                           	callstack 0
  1060                           
  1061                           ; 30 bytes @ 0x3C
  1062   00023C                     	ds	30
  1063   00025A                     count_score@txt_817:
  1064                           	callstack 0
  1065                           
  1066                           ; 30 bytes @ 0x5A
  1067   00025A                     	ds	30
  1068   000278                     count_score@txt_819:
  1069                           	callstack 0
  1070                           
  1071                           ; 30 bytes @ 0x78
  1072   000278                     	ds	30
  1073   000296                     count_score@txt_821:
  1074                           	callstack 0
  1075                           
  1076                           ; 30 bytes @ 0x96
  1077   000296                     	ds	30
  1078   0002B4                     count_score@txt_827:
  1079                           	callstack 0
  1080                           
  1081                           ; 30 bytes @ 0xB4
  1082   0002B4                     	ds	30
  1083   0002D2                     count_score@txt_830:
  1084                           	callstack 0
  1085                           
  1086                           ; 30 bytes @ 0xD2
  1087   0002D2                     	ds	30
  1088   0002F0                     count_score@seven:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0xF0
  1092   0002F0                     	ds	2
  1093                           
  1094                           	psect	cstackBANK1
  1095   000100                     __pcstackBANK1:
  1096                           	callstack 0
  1097   000100                     ?_GetString:
  1098                           	callstack 0
  1099   000100                     ?_strlen:
  1100                           	callstack 0
  1101   000100                     ?___lwdiv:
  1102                           	callstack 0
  1103   000100                     ?___lmul:
  1104                           	callstack 0
  1105   000100                     ?___aodiv:
  1106                           	callstack 0
  1107   000100                     ?___aomod:
  1108                           	callstack 0
  1109   000100                     UART_Write@data:
  1110                           	callstack 0
  1111   000100                     ClearBuffer@i:
  1112                           	callstack 0
  1113   000100                     ___lwdiv@dividend:
  1114                           	callstack 0
  1115   000100                     fputc@c:
  1116                           	callstack 0
  1117   000100                     strlen@s:
  1118                           	callstack 0
  1119   000100                     ___lmul@multiplier:
  1120                           	callstack 0
  1121   000100                     ___aodiv@dividend:
  1122                           	callstack 0
  1123   000100                     ___aomod@dividend:
  1124                           	callstack 0
  1125                           
  1126                           ; 8 bytes @ 0x0
  1127   000100                     	ds	1
  1128   000101                     UART_Write_Text@text:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x1
  1132   000101                     	ds	1
  1133   000102                     ___lwdiv@divisor:
  1134                           	callstack 0
  1135   000102                     fputc@fp:
  1136                           	callstack 0
  1137   000102                     strcpy@dest:
  1138                           	callstack 0
  1139   000102                     strlen@a:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x2
  1143   000102                     	ds	1
  1144   000103                     ??_UART_Write_Text:
  1145                           
  1146                           ; 1 bytes @ 0x3
  1147   000103                     	ds	1
  1148   000104                     ??_fputc:
  1149   000104                     ___lwdiv@counter:
  1150                           	callstack 0
  1151   000104                     strcpy@src:
  1152                           	callstack 0
  1153   000104                     ___lmul@multiplicand:
  1154                           	callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x4
  1157   000104                     	ds	1
  1158   000105                     UART_Write_Text@i:
  1159                           	callstack 0
  1160   000105                     ___lwdiv@quotient:
  1161                           	callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x5
  1164   000105                     	ds	1
  1165   000106                     strcpy@s:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x6
  1169   000106                     	ds	1
  1170   000107                     
  1171                           ; 1 bytes @ 0x7
  1172   000107                     	ds	1
  1173   000108                     strcpy@d:
  1174                           	callstack 0
  1175   000108                     ___lmul@product:
  1176                           	callstack 0
  1177   000108                     ___aodiv@divisor:
  1178                           	callstack 0
  1179   000108                     ___aomod@divisor:
  1180                           	callstack 0
  1181                           
  1182                           ; 8 bytes @ 0x8
  1183   000108                     	ds	1
  1184   000109                     fputs@s:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x9
  1188   000109                     	ds	2
  1189   00010B                     fputs@fp:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0xB
  1193   00010B                     	ds	1
  1194   00010C                     ?_rand:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0xC
  1198   00010C                     	ds	1
  1199   00010D                     fputs@c:
  1200                           	callstack 0
  1201                           
  1202                           ; 1 bytes @ 0xD
  1203   00010D                     	ds	1
  1204   00010E                     ??_rand:
  1205   00010E                     fputs@i:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0xE
  1209   00010E                     	ds	2
  1210   000110                     ___aodiv@counter:
  1211                           	callstack 0
  1212   000110                     ___aomod@counter:
  1213                           	callstack 0
  1214   000110                     pad@fp:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x10
  1218   000110                     	ds	1
  1219   000111                     ___aodiv@sign:
  1220                           	callstack 0
  1221   000111                     ___aomod@sign:
  1222                           	callstack 0
  1223                           
  1224                           ; 1 bytes @ 0x11
  1225   000111                     	ds	1
  1226   000112                     ?_abs:
  1227                           	callstack 0
  1228   000112                     ?___awdiv:
  1229                           	callstack 0
  1230   000112                     ___awdiv@dividend:
  1231                           	callstack 0
  1232   000112                     pad@buf:
  1233                           	callstack 0
  1234   000112                     abs@a:
  1235                           	callstack 0
  1236   000112                     ___aodiv@quotient:
  1237                           	callstack 0
  1238                           
  1239                           ; 8 bytes @ 0x12
  1240   000112                     	ds	2
  1241   000114                     ??_abs:
  1242   000114                     ___awdiv@divisor:
  1243                           	callstack 0
  1244   000114                     pad@p:
  1245                           	callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x14
  1248   000114                     	ds	2
  1249   000116                     ??_pad:
  1250   000116                     ___awdiv@counter:
  1251                           	callstack 0
  1252                           
  1253                           ; 1 bytes @ 0x16
  1254   000116                     	ds	1
  1255   000117                     ___awdiv@sign:
  1256                           	callstack 0
  1257   000117                     pad@i:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x17
  1261   000117                     	ds	1
  1262   000118                     ___awdiv@quotient:
  1263                           	callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x18
  1266   000118                     	ds	1
  1267   000119                     pad@w:
  1268                           	callstack 0
  1269                           
  1270                           ; 2 bytes @ 0x19
  1271   000119                     	ds	1
  1272   00011A                     shuffle@array:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x1A
  1276   00011A                     	ds	1
  1277   00011B                     dtoa@fp:
  1278                           	callstack 0
  1279                           
  1280                           ; 2 bytes @ 0x1B
  1281   00011B                     	ds	1
  1282   00011C                     shuffle@n:
  1283                           	callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x1C
  1286   00011C                     	ds	1
  1287   00011D                     dtoa@d:
  1288                           	callstack 0
  1289                           
  1290                           ; 8 bytes @ 0x1D
  1291   00011D                     	ds	1
  1292   00011E                     ??_shuffle:
  1293                           
  1294                           ; 1 bytes @ 0x1E
  1295   00011E                     	ds	2
  1296   000120                     shuffle@t:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x20
  1300   000120                     	ds	2
  1301   000122                     shuffle@j:
  1302                           	callstack 0
  1303                           
  1304                           ; 2 bytes @ 0x22
  1305   000122                     	ds	2
  1306   000124                     shuffle@i:
  1307                           	callstack 0
  1308                           
  1309                           ; 2 bytes @ 0x24
  1310   000124                     	ds	1
  1311   000125                     ??_dtoa:
  1312                           
  1313                           ; 1 bytes @ 0x25
  1314   000125                     	ds	1
  1315   000126                     round@leds:
  1316                           	callstack 0
  1317                           
  1318                           ; 16 bytes @ 0x26
  1319   000126                     	ds	7
  1320   00012D                     _dtoa$1986:
  1321                           	callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x2D
  1324   00012D                     	ds	2
  1325   00012F                     dtoa@p:
  1326                           	callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x2F
  1329   00012F                     	ds	2
  1330   000131                     dtoa@w:
  1331                           	callstack 0
  1332                           
  1333                           ; 2 bytes @ 0x31
  1334   000131                     	ds	2
  1335   000133                     dtoa@n:
  1336                           	callstack 0
  1337                           
  1338                           ; 8 bytes @ 0x33
  1339   000133                     	ds	3
  1340   000136                     round@level_str:
  1341                           	callstack 0
  1342                           
  1343                           ; 10 bytes @ 0x36
  1344   000136                     	ds	5
  1345   00013B                     dtoa@s:
  1346                           	callstack 0
  1347                           
  1348                           ; 1 bytes @ 0x3B
  1349   00013B                     	ds	1
  1350   00013C                     dtoa@i:
  1351                           	callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x3C
  1354   00013C                     	ds	2
  1355   00013E                     vfpfcnvrt@fp:
  1356                           	callstack 0
  1357                           
  1358                           ; 2 bytes @ 0x3E
  1359   00013E                     	ds	2
  1360   000140                     round@lenStr:
  1361                           	callstack 0
  1362   000140                     vfpfcnvrt@fmt:
  1363                           	callstack 0
  1364                           
  1365                           ; 2 bytes @ 0x40
  1366   000140                     	ds	2
  1367   000142                     vfpfcnvrt@ap:
  1368                           	callstack 0
  1369                           
  1370                           ; 2 bytes @ 0x42
  1371   000142                     	ds	2
  1372   000144                     ??_vfpfcnvrt:
  1373                           
  1374                           ; 1 bytes @ 0x44
  1375   000144                     	ds	2
  1376   000146                     vfpfcnvrt@convarg:
  1377                           	callstack 0
  1378                           
  1379                           ; 8 bytes @ 0x46
  1380   000146                     	ds	8
  1381   00014E                     vfpfcnvrt@cp:
  1382                           	callstack 0
  1383                           
  1384                           ; 2 bytes @ 0x4E
  1385   00014E                     	ds	2
  1386   000150                     ?_vfprintf:
  1387                           	callstack 0
  1388   000150                     vfprintf@fp:
  1389                           	callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x50
  1392   000150                     	ds	2
  1393   000152                     vfprintf@fmt:
  1394                           	callstack 0
  1395                           
  1396                           ; 2 bytes @ 0x52
  1397   000152                     	ds	2
  1398   000154                     vfprintf@ap:
  1399                           	callstack 0
  1400                           
  1401                           ; 2 bytes @ 0x54
  1402   000154                     	ds	2
  1403   000156                     vfprintf@cfmt:
  1404                           	callstack 0
  1405                           
  1406                           ; 2 bytes @ 0x56
  1407   000156                     	ds	2
  1408   000158                     ?_sprintf:
  1409                           	callstack 0
  1410   000158                     sprintf@s:
  1411                           	callstack 0
  1412                           
  1413                           ; 2 bytes @ 0x58
  1414   000158                     	ds	2
  1415   00015A                     sprintf@fmt:
  1416                           	callstack 0
  1417                           
  1418                           ; 2 bytes @ 0x5A
  1419   00015A                     	ds	8
  1420   000162                     sprintf@ap:
  1421                           	callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x62
  1424   000162                     	ds	2
  1425   000164                     sprintf@f:
  1426                           	callstack 0
  1427                           
  1428                           ; 11 bytes @ 0x64
  1429   000164                     	ds	11
  1430   00016F                     ??_count_score:
  1431                           
  1432                           ; 1 bytes @ 0x6F
  1433   00016F                     	ds	2
  1434   000171                     main@lenStr:
  1435                           	callstack 0
  1436                           
  1437                           ; 2 bytes @ 0x71
  1438   000171                     	ds	2
  1439                           
  1440                           	psect	cstackBANK0
  1441   000080                     __pcstackBANK0:
  1442                           	callstack 0
  1443   000080                     ISR@s:
  1444                           	callstack 0
  1445                           
  1446                           ; 50 bytes @ 0x0
  1447   000080                     	ds	50
  1448   0000B2                     ISR@value:
  1449                           	callstack 0
  1450                           
  1451                           ; 2 bytes @ 0x32
  1452   0000B2                     	ds	2
  1453   0000B4                     ISR@range:
  1454                           	callstack 0
  1455                           
  1456                           ; 2 bytes @ 0x34
  1457   0000B4                     	ds	2
  1458   0000B6                     ISR@temp:
  1459                           	callstack 0
  1460                           
  1461                           ; 2 bytes @ 0x36
  1462   0000B6                     	ds	2
  1463   0000B8                     i1UART_Write@data:
  1464                           	callstack 0
  1465   0000B8                     i1ClearBuffer@i:
  1466                           	callstack 0
  1467                           
  1468                           ; 2 bytes @ 0x38
  1469   0000B8                     	ds	2
  1470   0000BA                     
  1471                           ; 1 bytes @ 0x3A
  1472   0000BA                     	ds	1
  1473   0000BB                     ??_Lo_ISR:
  1474                           
  1475                           ; 1 bytes @ 0x3B
  1476   0000BB                     	ds	5
  1477                           
  1478                           	psect	cstackCOMRAM
  1479   000001                     __pcstackCOMRAM:
  1480                           	callstack 0
  1481   000001                     ?i2___awdiv:
  1482                           	callstack 0
  1483   000001                     ?i2___aodiv:
  1484                           	callstack 0
  1485   000001                     ?i2___aomod:
  1486                           	callstack 0
  1487   000001                     i2UART_Write@data:
  1488                           	callstack 0
  1489   000001                     i2___awdiv@dividend:
  1490                           	callstack 0
  1491   000001                     i2fputc@c:
  1492                           	callstack 0
  1493   000001                     i2___aodiv@dividend:
  1494                           	callstack 0
  1495   000001                     i2___aomod@dividend:
  1496                           	callstack 0
  1497                           
  1498                           ; 8 bytes @ 0x0
  1499   000001                     	ds	1
  1500   000002                     i2UART_Write_Text@text:
  1501                           	callstack 0
  1502                           
  1503                           ; 2 bytes @ 0x1
  1504   000002                     	ds	1
  1505   000003                     i2___awdiv@divisor:
  1506                           	callstack 0
  1507   000003                     i2fputc@fp:
  1508                           	callstack 0
  1509                           
  1510                           ; 2 bytes @ 0x2
  1511   000003                     	ds	1
  1512   000004                     ??i2_UART_Write_Text:
  1513                           
  1514                           ; 1 bytes @ 0x3
  1515   000004                     	ds	1
  1516   000005                     ??i2_fputc:
  1517   000005                     i2___awdiv@counter:
  1518                           	callstack 0
  1519                           
  1520                           ; 1 bytes @ 0x4
  1521   000005                     	ds	1
  1522   000006                     i2___awdiv@sign:
  1523                           	callstack 0
  1524   000006                     i2UART_Write_Text@i:
  1525                           	callstack 0
  1526                           
  1527                           ; 2 bytes @ 0x5
  1528   000006                     	ds	1
  1529   000007                     i2___awdiv@quotient:
  1530                           	callstack 0
  1531                           
  1532                           ; 2 bytes @ 0x6
  1533   000007                     	ds	2
  1534   000009                     i2___aodiv@divisor:
  1535                           	callstack 0
  1536   000009                     i2___aomod@divisor:
  1537                           	callstack 0
  1538                           
  1539                           ; 8 bytes @ 0x8
  1540   000009                     	ds	1
  1541   00000A                     i2fputs@s:
  1542                           	callstack 0
  1543                           
  1544                           ; 2 bytes @ 0x9
  1545   00000A                     	ds	2
  1546   00000C                     i2fputs@fp:
  1547                           	callstack 0
  1548                           
  1549                           ; 2 bytes @ 0xB
  1550   00000C                     	ds	2
  1551   00000E                     i2fputs@c:
  1552                           	callstack 0
  1553                           
  1554                           ; 1 bytes @ 0xD
  1555   00000E                     	ds	1
  1556   00000F                     i2fputs@i:
  1557                           	callstack 0
  1558                           
  1559                           ; 2 bytes @ 0xE
  1560   00000F                     	ds	2
  1561   000011                     i2___aodiv@counter:
  1562                           	callstack 0
  1563   000011                     i2___aomod@counter:
  1564                           	callstack 0
  1565   000011                     i2pad@fp:
  1566                           	callstack 0
  1567                           
  1568                           ; 2 bytes @ 0x10
  1569   000011                     	ds	1
  1570   000012                     i2___aodiv@sign:
  1571                           	callstack 0
  1572   000012                     i2___aomod@sign:
  1573                           	callstack 0
  1574                           
  1575                           ; 1 bytes @ 0x11
  1576   000012                     	ds	1
  1577   000013                     ?i2_abs:
  1578                           	callstack 0
  1579   000013                     i2pad@buf:
  1580                           	callstack 0
  1581   000013                     i2abs@a:
  1582                           	callstack 0
  1583   000013                     i2___aodiv@quotient:
  1584                           	callstack 0
  1585                           
  1586                           ; 8 bytes @ 0x12
  1587   000013                     	ds	2
  1588   000015                     ??i2_abs:
  1589   000015                     i2pad@p:
  1590                           	callstack 0
  1591                           
  1592                           ; 2 bytes @ 0x14
  1593   000015                     	ds	2
  1594   000017                     ??i2_pad:
  1595                           
  1596                           ; 1 bytes @ 0x16
  1597   000017                     	ds	1
  1598   000018                     i2pad@i:
  1599                           	callstack 0
  1600                           
  1601                           ; 2 bytes @ 0x17
  1602   000018                     	ds	2
  1603   00001A                     i2pad@w:
  1604                           	callstack 0
  1605                           
  1606                           ; 2 bytes @ 0x19
  1607   00001A                     	ds	2
  1608   00001C                     i2dtoa@fp:
  1609                           	callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x1B
  1612   00001C                     	ds	2
  1613   00001E                     i2dtoa@d:
  1614                           	callstack 0
  1615                           
  1616                           ; 8 bytes @ 0x1D
  1617   00001E                     	ds	8
  1618   000026                     ??i2_dtoa:
  1619                           
  1620                           ; 1 bytes @ 0x25
  1621   000026                     	ds	8
  1622   00002E                     i2_dtoa$1986:
  1623                           	callstack 0
  1624                           
  1625                           ; 2 bytes @ 0x2D
  1626   00002E                     	ds	2
  1627   000030                     i2dtoa@p:
  1628                           	callstack 0
  1629                           
  1630                           ; 2 bytes @ 0x2F
  1631   000030                     	ds	2
  1632   000032                     i2dtoa@w:
  1633                           	callstack 0
  1634                           
  1635                           ; 2 bytes @ 0x31
  1636   000032                     	ds	2
  1637   000034                     i2dtoa@n:
  1638                           	callstack 0
  1639                           
  1640                           ; 8 bytes @ 0x33
  1641   000034                     	ds	8
  1642   00003C                     i2dtoa@i:
  1643                           	callstack 0
  1644                           
  1645                           ; 2 bytes @ 0x3B
  1646   00003C                     	ds	2
  1647   00003E                     i2dtoa@s:
  1648                           	callstack 0
  1649                           
  1650                           ; 1 bytes @ 0x3D
  1651   00003E                     	ds	1
  1652   00003F                     i2vfpfcnvrt@fp:
  1653                           	callstack 0
  1654                           
  1655                           ; 2 bytes @ 0x3E
  1656   00003F                     	ds	2
  1657   000041                     i2vfpfcnvrt@fmt:
  1658                           	callstack 0
  1659                           
  1660                           ; 2 bytes @ 0x40
  1661   000041                     	ds	2
  1662   000043                     i2vfpfcnvrt@ap:
  1663                           	callstack 0
  1664                           
  1665                           ; 2 bytes @ 0x42
  1666   000043                     	ds	2
  1667   000045                     ??i2_vfpfcnvrt:
  1668                           
  1669                           ; 1 bytes @ 0x44
  1670   000045                     	ds	2
  1671   000047                     i2vfpfcnvrt@convarg:
  1672                           	callstack 0
  1673                           
  1674                           ; 8 bytes @ 0x46
  1675   000047                     	ds	8
  1676   00004F                     i2vfpfcnvrt@cp:
  1677                           	callstack 0
  1678                           
  1679                           ; 2 bytes @ 0x4E
  1680   00004F                     	ds	2
  1681   000051                     ?i2_vfprintf:
  1682                           	callstack 0
  1683   000051                     i2vfprintf@fp:
  1684                           	callstack 0
  1685                           
  1686                           ; 2 bytes @ 0x50
  1687   000051                     	ds	2
  1688   000053                     i2vfprintf@fmt:
  1689                           	callstack 0
  1690                           
  1691                           ; 2 bytes @ 0x52
  1692   000053                     	ds	2
  1693   000055                     i2vfprintf@ap:
  1694                           	callstack 0
  1695                           
  1696                           ; 2 bytes @ 0x54
  1697   000055                     	ds	2
  1698   000057                     i2vfprintf@cfmt:
  1699                           	callstack 0
  1700                           
  1701                           ; 2 bytes @ 0x56
  1702   000057                     	ds	2
  1703   000059                     ?i2_sprintf:
  1704                           	callstack 0
  1705   000059                     i2sprintf@s:
  1706                           	callstack 0
  1707                           
  1708                           ; 2 bytes @ 0x58
  1709   000059                     	ds	2
  1710   00005B                     i2sprintf@fmt:
  1711                           	callstack 0
  1712                           
  1713                           ; 2 bytes @ 0x5A
  1714   00005B                     	ds	4
  1715   00005F                     i2sprintf@ap:
  1716                           	callstack 0
  1717                           
  1718                           ; 2 bytes @ 0x5E
  1719   00005F                     	ds	2
  1720   000061                     i2sprintf@f:
  1721                           	callstack 0
  1722                           
  1723                           ; 11 bytes @ 0x60
  1724   000061                     	ds	11
  1725   00006C                     ??_ISR:
  1726                           
  1727                           ; 1 bytes @ 0x6B
  1728   00006C                     	ds	8
  1729                           
  1730 ;;
  1731 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1732 ;;
  1733 ;; *************** function _main *****************
  1734 ;; Defined at:
  1735 ;;		line 267 in file "main.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;		None
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  lenStr          2  113[BANK1 ] unsigned int 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1749 ;;      Params:         0       0       0       0       0       0       0
  1750 ;;      Locals:         0       0       2       0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0
  1752 ;;      Totals:         0       0       2       0       0       0       0
  1753 ;;Total ram usage:        2 bytes
  1754 ;; Hardware stack levels required when called: 21
  1755 ;; This function calls:
  1756 ;;		_ClearBuffer
  1757 ;;		_GetString
  1758 ;;		_SYSTEM_Initialize
  1759 ;;		_count_score
  1760 ;;		_round
  1761 ;;		_show_result
  1762 ;;		_start
  1763 ;;		_strcpy
  1764 ;;		_strlen
  1765 ;; This function is called by:
  1766 ;;		Startup code after reset
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text0
  1771   001422                     __ptext0:
  1772                           	callstack 0
  1773   001422                     _main:
  1774                           	callstack 10
  1775   001422                     
  1776                           ;main.c: 269: 
  1777   001422  ECC5  F011         	call	_SYSTEM_Initialize	;wreg free
  1778   001426                     
  1779                           ;main.c: 272: 
  1780   001426  84CA               	bsf	202,2,c	;volatile
  1781   001428                     
  1782                           ;main.c: 273: 
  1783   001428  0E03               	movlw	3
  1784   00142A  12CA               	iorwf	202,f,c	;volatile
  1785   00142C                     
  1786                           ;main.c: 274: 
  1787   00142C  0E78               	movlw	120
  1788   00142E  12CA               	iorwf	202,f,c	;volatile
  1789   001430                     
  1790                           ;main.c: 277:     CCPR1L = 21;
  1791   001430  50BD               	movf	189,w,c	;volatile
  1792   001432  0BF0               	andlw	-16
  1793   001434  090C               	iorlw	12
  1794   001436  6EBD               	movwf	189,c	;volatile
  1795   001438                     
  1796                           ;main.c: 279: 
  1797   001438  9494               	bcf	148,2,c	;volatile
  1798   00143A                     
  1799                           ;main.c: 280: 
  1800   00143A  948B               	bcf	139,2,c	;volatile
  1801   00143C                     
  1802                           ;main.c: 288: 
  1803   00143C  0E4D               	movlw	77
  1804   00143E  6ECB               	movwf	203,c	;volatile
  1805   001440                     
  1806                           ;main.c: 295:     INTCONbits.PEIE = 1;
  1807   001440  0E15               	movlw	21
  1808   001442  6EBE               	movwf	190,c	;volatile
  1809   001444                     
  1810                           ;main.c: 296:     INTCONbits.GIE = 1;
  1811   001444  50BD               	movf	189,w,c	;volatile
  1812   001446  0BCF               	andlw	-49
  1813   001448  0920               	iorlw	32
  1814   00144A  6EBD               	movwf	189,c	;volatile
  1815   00144C                     
  1816                           ;main.c: 299:     TRISBbits.RB0 = 1;
  1817   00144C  98C1               	bcf	193,4,c	;volatile
  1818   00144E                     
  1819                           ;main.c: 300:     TRISBbits.RB1 = 1;
  1820   00144E  9AC1               	bcf	193,5,c	;volatile
  1821   001450                     
  1822                           ;main.c: 301:     TRISBbits.RB2 = 1;
  1823   001450  50C1               	movf	193,w,c	;volatile
  1824   001452  0BF0               	andlw	-16
  1825   001454  090E               	iorlw	14
  1826   001456  6EC1               	movwf	193,c	;volatile
  1827   001458                     
  1828                           ;main.c: 302:     TRISBbits.RB3 = 1;
  1829   001458  0EC3               	movlw	-61
  1830   00145A  16C2               	andwf	194,f,c	;volatile
  1831   00145C                     
  1832                           ;main.c: 303:     TRISBbits.RB4 = 1;
  1833   00145C  0EF8               	movlw	-8
  1834   00145E  16C0               	andwf	192,f,c	;volatile
  1835   001460                     
  1836                           ;main.c: 304:     TRISBbits.RB5 = 1;
  1837   001460  50C0               	movf	192,w,c	;volatile
  1838   001462  0BC7               	andlw	-57
  1839   001464  0908               	iorlw	8
  1840   001466  6EC0               	movwf	192,c	;volatile
  1841   001468                     
  1842                           ;main.c: 307: 
  1843   001468  80C2               	bsf	194,0,c	;volatile
  1844   00146A                     
  1845                           ;main.c: 308: 
  1846   00146A  9EC0               	bcf	192,7,c	;volatile
  1847   00146C                     
  1848                           ;main.c: 311: 
  1849   00146C  8C9D               	bsf	157,6,c	;volatile
  1850   00146E                     
  1851                           ;main.c: 312: 
  1852   00146E  9C9E               	bcf	158,6,c	;volatile
  1853   001470                     
  1854                           ;main.c: 313:     start();
  1855   001470  8CF2               	bsf	242,6,c	;volatile
  1856   001472                     
  1857                           ;main.c: 314: 
  1858   001472  8EF2               	bsf	242,7,c	;volatile
  1859   001474                     
  1860                           ;main.c: 317: 
  1861   001474  8093               	bsf	147,0,c	;volatile
  1862   001476                     
  1863                           ;main.c: 318:     while(1) {
  1864   001476  8293               	bsf	147,1,c	;volatile
  1865   001478                     
  1866                           ;main.c: 319:         strcpy(str, GetString());
  1867   001478  8493               	bsf	147,2,c	;volatile
  1868   00147A                     
  1869                           ;main.c: 320:         unsigned int lenStr = strlen(str);
  1870   00147A  8693               	bsf	147,3,c	;volatile
  1871   00147C                     
  1872                           ;main.c: 321:         if(lenStr == 5 && str[0]=='s' && str[1]=='t' && str[2]=='a' && str
      +                          [3]=='r' && str[4]=='t')
  1873   00147C  8893               	bsf	147,4,c	;volatile
  1874   00147E                     
  1875                           ;main.c: 322:         {
  1876   00147E  8A93               	bsf	147,5,c	;volatile
  1877   001480                     
  1878                           ;main.c: 323:             begin = 1;
  1879   001480  8096               	bsf	150,0,c	;volatile
  1880   001482                     
  1881                           ;main.c: 324:             round();
  1882   001482  8296               	bsf	150,1,c	;volatile
  1883   001484                     
  1884                           ;main.c: 327:             count_score();
  1885   001484  0E00               	movlw	0
  1886   001486  6E95               	movwf	149,c	;volatile
  1887   001488                     
  1888                           ;main.c: 328:             show_result();
  1889   001488  0E00               	movlw	0
  1890   00148A  6E8C               	movwf	140,c	;volatile
  1891   00148C                     
  1892                           ;main.c: 331: 
  1893   00148C  EC60  F011         	call	_start	;wreg free
  1894   001490                     
  1895                           ;main.c: 334: }
  1896   001490  82C2               	bsf	194,1,c	;volatile
  1897   001492                     l4088:
  1898   001492  0EB0               	movlw	low _str
  1899   001494  0101               	movlb	1	; () banked
  1900   001496  6F02               	movwf	strcpy@dest& (0+255),b
  1901   001498  0E01               	movlw	high _str
  1902   00149A  6F03               	movwf	(strcpy@dest+1)& (0+255),b
  1903   00149C  ECEE  F011         	call	_GetString	;wreg free
  1904   0014A0  C100  F104         	movff	?_GetString,strcpy@src
  1905   0014A4  C101  F105         	movff	?_GetString+1,strcpy@src+1
  1906   0014A8  EC20  F011         	call	_strcpy	;wreg free
  1907   0014AC  0EB0               	movlw	low _str
  1908   0014AE  0101               	movlb	1	; () banked
  1909   0014B0  6F00               	movwf	strlen@s& (0+255),b
  1910   0014B2  0E01               	movlw	high _str
  1911   0014B4  6F01               	movwf	(strlen@s+1)& (0+255),b
  1912   0014B6  EC7F  F011         	call	_strlen	;wreg free
  1913   0014BA  C100  F171         	movff	?_strlen,main@lenStr
  1914   0014BE  C101  F172         	movff	?_strlen+1,main@lenStr+1
  1915   0014C2  0E05               	movlw	5
  1916   0014C4  0101               	movlb	1	; () banked
  1917   0014C6  1971               	xorwf	main@lenStr& (0+255),w,b
  1918   0014C8  1172               	iorwf	(main@lenStr+1)& (0+255),w,b
  1919   0014CA  A4D8               	btfss	status,2,c
  1920   0014CC  EF6A  F00A         	goto	u4301
  1921   0014D0  EF6C  F00A         	goto	u4300
  1922   0014D4                     u4301:
  1923   0014D4  EF49  F00A         	goto	l4088
  1924   0014D8                     u4300:
  1925   0014D8                     
  1926                           ; BSR set to: 1
  1927   0014D8  0E73               	movlw	115
  1928   0014DA  19B0               	xorwf	_str& (0+255),w,b
  1929   0014DC  A4D8               	btfss	status,2,c
  1930   0014DE  EF73  F00A         	goto	u4311
  1931   0014E2  EF75  F00A         	goto	u4310
  1932   0014E6                     u4311:
  1933   0014E6  EF49  F00A         	goto	l4088
  1934   0014EA                     u4310:
  1935   0014EA                     
  1936                           ; BSR set to: 1
  1937   0014EA  0E74               	movlw	116
  1938   0014EC  19B1               	xorwf	(_str+1)& (0+255),w,b
  1939   0014EE  A4D8               	btfss	status,2,c
  1940   0014F0  EF7C  F00A         	goto	u4321
  1941   0014F4  EF7E  F00A         	goto	u4320
  1942   0014F8                     u4321:
  1943   0014F8  EF49  F00A         	goto	l4088
  1944   0014FC                     u4320:
  1945   0014FC                     
  1946                           ; BSR set to: 1
  1947   0014FC  0E61               	movlw	97
  1948   0014FE  19B2               	xorwf	(_str+2)& (0+255),w,b
  1949   001500  A4D8               	btfss	status,2,c
  1950   001502  EF85  F00A         	goto	u4331
  1951   001506  EF87  F00A         	goto	u4330
  1952   00150A                     u4331:
  1953   00150A  EF49  F00A         	goto	l4088
  1954   00150E                     u4330:
  1955   00150E                     
  1956                           ; BSR set to: 1
  1957   00150E  0E72               	movlw	114
  1958   001510  19B3               	xorwf	(_str+3)& (0+255),w,b
  1959   001512  A4D8               	btfss	status,2,c
  1960   001514  EF8E  F00A         	goto	u4341
  1961   001518  EF90  F00A         	goto	u4340
  1962   00151C                     u4341:
  1963   00151C  EF49  F00A         	goto	l4088
  1964   001520                     u4340:
  1965   001520                     
  1966                           ; BSR set to: 1
  1967   001520  0E74               	movlw	116
  1968   001522  19B4               	xorwf	(_str+4)& (0+255),w,b
  1969   001524  A4D8               	btfss	status,2,c
  1970   001526  EF97  F00A         	goto	u4351
  1971   00152A  EF99  F00A         	goto	u4350
  1972   00152E                     u4351:
  1973   00152E  EF49  F00A         	goto	l4088
  1974   001532                     u4350:
  1975   001532                     
  1976                           ; BSR set to: 1
  1977   001532  0E00               	movlw	0
  1978   001534  6F78               	movwf	(_begin+1)& (0+255),b
  1979   001536  0E01               	movlw	1
  1980   001538  6F77               	movwf	_begin& (0+255),b
  1981   00153A                     
  1982                           ; BSR set to: 1
  1983   00153A  ECFC  F001         	call	_round	;wreg free
  1984   00153E  0E04               	movlw	4
  1985   001540  6EBE               	movwf	190,c	;volatile
  1986   001542  50BD               	movf	189,w,c	;volatile
  1987   001544  0BCF               	andlw	-49
  1988   001546  0910               	iorlw	16
  1989   001548  6EBD               	movwf	189,c	;volatile
  1990   00154A  EC38  F000         	call	_count_score	;wreg free
  1991   00154E  EC4C  F00B         	call	_show_result	;wreg free
  1992   001552  EC98  F010         	call	_ClearBuffer	;wreg free
  1993   001556  EF49  F00A         	goto	l4088
  1994   00155A  EF36  F000         	goto	start
  1995   00155E                     __end_of_main:
  1996                           	callstack 0
  1997                           
  1998 ;; *************** function _start *****************
  1999 ;; Defined at:
  2000 ;;		line 82 in file "main.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2014 ;;      Params:         0       0       0       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0       0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0
  2017 ;;      Totals:         0       0       0       0       0       0       0
  2018 ;;Total ram usage:        0 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; Hardware stack levels required when called: 14
  2021 ;; This function calls:
  2022 ;;		_ClearBuffer
  2023 ;;		_UART_Write_Text
  2024 ;; This function is called by:
  2025 ;;		_main
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           	psect	text1
  2030   0022C0                     __ptext1:
  2031                           	callstack 0
  2032   0022C0                     _start:
  2033                           	callstack 16
  2034   0022C0                     
  2035                           ;main.c: 84:              char txt[30];
  2036   0022C0  0E10               	movlw	low STR_4
  2037   0022C2  0101               	movlb	1	; () banked
  2038   0022C4  6F01               	movwf	UART_Write_Text@text& (0+255),b
  2039   0022C6  0E7D               	movlw	high STR_4
  2040   0022C8  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  2041   0022CA  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  2042                           
  2043                           ;main.c: 85:              sprintf(txt, "\n 0 scored = %d, not_scored = %d\r", scored, no
      +                          _scored);
  2044   0022CE  0E90               	movlw	low STR_5
  2045   0022D0  0101               	movlb	1	; () banked
  2046   0022D2  6F01               	movwf	UART_Write_Text@text& (0+255),b
  2047   0022D4  0E7B               	movlw	high STR_5
  2048   0022D6  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  2049   0022D8  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  2050                           
  2051                           ;main.c: 86:              UART_Write_Text(txt);
  2052   0022DC  0EFD               	movlw	low STR_6
  2053   0022DE  0101               	movlb	1	; () banked
  2054   0022E0  6F01               	movwf	UART_Write_Text@text& (0+255),b
  2055   0022E2  0E7A               	movlw	high STR_6
  2056   0022E4  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  2057   0022E6  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  2058                           
  2059                           ;main.c: 87:              _delay((unsigned long)((500)*(4000000/4000000.0)));
  2060   0022EA  0E31               	movlw	low STR_7
  2061   0022EC  0101               	movlb	1	; () banked
  2062   0022EE  6F01               	movwf	UART_Write_Text@text& (0+255),b
  2063   0022F0  0E7D               	movlw	high STR_7
  2064   0022F2  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  2065   0022F4  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  2066   0022F8                     
  2067                           ;main.c: 88:         }
  2068   0022F8  EC98  F010         	call	_ClearBuffer	;wreg free
  2069   0022FC  0012               	return		;funcret
  2070   0022FE                     __end_of_start:
  2071                           	callstack 0
  2072                           
  2073 ;; *************** function _show_result *****************
  2074 ;; Defined at:
  2075 ;;		line 203 in file "main.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2089 ;;      Params:         0       0       0       0       0       0       0
  2090 ;;      Locals:         0       0       0       0       0       0       0
  2091 ;;      Temps:          0       0       0       0       0       0       0
  2092 ;;      Totals:         0       0       0       0       0       0       0
  2093 ;;Total ram usage:        0 bytes
  2094 ;; Hardware stack levels used: 1
  2095 ;; Hardware stack levels required when called: 14
  2096 ;; This function calls:
  2097 ;;		_ClearBuffer
  2098 ;;		_UART_Write_Text
  2099 ;; This function is called by:
  2100 ;;		_main
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           	psect	text2
  2105   001698                     __ptext2:
  2106                           	callstack 0
  2107   001698                     _show_result:
  2108                           	callstack 16
  2109   001698                     
  2110                           ;main.c: 204:     ClearBuffer();
  2111   001698  0101               	movlb	1	; () banked
  2112   00169A  0579               	decf	_difficulty& (0+255),w,b
  2113   00169C  117A               	iorwf	(_difficulty+1)& (0+255),w,b
  2114   00169E  A4D8               	btfss	status,2,c
  2115   0016A0  EF54  F00B         	goto	u4011
  2116   0016A4  EF56  F00B         	goto	u4010
  2117   0016A8                     u4011:
  2118   0016A8  EF68  F00B         	goto	l3894
  2119   0016AC                     u4010:
  2120   0016AC                     
  2121                           ; BSR set to: 1
  2122   0016AC  0E02               	movlw	2
  2123   0016AE  0102               	movlb	2	; () banked
  2124   0016B0  65F3               	cpfsgt	_scored& (0+255),b
  2125   0016B2  EF5D  F00B         	goto	u4021
  2126   0016B6  EF5F  F00B         	goto	u4020
  2127   0016BA                     u4021:
  2128   0016BA  EF68  F00B         	goto	l3894
  2129   0016BE                     u4020:
  2130   0016BE                     
  2131                           ; BSR set to: 2
  2132                           ;main.c: 205: }
  2133   0016BE  0EA0               	movlw	low STR_17
  2134   0016C0  0101               	movlb	1	; () banked
  2135   0016C2  6F01               	movwf	UART_Write_Text@text& (0+255),b
  2136   0016C4  0E7D               	movlw	high STR_17
  2137   0016C6  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  2138   0016C8  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  2139   0016CC  EFA9  F00B         	goto	l3908
  2140   0016D0                     l3894:
  2141   0016D0  0E02               	movlw	2
  2142   0016D2  0101               	movlb	1	; () banked
  2143   0016D4  1979               	xorwf	_difficulty& (0+255),w,b
  2144   0016D6  117A               	iorwf	(_difficulty+1)& (0+255),w,b
  2145   0016D8  A4D8               	btfss	status,2,c
  2146   0016DA  EF71  F00B         	goto	u4031
  2147   0016DE  EF73  F00B         	goto	u4030
  2148   0016E2                     u4031:
  2149   0016E2  EF85  F00B         	goto	l3900
  2150   0016E6                     u4030:
  2151   0016E6                     
  2152                           ; BSR set to: 1
  2153   0016E6  0E01               	movlw	1
  2154   0016E8  0102               	movlb	2	; () banked
  2155   0016EA  65F3               	cpfsgt	_scored& (0+255),b
  2156   0016EC  EF7A  F00B         	goto	u4041
  2157   0016F0  EF7C  F00B         	goto	u4040
  2158   0016F4                     u4041:
  2159   0016F4  EF85  F00B         	goto	l3900
  2160   0016F8                     u4040:
  2161   0016F8                     
  2162                           ; BSR set to: 2
  2163                           ;main.c: 207: void round()
  2164   0016F8  0EA0               	movlw	low STR_17
  2165   0016FA  0101               	movlb	1	; () banked
  2166   0016FC  6F01               	movwf	UART_Write_Text@text& (0+255),b
  2167   0016FE  0E7D               	movlw	high STR_17
  2168   001700  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  2169   001702  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  2170   001706  EFA9  F00B         	goto	l3908
  2171   00170A                     l3900:
  2172   00170A  0E03               	movlw	3
  2173   00170C  0101               	movlb	1	; () banked
  2174   00170E  1979               	xorwf	_difficulty& (0+255),w,b
  2175   001710  117A               	iorwf	(_difficulty+1)& (0+255),w,b
  2176   001712  A4D8               	btfss	status,2,c
  2177   001714  EF8E  F00B         	goto	u4051
  2178   001718  EF90  F00B         	goto	u4050
  2179   00171C                     u4051:
  2180   00171C  EFA2  F00B         	goto	l3906
  2181   001720                     u4050:
  2182   001720                     
  2183                           ; BSR set to: 1
  2184   001720  0102               	movlb	2	; () banked
  2185   001722  51F3               	movf	_scored& (0+255),w,b
  2186   001724  B4D8               	btfsc	status,2,c
  2187   001726  EF97  F00B         	goto	u4061
  2188   00172A  EF99  F00B         	goto	u4060
  2189   00172E                     u4061:
  2190   00172E  EFA2  F00B         	goto	l3906
  2191   001732                     u4060:
  2192   001732                     
  2193                           ; BSR set to: 2
  2194                           ;main.c: 209:     UART_Write_Text("\n\nSelect difficulty level:\n\r");
  2195   001732  0EA0               	movlw	low STR_17
  2196   001734  0101               	movlb	1	; () banked
  2197   001736  6F01               	movwf	UART_Write_Text@text& (0+255),b
  2198   001738  0E7D               	movlw	high STR_17
  2199   00173A  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  2200   00173C  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  2201   001740  EFA9  F00B         	goto	l3908
  2202   001744                     l3906:
  2203                           
  2204                           ;main.c: 211:     ClearBuffer();
  2205   001744  0E8D               	movlw	low STR_20
  2206   001746  0101               	movlb	1	; () banked
  2207   001748  6F01               	movwf	UART_Write_Text@text& (0+255),b
  2208   00174A  0E7D               	movlw	high STR_20
  2209   00174C  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  2210   00174E  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  2211   001752                     l3908:
  2212                           
  2213                           ;main.c: 215:     int leds[8] = {1,2,4,8,16,32,64,128};
  2214   001752  0E15               	movlw	21
  2215   001754  6EBE               	movwf	190,c	;volatile
  2216   001756                     
  2217                           ;main.c: 216:     while(begin)
  2218   001756  50BD               	movf	189,w,c	;volatile
  2219   001758  0BCF               	andlw	-49
  2220   00175A  0920               	iorlw	32
  2221   00175C  6EBD               	movwf	189,c	;volatile
  2222   00175E                     
  2223                           ;main.c: 217:     {
  2224   00175E  0E00               	movlw	0
  2225   001760  6E8C               	movwf	140,c	;volatile
  2226   001762                     
  2227                           ;main.c: 218:         strcpy(level_str, GetString());
  2228   001762  0E00               	movlw	0
  2229   001764  0102               	movlb	2	; () banked
  2230   001766  6FF3               	movwf	_scored& (0+255),b
  2231   001768                     
  2232                           ; BSR set to: 2
  2233                           ;main.c: 219:         lenStr = strlen(level_str);
  2234   001768  0E00               	movlw	0
  2235   00176A  6FF2               	movwf	_no_scored& (0+255),b
  2236   00176C                     
  2237                           ; BSR set to: 2
  2238                           ;main.c: 220: 
  2239   00176C  0EB1               	movlw	low STR_21
  2240   00176E  0101               	movlb	1	; () banked
  2241   001770  6F01               	movwf	UART_Write_Text@text& (0+255),b
  2242   001772  0E7D               	movlw	high STR_21
  2243   001774  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  2244   001776  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  2245   00177A                     
  2246                           ;main.c: 221: 
  2247   00177A  0EDE               	movlw	low STR_22
  2248   00177C  0101               	movlb	1	; () banked
  2249   00177E  6F01               	movwf	UART_Write_Text@text& (0+255),b
  2250   001780  0E7B               	movlw	high STR_22
  2251   001782  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  2252   001784  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  2253   001788                     
  2254                           ;main.c: 222: 
  2255   001788  EC98  F010         	call	_ClearBuffer	;wreg free
  2256   00178C  0012               	return		;funcret
  2257   00178E                     __end_of_show_result:
  2258                           	callstack 0
  2259                           
  2260 ;; *************** function _round *****************
  2261 ;; Defined at:
  2262 ;;		line 225 in file "main.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;		None
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  leds           16   38[BANK1 ] int [8]
  2267 ;;  level_str      10   54[BANK1 ] unsigned char [10]
  2268 ;;  lenStr          2   64[BANK1 ] unsigned int 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      void 
  2271 ;; Registers used:
  2272 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2278 ;;      Params:         0       0       0       0       0       0       0
  2279 ;;      Locals:         0       0      28       0       0       0       0
  2280 ;;      Temps:          0       0       0       0       0       0       0
  2281 ;;      Totals:         0       0      28       0       0       0       0
  2282 ;;Total ram usage:       28 bytes
  2283 ;; Hardware stack levels used: 1
  2284 ;; Hardware stack levels required when called: 15
  2285 ;; This function calls:
  2286 ;;		_ClearBuffer
  2287 ;;		_GetString
  2288 ;;		_UART_Write_Text
  2289 ;;		_shuffle
  2290 ;;		_strcpy
  2291 ;;		_strlen
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text3
  2298   0003F8                     __ptext3:
  2299                           	callstack 0
  2300   0003F8                     _round:
  2301                           	callstack 15
  2302   0003F8                     
  2303                           ;main.c: 227:             difficulty = 1;
  2304   0003F8  0E70               	movlw	low STR_23
  2305   0003FA  0101               	movlb	1	; () banked
  2306   0003FC  6F01               	movwf	UART_Write_Text@text& (0+255),b
  2307   0003FE  0E7D               	movlw	high STR_23
  2308   000400  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  2309   000402  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  2310                           
  2311                           ;main.c: 228:             shuffle(leds, 8);
  2312   000406  0E66               	movlw	low STR_24
  2313   000408  0101               	movlb	1	; () banked
  2314   00040A  6F01               	movwf	UART_Write_Text@text& (0+255),b
  2315   00040C  0E7B               	movlw	high STR_24
  2316   00040E  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  2317   000410  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  2318   000414                     
  2319                           ;main.c: 229:             LATD = leds[0] + leds[1] + leds[2] + leds[3] + leds[4] + leds[
      +                          5];
  2320   000414  EC98  F010         	call	_ClearBuffer	;wreg free
  2321   000418                     
  2322                           ;main.c: 230:             begin = 0;;main.c: 231:             ClearBuffer();
  2323   000418  0E36               	movlw	low round@level_str
  2324   00041A  0101               	movlb	1	; () banked
  2325   00041C  6F02               	movwf	strcpy@dest& (0+255),b
  2326   00041E  0E01               	movlw	high round@level_str
  2327   000420  6F03               	movwf	(strcpy@dest+1)& (0+255),b
  2328   000422  ECEE  F011         	call	_GetString	;wreg free
  2329   000426  C100  F104         	movff	?_GetString,strcpy@src
  2330   00042A  C101  F105         	movff	?_GetString+1,strcpy@src+1
  2331   00042E  EC20  F011         	call	_strcpy	;wreg free
  2332   000432  0EB0               	movlw	low _str
  2333   000434  0101               	movlb	1	; () banked
  2334   000436  6F00               	movwf	strlen@s& (0+255),b
  2335   000438  0E01               	movlw	high _str
  2336   00043A  6F01               	movwf	(strlen@s+1)& (0+255),b
  2337   00043C  EC7F  F011         	call	_strlen	;wreg free
  2338   000440                     
  2339                           ;main.c: 233:         {
  2340   000440  EE21  F0C8         	lfsr	2,round@F3251
  2341   000444  EE11  F026         	lfsr	1,round@leds
  2342   000448  0E0F               	movlw	15
  2343   00044A                     u4071:
  2344   00044A  CFDB FFE3          	movff	plusw2,plusw1
  2345   00044E  06E8               	decf	wreg,f,c
  2346   000450  E2FC               	bc	u4071
  2347                           
  2348                           ;main.c: 234:             difficulty = 2;
  2349   000452  EF4B  F003         	goto	l4010
  2350   000456                     l3934:
  2351                           
  2352                           ; BSR set to: 1
  2353                           ;main.c: 235:             shuffle(leds, 8);;main.c: 236:             LATD = leds[0] + le
      +                          ds[1] + leds[2] + leds[3];
  2354   000456  0E36               	movlw	low round@level_str
  2355   000458  6F02               	movwf	strcpy@dest& (0+255),b
  2356   00045A  0E01               	movlw	high round@level_str
  2357   00045C  6F03               	movwf	(strcpy@dest+1)& (0+255),b
  2358   00045E  ECEE  F011         	call	_GetString	;wreg free
  2359   000462  C100  F104         	movff	?_GetString,strcpy@src
  2360   000466  C101  F105         	movff	?_GetString+1,strcpy@src+1
  2361   00046A  EC20  F011         	call	_strcpy	;wreg free
  2362   00046E                     
  2363                           ;main.c: 237:             begin = 0;
  2364   00046E  0E36               	movlw	low round@level_str
  2365   000470  0101               	movlb	1	; () banked
  2366   000472  6F00               	movwf	strlen@s& (0+255),b
  2367   000474  0E01               	movlw	high round@level_str
  2368   000476  6F01               	movwf	(strlen@s+1)& (0+255),b
  2369   000478  EC7F  F011         	call	_strlen	;wreg free
  2370   00047C  C100  F140         	movff	?_strlen,round@lenStr
  2371   000480  C101  F141         	movff	?_strlen+1,round@lenStr+1
  2372   000484                     
  2373                           ;main.c: 243:             LATD = leds[0] + leds[1];
  2374   000484  0E06               	movlw	6
  2375   000486  0101               	movlb	1	; () banked
  2376   000488  1940               	xorwf	round@lenStr& (0+255),w,b
  2377   00048A  1141               	iorwf	(round@lenStr+1)& (0+255),w,b
  2378   00048C  A4D8               	btfss	status,2,c
  2379   00048E  EF4B  F002         	goto	u4081
  2380   000492  EF4D  F002         	goto	u4080
  2381   000496                     u4081:
  2382   000496  EFA1  F002         	goto	l3962
  2383   00049A                     u4080:
  2384   00049A                     
  2385                           ; BSR set to: 1
  2386   00049A  0E6C               	movlw	108
  2387   00049C  1936               	xorwf	round@level_str& (0+255),w,b
  2388   00049E  A4D8               	btfss	status,2,c
  2389   0004A0  EF54  F002         	goto	u4091
  2390   0004A4  EF56  F002         	goto	u4090
  2391   0004A8                     u4091:
  2392   0004A8  EFA1  F002         	goto	l3962
  2393   0004AC                     u4090:
  2394   0004AC                     
  2395                           ; BSR set to: 1
  2396   0004AC  0E65               	movlw	101
  2397   0004AE  1937               	xorwf	(round@level_str+1)& (0+255),w,b
  2398   0004B0  A4D8               	btfss	status,2,c
  2399   0004B2  EF5D  F002         	goto	u4101
  2400   0004B6  EF5F  F002         	goto	u4100
  2401   0004BA                     u4101:
  2402   0004BA  EFA1  F002         	goto	l3962
  2403   0004BE                     u4100:
  2404   0004BE                     
  2405                           ; BSR set to: 1
  2406   0004BE  0E76               	movlw	118
  2407   0004C0  1938               	xorwf	(round@level_str+2)& (0+255),w,b
  2408   0004C2  A4D8               	btfss	status,2,c
  2409   0004C4  EF66  F002         	goto	u4111
  2410   0004C8  EF68  F002         	goto	u4110
  2411   0004CC                     u4111:
  2412   0004CC  EFA1  F002         	goto	l3962
  2413   0004D0                     u4110:
  2414   0004D0                     
  2415                           ; BSR set to: 1
  2416   0004D0  0E65               	movlw	101
  2417   0004D2  1939               	xorwf	(round@level_str+3)& (0+255),w,b
  2418   0004D4  A4D8               	btfss	status,2,c
  2419   0004D6  EF6F  F002         	goto	u4121
  2420   0004DA  EF71  F002         	goto	u4120
  2421   0004DE                     u4121:
  2422   0004DE  EFA1  F002         	goto	l3962
  2423   0004E2                     u4120:
  2424   0004E2                     
  2425                           ; BSR set to: 1
  2426   0004E2  0E6C               	movlw	108
  2427   0004E4  193A               	xorwf	(round@level_str+4)& (0+255),w,b
  2428   0004E6  A4D8               	btfss	status,2,c
  2429   0004E8  EF78  F002         	goto	u4131
  2430   0004EC  EF7A  F002         	goto	u4130
  2431   0004F0                     u4131:
  2432   0004F0  EFA1  F002         	goto	l3962
  2433   0004F4                     u4130:
  2434   0004F4                     
  2435                           ; BSR set to: 1
  2436   0004F4  0E31               	movlw	49
  2437   0004F6  193B               	xorwf	(round@level_str+5)& (0+255),w,b
  2438   0004F8  A4D8               	btfss	status,2,c
  2439   0004FA  EF81  F002         	goto	u4141
  2440   0004FE  EF83  F002         	goto	u4140
  2441   000502                     u4141:
  2442   000502  EFA1  F002         	goto	l3962
  2443   000506                     u4140:
  2444   000506                     
  2445                           ; BSR set to: 1
  2446                           ;main.c: 244:             begin = 0;;main.c: 245:             ClearBuffer();
  2447   000506  0E00               	movlw	0
  2448   000508  6F7A               	movwf	(_difficulty+1)& (0+255),b
  2449   00050A  0E01               	movlw	1
  2450   00050C  6F79               	movwf	_difficulty& (0+255),b
  2451   00050E                     
  2452                           ; BSR set to: 1
  2453                           ;main.c: 246:         }
  2454   00050E  0E26               	movlw	low round@leds
  2455   000510  6F1A               	movwf	shuffle@array& (0+255),b
  2456   000512  0E01               	movlw	high round@leds
  2457   000514  6F1B               	movwf	(shuffle@array+1)& (0+255),b
  2458   000516  0E00               	movlw	0
  2459   000518  6F1D               	movwf	(shuffle@n+1)& (0+255),b
  2460   00051A  0E08               	movlw	8
  2461   00051C  6F1C               	movwf	shuffle@n& (0+255),b
  2462   00051E  ECC7  F00B         	call	_shuffle	;wreg free
  2463   000522                     
  2464                           ;main.c: 247:     }
  2465   000522  0101               	movlb	1	; () banked
  2466   000524  5128               	movf	(round@leds+2)& (0+255),w,b
  2467   000526  252A               	addwf	(round@leds+4)& (0+255),w,b
  2468   000528  252C               	addwf	(round@leds+6)& (0+255),w,b
  2469   00052A  252E               	addwf	(round@leds+8)& (0+255),w,b
  2470   00052C  2530               	addwf	(round@leds+10)& (0+255),w,b
  2471   00052E  2526               	addwf	round@leds& (0+255),w,b
  2472   000530  6E8C               	movwf	140,c	;volatile
  2473   000532                     l3958:
  2474                           
  2475                           ; BSR set to: 1
  2476                           ;main.c: 248: }
  2477   000532  0E00               	movlw	0
  2478   000534  6F78               	movwf	(_begin+1)& (0+255),b
  2479   000536  0E00               	movlw	0
  2480   000538  6F77               	movwf	_begin& (0+255),b
  2481   00053A                     
  2482                           ; BSR set to: 1
  2483                           ;main.c: 249: void main(void)
  2484   00053A  EC98  F010         	call	_ClearBuffer	;wreg free
  2485                           
  2486                           ;main.c: 250: {
  2487   00053E  EF4B  F003         	goto	l4010
  2488   000542                     l3962:
  2489                           
  2490                           ; BSR set to: 1
  2491   000542  0E06               	movlw	6
  2492   000544  1940               	xorwf	round@lenStr& (0+255),w,b
  2493   000546  1141               	iorwf	(round@lenStr+1)& (0+255),w,b
  2494   000548  A4D8               	btfss	status,2,c
  2495   00054A  EFA9  F002         	goto	u4151
  2496   00054E  EFAB  F002         	goto	u4150
  2497   000552                     u4151:
  2498   000552  EFF7  F002         	goto	l3986
  2499   000556                     u4150:
  2500   000556                     
  2501                           ; BSR set to: 1
  2502   000556  0E6C               	movlw	108
  2503   000558  1936               	xorwf	round@level_str& (0+255),w,b
  2504   00055A  A4D8               	btfss	status,2,c
  2505   00055C  EFB2  F002         	goto	u4161
  2506   000560  EFB4  F002         	goto	u4160
  2507   000564                     u4161:
  2508   000564  EFF7  F002         	goto	l3986
  2509   000568                     u4160:
  2510   000568                     
  2511                           ; BSR set to: 1
  2512   000568  0E65               	movlw	101
  2513   00056A  1937               	xorwf	(round@level_str+1)& (0+255),w,b
  2514   00056C  A4D8               	btfss	status,2,c
  2515   00056E  EFBB  F002         	goto	u4171
  2516   000572  EFBD  F002         	goto	u4170
  2517   000576                     u4171:
  2518   000576  EFF7  F002         	goto	l3986
  2519   00057A                     u4170:
  2520   00057A                     
  2521                           ; BSR set to: 1
  2522   00057A  0E76               	movlw	118
  2523   00057C  1938               	xorwf	(round@level_str+2)& (0+255),w,b
  2524   00057E  A4D8               	btfss	status,2,c
  2525   000580  EFC4  F002         	goto	u4181
  2526   000584  EFC6  F002         	goto	u4180
  2527   000588                     u4181:
  2528   000588  EFF7  F002         	goto	l3986
  2529   00058C                     u4180:
  2530   00058C                     
  2531                           ; BSR set to: 1
  2532   00058C  0E65               	movlw	101
  2533   00058E  1939               	xorwf	(round@level_str+3)& (0+255),w,b
  2534   000590  A4D8               	btfss	status,2,c
  2535   000592  EFCD  F002         	goto	u4191
  2536   000596  EFCF  F002         	goto	u4190
  2537   00059A                     u4191:
  2538   00059A  EFF7  F002         	goto	l3986
  2539   00059E                     u4190:
  2540   00059E                     
  2541                           ; BSR set to: 1
  2542   00059E  0E6C               	movlw	108
  2543   0005A0  193A               	xorwf	(round@level_str+4)& (0+255),w,b
  2544   0005A2  A4D8               	btfss	status,2,c
  2545   0005A4  EFD6  F002         	goto	u4201
  2546   0005A8  EFD8  F002         	goto	u4200
  2547   0005AC                     u4201:
  2548   0005AC  EFF7  F002         	goto	l3986
  2549   0005B0                     u4200:
  2550   0005B0                     
  2551                           ; BSR set to: 1
  2552   0005B0  0E32               	movlw	50
  2553   0005B2  193B               	xorwf	(round@level_str+5)& (0+255),w,b
  2554   0005B4  A4D8               	btfss	status,2,c
  2555   0005B6  EFDF  F002         	goto	u4211
  2556   0005BA  EFE1  F002         	goto	u4210
  2557   0005BE                     u4211:
  2558   0005BE  EFF7  F002         	goto	l3986
  2559   0005C2                     u4210:
  2560   0005C2                     
  2561                           ; BSR set to: 1
  2562                           ;main.c: 251:     SYSTEM_Initialize() ;;main.c: 252: 
  2563   0005C2  0E00               	movlw	0
  2564   0005C4  6F7A               	movwf	(_difficulty+1)& (0+255),b
  2565   0005C6  0E02               	movlw	2
  2566   0005C8  6F79               	movwf	_difficulty& (0+255),b
  2567   0005CA                     
  2568                           ; BSR set to: 1
  2569                           ;main.c: 253: 
  2570   0005CA  0E26               	movlw	low round@leds
  2571   0005CC  6F1A               	movwf	shuffle@array& (0+255),b
  2572   0005CE  0E01               	movlw	high round@leds
  2573   0005D0  6F1B               	movwf	(shuffle@array+1)& (0+255),b
  2574   0005D2  0E00               	movlw	0
  2575   0005D4  6F1D               	movwf	(shuffle@n+1)& (0+255),b
  2576   0005D6  0E08               	movlw	8
  2577   0005D8  6F1C               	movwf	shuffle@n& (0+255),b
  2578   0005DA  ECC7  F00B         	call	_shuffle	;wreg free
  2579   0005DE                     
  2580                           ;main.c: 254:     T2CONbits.TMR2ON = 0b1;
  2581   0005DE  0101               	movlb	1	; () banked
  2582   0005E0  5128               	movf	(round@leds+2)& (0+255),w,b
  2583   0005E2  252A               	addwf	(round@leds+4)& (0+255),w,b
  2584   0005E4  252C               	addwf	(round@leds+6)& (0+255),w,b
  2585   0005E6  2526               	addwf	round@leds& (0+255),w,b
  2586   0005E8  6E8C               	movwf	140,c	;volatile
  2587   0005EA  EF99  F002         	goto	l3958
  2588   0005EE                     l3986:
  2589                           
  2590                           ; BSR set to: 1
  2591   0005EE  0E06               	movlw	6
  2592   0005F0  1940               	xorwf	round@lenStr& (0+255),w,b
  2593   0005F2  1141               	iorwf	(round@lenStr+1)& (0+255),w,b
  2594   0005F4  A4D8               	btfss	status,2,c
  2595   0005F6  EFFF  F002         	goto	u4221
  2596   0005FA  EF01  F003         	goto	u4220
  2597   0005FE                     u4221:
  2598   0005FE  EF4B  F003         	goto	l145
  2599   000602                     u4220:
  2600   000602                     
  2601                           ; BSR set to: 1
  2602   000602  0E6C               	movlw	108
  2603   000604  1936               	xorwf	round@level_str& (0+255),w,b
  2604   000606  A4D8               	btfss	status,2,c
  2605   000608  EF08  F003         	goto	u4231
  2606   00060C  EF0A  F003         	goto	u4230
  2607   000610                     u4231:
  2608   000610  EF4B  F003         	goto	l145
  2609   000614                     u4230:
  2610   000614                     
  2611                           ; BSR set to: 1
  2612   000614  0E65               	movlw	101
  2613   000616  1937               	xorwf	(round@level_str+1)& (0+255),w,b
  2614   000618  A4D8               	btfss	status,2,c
  2615   00061A  EF11  F003         	goto	u4241
  2616   00061E  EF13  F003         	goto	u4240
  2617   000622                     u4241:
  2618   000622  EF4B  F003         	goto	l145
  2619   000626                     u4240:
  2620   000626                     
  2621                           ; BSR set to: 1
  2622   000626  0E76               	movlw	118
  2623   000628  1938               	xorwf	(round@level_str+2)& (0+255),w,b
  2624   00062A  A4D8               	btfss	status,2,c
  2625   00062C  EF1A  F003         	goto	u4251
  2626   000630  EF1C  F003         	goto	u4250
  2627   000634                     u4251:
  2628   000634  EF4B  F003         	goto	l145
  2629   000638                     u4250:
  2630   000638                     
  2631                           ; BSR set to: 1
  2632   000638  0E65               	movlw	101
  2633   00063A  1939               	xorwf	(round@level_str+3)& (0+255),w,b
  2634   00063C  A4D8               	btfss	status,2,c
  2635   00063E  EF23  F003         	goto	u4261
  2636   000642  EF25  F003         	goto	u4260
  2637   000646                     u4261:
  2638   000646  EF4B  F003         	goto	l145
  2639   00064A                     u4260:
  2640   00064A                     
  2641                           ; BSR set to: 1
  2642   00064A  0E6C               	movlw	108
  2643   00064C  193A               	xorwf	(round@level_str+4)& (0+255),w,b
  2644   00064E  A4D8               	btfss	status,2,c
  2645   000650  EF2C  F003         	goto	u4271
  2646   000654  EF2E  F003         	goto	u4270
  2647   000658                     u4271:
  2648   000658  EF4B  F003         	goto	l145
  2649   00065C                     u4270:
  2650   00065C                     
  2651                           ; BSR set to: 1
  2652   00065C  0E33               	movlw	51
  2653   00065E  193B               	xorwf	(round@level_str+5)& (0+255),w,b
  2654   000660  A4D8               	btfss	status,2,c
  2655   000662  EF35  F003         	goto	u4281
  2656   000666  EF37  F003         	goto	u4280
  2657   00066A                     u4281:
  2658   00066A  EF4B  F003         	goto	l145
  2659   00066E                     u4280:
  2660   00066E                     
  2661                           ; BSR set to: 1
  2662                           ;main.c: 258: ;main.c: 259:     CCP1CONbits.CCP1M = 0b1100;
  2663   00066E  0E00               	movlw	0
  2664   000670  6F7A               	movwf	(_difficulty+1)& (0+255),b
  2665   000672  0E02               	movlw	2
  2666   000674  6F79               	movwf	_difficulty& (0+255),b
  2667   000676                     
  2668                           ; BSR set to: 1
  2669                           ;main.c: 260: 
  2670   000676  0E26               	movlw	low round@leds
  2671   000678  6F1A               	movwf	shuffle@array& (0+255),b
  2672   00067A  0E01               	movlw	high round@leds
  2673   00067C  6F1B               	movwf	(shuffle@array+1)& (0+255),b
  2674   00067E  0E00               	movlw	0
  2675   000680  6F1D               	movwf	(shuffle@n+1)& (0+255),b
  2676   000682  0E08               	movlw	8
  2677   000684  6F1C               	movwf	shuffle@n& (0+255),b
  2678   000686  ECC7  F00B         	call	_shuffle	;wreg free
  2679   00068A                     
  2680                           ;main.c: 261:     TRISCbits.TRISC2 = 0;
  2681   00068A  0101               	movlb	1	; () banked
  2682   00068C  5128               	movf	(round@leds+2)& (0+255),w,b
  2683   00068E  2526               	addwf	round@leds& (0+255),w,b
  2684   000690  6E8C               	movwf	140,c	;volatile
  2685   000692  EF99  F002         	goto	l3958
  2686   000696                     l145:
  2687   000696                     l4010:
  2688                           
  2689                           ;main.c: 234:             difficulty = 2;
  2690   000696  0101               	movlb	1	; () banked
  2691   000698  5177               	movf	_begin& (0+255),w,b
  2692   00069A  1178               	iorwf	(_begin+1)& (0+255),w,b
  2693   00069C  A4D8               	btfss	status,2,c
  2694   00069E  EF53  F003         	goto	u4291
  2695   0006A2  EF55  F003         	goto	u4290
  2696   0006A6                     u4291:
  2697   0006A6  EF2B  F002         	goto	l3934
  2698   0006AA                     u4290:
  2699   0006AA                     
  2700                           ; BSR set to: 1
  2701   0006AA  0012               	return		;funcret
  2702   0006AC                     __end_of_round:
  2703                           	callstack 0
  2704                           
  2705 ;; *************** function _strlen *****************
  2706 ;; Defined at:
  2707 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  s               2    0[BANK1 ] PTR const unsigned char 
  2710 ;;		 -> str(20), round@level_str(10), 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  a               2    2[BANK1 ] PTR const unsigned char 
  2713 ;;		 -> str(20), round@level_str(10), 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  2    0[BANK1 ] unsigned int 
  2716 ;; Registers used:
  2717 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2723 ;;      Params:         0       0       2       0       0       0       0
  2724 ;;      Locals:         0       0       2       0       0       0       0
  2725 ;;      Temps:          0       0       0       0       0       0       0
  2726 ;;      Totals:         0       0       4       0       0       0       0
  2727 ;;Total ram usage:        4 bytes
  2728 ;; Hardware stack levels used: 1
  2729 ;; Hardware stack levels required when called: 12
  2730 ;; This function calls:
  2731 ;;		Nothing
  2732 ;; This function is called by:
  2733 ;;		_round
  2734 ;;		_main
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text4
  2739   0022FE                     __ptext4:
  2740                           	callstack 0
  2741   0022FE                     _strlen:
  2742                           	callstack 18
  2743   0022FE  C100  F102         	movff	strlen@s,strlen@a
  2744   002302  C101  F103         	movff	strlen@s+1,strlen@a+1
  2745   002306  EF88  F011         	goto	l3708
  2746   00230A                     l3706:
  2747   00230A  0101               	movlb	1	; () banked
  2748   00230C  4B00               	infsnz	strlen@s& (0+255),f,b
  2749   00230E  2B01               	incf	(strlen@s+1)& (0+255),f,b
  2750   002310                     l3708:
  2751   002310  C100  FFD9         	movff	strlen@s,fsr2l
  2752   002314  C101  FFDA         	movff	strlen@s+1,fsr2h
  2753   002318  50DF               	movf	indf2,w,c
  2754   00231A  A4D8               	btfss	status,2,c
  2755   00231C  EF92  F011         	goto	u3821
  2756   002320  EF94  F011         	goto	u3820
  2757   002324                     u3821:
  2758   002324  EF85  F011         	goto	l3706
  2759   002328                     u3820:
  2760   002328  0101               	movlb	1	; () banked
  2761   00232A  5102               	movf	strlen@a& (0+255),w,b
  2762   00232C  5D00               	subwf	strlen@s& (0+255),w,b
  2763   00232E  6F00               	movwf	?_strlen& (0+255),b
  2764   002330  5103               	movf	(strlen@a+1)& (0+255),w,b
  2765   002332  5901               	subwfb	(strlen@s+1)& (0+255),w,b
  2766   002334  6F01               	movwf	(?_strlen+1)& (0+255),b
  2767   002336                     
  2768                           ; BSR set to: 1
  2769   002336  0012               	return		;funcret
  2770   002338                     __end_of_strlen:
  2771                           	callstack 0
  2772                           
  2773 ;; *************** function _strcpy *****************
  2774 ;; Defined at:
  2775 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  dest            2    2[BANK1 ] PTR unsigned char 
  2778 ;;		 -> str(20), round@level_str(10), 
  2779 ;;  src             2    4[BANK1 ] PTR const unsigned char 
  2780 ;;		 -> mystring(20), 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  d               2    8[BANK1 ] PTR unsigned char 
  2783 ;;		 -> str(20), round@level_str(10), 
  2784 ;;  s               2    6[BANK1 ] PTR const unsigned char 
  2785 ;;		 -> mystring(20), 
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  2    2[BANK1 ] PTR unsigned char 
  2788 ;; Registers used:
  2789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2795 ;;      Params:         0       0       4       0       0       0       0
  2796 ;;      Locals:         0       0       4       0       0       0       0
  2797 ;;      Temps:          0       0       0       0       0       0       0
  2798 ;;      Totals:         0       0       8       0       0       0       0
  2799 ;;Total ram usage:        8 bytes
  2800 ;; Hardware stack levels used: 1
  2801 ;; Hardware stack levels required when called: 12
  2802 ;; This function calls:
  2803 ;;		Nothing
  2804 ;; This function is called by:
  2805 ;;		_round
  2806 ;;		_main
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text5
  2811   002240                     __ptext5:
  2812                           	callstack 0
  2813   002240                     _strcpy:
  2814                           	callstack 18
  2815   002240  C104  F106         	movff	strcpy@src,strcpy@s
  2816   002244  C105  F107         	movff	strcpy@src+1,strcpy@s+1
  2817   002248  C102  F108         	movff	strcpy@dest,strcpy@d
  2818   00224C  C103  F109         	movff	strcpy@dest+1,strcpy@d+1
  2819   002250                     l3702:
  2820   002250  C106  FFD9         	movff	strcpy@s,fsr2l
  2821   002254  C107  FFDA         	movff	strcpy@s+1,fsr2h
  2822   002258  0101               	movlb	1	; () banked
  2823   00225A  4B06               	infsnz	strcpy@s& (0+255),f,b
  2824   00225C  2B07               	incf	(strcpy@s+1)& (0+255),f,b
  2825   00225E  C108  FFE1         	movff	strcpy@d,fsr1l
  2826   002262  C109  FFE2         	movff	strcpy@d+1,fsr1h
  2827   002266  4B08               	infsnz	strcpy@d& (0+255),f,b
  2828   002268  2B09               	incf	(strcpy@d+1)& (0+255),f,b
  2829   00226A  CFDF FFE7          	movff	indf2,indf1
  2830   00226E  50E7               	movf	indf1,w,c
  2831   002270  A4D8               	btfss	status,2,c
  2832   002272  EF3D  F011         	goto	u3811
  2833   002276  EF3F  F011         	goto	u3810
  2834   00227A                     u3811:
  2835   00227A  EF28  F011         	goto	l3702
  2836   00227E                     u3810:
  2837   00227E                     
  2838                           ; BSR set to: 1
  2839   00227E  0012               	return		;funcret
  2840   002280                     __end_of_strcpy:
  2841                           	callstack 0
  2842                           
  2843 ;; *************** function _shuffle *****************
  2844 ;; Defined at:
  2845 ;;		line 67 in file "main.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  array           2   26[BANK1 ] PTR int 
  2848 ;;		 -> round@leds(16), 
  2849 ;;  n               2   28[BANK1 ] unsigned int 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  j               2   34[BANK1 ] unsigned int 
  2852 ;;  t               2   32[BANK1 ] int 
  2853 ;;  i               2   36[BANK1 ] unsigned int 
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2863 ;;      Params:         0       0       4       0       0       0       0
  2864 ;;      Locals:         0       0       6       0       0       0       0
  2865 ;;      Temps:          0       0       2       0       0       0       0
  2866 ;;      Totals:         0       0      12       0       0       0       0
  2867 ;;Total ram usage:       12 bytes
  2868 ;; Hardware stack levels used: 1
  2869 ;; Hardware stack levels required when called: 14
  2870 ;; This function calls:
  2871 ;;		___awdiv
  2872 ;;		___lwdiv
  2873 ;;		_rand
  2874 ;; This function is called by:
  2875 ;;		_round
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text6
  2880   00178E                     __ptext6:
  2881                           	callstack 0
  2882   00178E                     _shuffle:
  2883                           	callstack 15
  2884   00178E                     
  2885                           ;main.c: 67:     UART_Write_Text("Please follow our instructions to play\n\r");;main.c: 
      +                          68:     UART_Write_Text("Now you have 10 seconds to choose the playing rounds, \n\r");;m
      +                          ain.c: 69:     UART_Write_Text("use the Variable Resister...\n\n\r");
  2886   00178E  0101               	movlb	1	; () banked
  2887   001790  511D               	movf	(shuffle@n+1)& (0+255),w,b
  2888   001792  E109               	bnz	u3780
  2889   001794  0E02               	movlw	2
  2890   001796  5D1C               	subwf	shuffle@n& (0+255),w,b
  2891   001798  A0D8               	btfss	status,0,c
  2892   00179A  EFD1  F00B         	goto	u3781
  2893   00179E  EFD3  F00B         	goto	u3780
  2894   0017A2                     u3781:
  2895   0017A2  EF3E  F00C         	goto	l90
  2896   0017A6                     u3780:
  2897   0017A6                     
  2898                           ; BSR set to: 1
  2899                           ;main.c: 70:     ClearBuffer();;main.c: 71: };main.c: 72: 
  2900   0017A6  0E00               	movlw	0
  2901   0017A8  6F25               	movwf	(shuffle@i+1)& (0+255),b
  2902   0017AA  0E00               	movlw	0
  2903   0017AC  6F24               	movwf	shuffle@i& (0+255),b
  2904   0017AE  EF2D  F00C         	goto	l3680
  2905   0017B2                     l3670:
  2906                           
  2907                           ; BSR set to: 1
  2908                           ;main.c: 73: void count_score(){;main.c: 74:     scored = 0;
  2909   0017B2  EC07  F00F         	call	_rand	;wreg free
  2910   0017B6  C10C  F112         	movff	?_rand,___awdiv@dividend
  2911   0017BA  C10D  F113         	movff	?_rand+1,___awdiv@dividend+1
  2912   0017BE  0101               	movlb	1	; () banked
  2913   0017C0  5124               	movf	shuffle@i& (0+255),w,b
  2914   0017C2  5D1C               	subwf	shuffle@n& (0+255),w,b
  2915   0017C4  6F02               	movwf	___lwdiv@divisor& (0+255),b
  2916   0017C6  5125               	movf	(shuffle@i+1)& (0+255),w,b
  2917   0017C8  591D               	subwfb	(shuffle@n+1)& (0+255),w,b
  2918   0017CA  6F03               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2919   0017CC  0E7F               	movlw	127
  2920   0017CE  6F01               	movwf	(___lwdiv@dividend+1)& (0+255),b
  2921   0017D0  6900               	setf	___lwdiv@dividend& (0+255),b
  2922   0017D2  ECCC  F00E         	call	___lwdiv	;wreg free
  2923   0017D6  0E01               	movlw	1
  2924   0017D8  0101               	movlb	1	; () banked
  2925   0017DA  2500               	addwf	?___lwdiv& (0+255),w,b
  2926   0017DC  6F14               	movwf	___awdiv@divisor& (0+255),b
  2927   0017DE  0E00               	movlw	0
  2928   0017E0  2101               	addwfc	(?___lwdiv+1)& (0+255),w,b
  2929   0017E2  6F15               	movwf	(___awdiv@divisor+1)& (0+255),b
  2930   0017E4  EC0A  F00D         	call	___awdiv	;wreg free
  2931   0017E8  0101               	movlb	1	; () banked
  2932   0017EA  5124               	movf	shuffle@i& (0+255),w,b
  2933   0017EC  2512               	addwf	?___awdiv& (0+255),w,b
  2934   0017EE  6F22               	movwf	shuffle@j& (0+255),b
  2935   0017F0  5125               	movf	(shuffle@i+1)& (0+255),w,b
  2936   0017F2  2113               	addwfc	(?___awdiv+1)& (0+255),w,b
  2937   0017F4  6F23               	movwf	(shuffle@j+1)& (0+255),b
  2938   0017F6                     
  2939                           ; BSR set to: 1
  2940                           ;main.c: 75:     no_scored = 0;
  2941   0017F6  90D8               	bcf	status,0,c
  2942   0017F8  3522               	rlcf	shuffle@j& (0+255),w,b
  2943   0017FA  6ED9               	movwf	fsr2l,c
  2944   0017FC  3523               	rlcf	(shuffle@j+1)& (0+255),w,b
  2945   0017FE  6EDA               	movwf	fsr2h,c
  2946   001800  511A               	movf	shuffle@array& (0+255),w,b
  2947   001802  26D9               	addwf	fsr2l,f,c
  2948   001804  511B               	movf	(shuffle@array+1)& (0+255),w,b
  2949   001806  22DA               	addwfc	fsr2h,f,c
  2950   001808  CFDE F120          	movff	postinc2,shuffle@t
  2951   00180C  CFDD F121          	movff	postdec2,shuffle@t+1
  2952   001810                     
  2953                           ; BSR set to: 1
  2954                           ;main.c: 76: 
  2955   001810  90D8               	bcf	status,0,c
  2956   001812  3524               	rlcf	shuffle@i& (0+255),w,b
  2957   001814  6ED9               	movwf	fsr2l,c
  2958   001816  3525               	rlcf	(shuffle@i+1)& (0+255),w,b
  2959   001818  6EDA               	movwf	fsr2h,c
  2960   00181A  511A               	movf	shuffle@array& (0+255),w,b
  2961   00181C  26D9               	addwf	fsr2l,f,c
  2962   00181E  511B               	movf	(shuffle@array+1)& (0+255),w,b
  2963   001820  22DA               	addwfc	fsr2h,f,c
  2964   001822  90D8               	bcf	status,0,c
  2965   001824  3522               	rlcf	shuffle@j& (0+255),w,b
  2966   001826  6EE1               	movwf	fsr1l,c
  2967   001828  3523               	rlcf	(shuffle@j+1)& (0+255),w,b
  2968   00182A  6EE2               	movwf	fsr1h,c
  2969   00182C  511A               	movf	shuffle@array& (0+255),w,b
  2970   00182E  26E1               	addwf	fsr1l,f,c
  2971   001830  511B               	movf	(shuffle@array+1)& (0+255),w,b
  2972   001832  22E2               	addwfc	fsr1h,f,c
  2973   001834  CFDE FFE6          	movff	postinc2,postinc1
  2974   001838  CFDD FFE5          	movff	postdec2,postdec1
  2975   00183C                     
  2976                           ; BSR set to: 1
  2977                           ;main.c: 77:     while(1){
  2978   00183C  90D8               	bcf	status,0,c
  2979   00183E  3524               	rlcf	shuffle@i& (0+255),w,b
  2980   001840  6ED9               	movwf	fsr2l,c
  2981   001842  3525               	rlcf	(shuffle@i+1)& (0+255),w,b
  2982   001844  6EDA               	movwf	fsr2h,c
  2983   001846  511A               	movf	shuffle@array& (0+255),w,b
  2984   001848  26D9               	addwf	fsr2l,f,c
  2985   00184A  511B               	movf	(shuffle@array+1)& (0+255),w,b
  2986   00184C  22DA               	addwfc	fsr2h,f,c
  2987   00184E  C120  FFDE         	movff	shuffle@t,postinc2
  2988   001852  C121  FFDD         	movff	shuffle@t+1,postdec2
  2989   001856                     
  2990                           ; BSR set to: 1
  2991                           ;main.c: 78:         if(PORTBbits.RB0 == 0){
  2992   001856  4B24               	infsnz	shuffle@i& (0+255),f,b
  2993   001858  2B25               	incf	(shuffle@i+1)& (0+255),f,b
  2994   00185A                     l3680:
  2995                           
  2996                           ; BSR set to: 1
  2997   00185A  0EFF               	movlw	255
  2998   00185C  251C               	addwf	shuffle@n& (0+255),w,b
  2999   00185E  6F1E               	movwf	??_shuffle& (0+255),b
  3000   001860  0EFF               	movlw	255
  3001   001862  211D               	addwfc	(shuffle@n+1)& (0+255),w,b
  3002   001864  6F1F               	movwf	(??_shuffle+1)& (0+255),b
  3003   001866  511E               	movf	??_shuffle& (0+255),w,b
  3004   001868  5D24               	subwf	shuffle@i& (0+255),w,b
  3005   00186A  511F               	movf	(??_shuffle+1)& (0+255),w,b
  3006   00186C  5925               	subwfb	(shuffle@i+1)& (0+255),w,b
  3007   00186E  A0D8               	btfss	status,0,c
  3008   001870  EF3C  F00C         	goto	u3791
  3009   001874  EF3E  F00C         	goto	u3790
  3010   001878                     u3791:
  3011   001878  EFD9  F00B         	goto	l3670
  3012   00187C                     u3790:
  3013   00187C                     l90:
  3014                           
  3015                           ; BSR set to: 1
  3016   00187C  0012               	return		;funcret
  3017   00187E                     __end_of_shuffle:
  3018                           	callstack 0
  3019                           
  3020 ;; *************** function _rand *****************
  3021 ;; Defined at:
  3022 ;;		line 11 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;		None
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  2   12[BANK1 ] int 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3036 ;;      Params:         0       0       2       0       0       0       0
  3037 ;;      Locals:         0       0       0       0       0       0       0
  3038 ;;      Temps:          0       0       4       0       0       0       0
  3039 ;;      Totals:         0       0       6       0       0       0       0
  3040 ;;Total ram usage:        6 bytes
  3041 ;; Hardware stack levels used: 1
  3042 ;; Hardware stack levels required when called: 13
  3043 ;; This function calls:
  3044 ;;		___lmul
  3045 ;; This function is called by:
  3046 ;;		_shuffle
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text7
  3051   001E0E                     __ptext7:
  3052                           	callstack 0
  3053   001E0E                     _rand:
  3054                           	callstack 15
  3055   001E0E  C1C4  F100         	movff	_seed,___lmul@multiplier
  3056   001E12  C1C5  F101         	movff	_seed+1,___lmul@multiplier+1
  3057   001E16  C1C6  F102         	movff	_seed+2,___lmul@multiplier+2
  3058   001E1A  C1C7  F103         	movff	_seed+3,___lmul@multiplier+3
  3059   001E1E  0E2D               	movlw	45
  3060   001E20  0101               	movlb	1	; () banked
  3061   001E22  6F04               	movwf	___lmul@multiplicand& (0+255),b
  3062   001E24  0E7F               	movlw	127
  3063   001E26  6F05               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3064   001E28  0E95               	movlw	149
  3065   001E2A  6F06               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3066   001E2C  0E4C               	movlw	76
  3067   001E2E  6F07               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3068   001E30  EC3F  F00F         	call	___lmul	;wreg free
  3069   001E34  0E01               	movlw	1
  3070   001E36  0101               	movlb	1	; () banked
  3071   001E38  2500               	addwf	?___lmul& (0+255),w,b
  3072   001E3A  6FC4               	movwf	_seed& (0+255),b
  3073   001E3C  0E00               	movlw	0
  3074   001E3E  2101               	addwfc	(?___lmul+1)& (0+255),w,b
  3075   001E40  6FC5               	movwf	(_seed+1)& (0+255),b
  3076   001E42  0E00               	movlw	0
  3077   001E44  2102               	addwfc	(?___lmul+2)& (0+255),w,b
  3078   001E46  6FC6               	movwf	(_seed+2)& (0+255),b
  3079   001E48  0E00               	movlw	0
  3080   001E4A  2103               	addwfc	(?___lmul+3)& (0+255),w,b
  3081   001E4C  6FC7               	movwf	(_seed+3)& (0+255),b
  3082   001E4E                     
  3083                           ; BSR set to: 1
  3084   001E4E  C1C4  F10E         	movff	_seed,??_rand
  3085   001E52  C1C5  F10F         	movff	_seed+1,??_rand+1
  3086   001E56  C1C6  F110         	movff	_seed+2,??_rand+2
  3087   001E5A  C1C7  F111         	movff	_seed+3,??_rand+3
  3088   001E5E  0E12               	movlw	18
  3089   001E60  EF37  F00F         	goto	u3630
  3090   001E64                     u3635:
  3091   001E64  90D8               	bcf	status,0,c
  3092   001E66  3311               	rrcf	(??_rand+3)& (0+255),f,b
  3093   001E68  3310               	rrcf	(??_rand+2)& (0+255),f,b
  3094   001E6A  330F               	rrcf	(??_rand+1)& (0+255),f,b
  3095   001E6C  330E               	rrcf	??_rand& (0+255),f,b
  3096   001E6E                     u3630:
  3097   001E6E  2EE8               	decfsz	wreg,f,c
  3098   001E70  EF32  F00F         	goto	u3635
  3099   001E74  C10E  F10C         	movff	??_rand,?_rand
  3100   001E78  C10F  F10D         	movff	??_rand+1,?_rand+1
  3101   001E7C                     
  3102                           ; BSR set to: 1
  3103   001E7C  0012               	return		;funcret
  3104   001E7E                     __end_of_rand:
  3105                           	callstack 0
  3106                           
  3107 ;; *************** function ___lmul *****************
  3108 ;; Defined at:
  3109 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  multiplier      4    0[BANK1 ] unsigned long 
  3112 ;;  multiplicand    4    4[BANK1 ] unsigned long 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  product         4    8[BANK1 ] unsigned long 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  4    0[BANK1 ] unsigned long 
  3117 ;; Registers used:
  3118 ;;		wreg, status,2, status,0
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3124 ;;      Params:         0       0       8       0       0       0       0
  3125 ;;      Locals:         0       0       4       0       0       0       0
  3126 ;;      Temps:          0       0       0       0       0       0       0
  3127 ;;      Totals:         0       0      12       0       0       0       0
  3128 ;;Total ram usage:       12 bytes
  3129 ;; Hardware stack levels used: 1
  3130 ;; Hardware stack levels required when called: 12
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		_rand
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text8
  3139   001E7E                     __ptext8:
  3140                           	callstack 0
  3141   001E7E                     ___lmul:
  3142                           	callstack 15
  3143   001E7E  0E00               	movlw	0
  3144   001E80  0101               	movlb	1	; () banked
  3145   001E82  6F08               	movwf	___lmul@product& (0+255),b
  3146   001E84  0E00               	movlw	0
  3147   001E86  6F09               	movwf	(___lmul@product+1)& (0+255),b
  3148   001E88  0E00               	movlw	0
  3149   001E8A  6F0A               	movwf	(___lmul@product+2)& (0+255),b
  3150   001E8C  0E00               	movlw	0
  3151   001E8E  6F0B               	movwf	(___lmul@product+3)& (0+255),b
  3152   001E90                     l3522:
  3153                           
  3154                           ; BSR set to: 1
  3155   001E90  A100               	btfss	___lmul@multiplier& (0+255),0,b
  3156   001E92  EF4D  F00F         	goto	u3581
  3157   001E96  EF4F  F00F         	goto	u3580
  3158   001E9A                     u3581:
  3159   001E9A  EF57  F00F         	goto	l3526
  3160   001E9E                     u3580:
  3161   001E9E                     
  3162                           ; BSR set to: 1
  3163   001E9E  5104               	movf	___lmul@multiplicand& (0+255),w,b
  3164   001EA0  2708               	addwf	___lmul@product& (0+255),f,b
  3165   001EA2  5105               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  3166   001EA4  2309               	addwfc	(___lmul@product+1)& (0+255),f,b
  3167   001EA6  5106               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  3168   001EA8  230A               	addwfc	(___lmul@product+2)& (0+255),f,b
  3169   001EAA  5107               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  3170   001EAC  230B               	addwfc	(___lmul@product+3)& (0+255),f,b
  3171   001EAE                     l3526:
  3172                           
  3173                           ; BSR set to: 1
  3174   001EAE  90D8               	bcf	status,0,c
  3175   001EB0  3704               	rlcf	___lmul@multiplicand& (0+255),f,b
  3176   001EB2  3705               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  3177   001EB4  3706               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  3178   001EB6  3707               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  3179   001EB8                     
  3180                           ; BSR set to: 1
  3181   001EB8  90D8               	bcf	status,0,c
  3182   001EBA  3303               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  3183   001EBC  3302               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  3184   001EBE  3301               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  3185   001EC0  3300               	rrcf	___lmul@multiplier& (0+255),f,b
  3186   001EC2  5100               	movf	___lmul@multiplier& (0+255),w,b
  3187   001EC4  1101               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  3188   001EC6  1102               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  3189   001EC8  1103               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  3190   001ECA  A4D8               	btfss	status,2,c
  3191   001ECC  EF6A  F00F         	goto	u3591
  3192   001ED0  EF6C  F00F         	goto	u3590
  3193   001ED4                     u3591:
  3194   001ED4  EF48  F00F         	goto	l3522
  3195   001ED8                     u3590:
  3196   001ED8                     
  3197                           ; BSR set to: 1
  3198   001ED8  C108  F100         	movff	___lmul@product,?___lmul
  3199   001EDC  C109  F101         	movff	___lmul@product+1,?___lmul+1
  3200   001EE0  C10A  F102         	movff	___lmul@product+2,?___lmul+2
  3201   001EE4  C10B  F103         	movff	___lmul@product+3,?___lmul+3
  3202   001EE8                     
  3203                           ; BSR set to: 1
  3204   001EE8  0012               	return		;funcret
  3205   001EEA                     __end_of___lmul:
  3206                           	callstack 0
  3207                           
  3208 ;; *************** function ___lwdiv *****************
  3209 ;; Defined at:
  3210 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  dividend        2    0[BANK1 ] unsigned int 
  3213 ;;  divisor         2    2[BANK1 ] unsigned int 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  quotient        2    5[BANK1 ] unsigned int 
  3216 ;;  counter         1    4[BANK1 ] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  2    0[BANK1 ] unsigned int 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2, status,0
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3226 ;;      Params:         0       0       4       0       0       0       0
  3227 ;;      Locals:         0       0       3       0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0       0       0
  3229 ;;      Totals:         0       0       7       0       0       0       0
  3230 ;;Total ram usage:        7 bytes
  3231 ;; Hardware stack levels used: 1
  3232 ;; Hardware stack levels required when called: 12
  3233 ;; This function calls:
  3234 ;;		Nothing
  3235 ;; This function is called by:
  3236 ;;		_shuffle
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text9
  3241   001D98                     __ptext9:
  3242                           	callstack 0
  3243   001D98                     ___lwdiv:
  3244                           	callstack 16
  3245   001D98  0E00               	movlw	0
  3246   001D9A  0101               	movlb	1	; () banked
  3247   001D9C  6F06               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3248   001D9E  0E00               	movlw	0
  3249   001DA0  6F05               	movwf	___lwdiv@quotient& (0+255),b
  3250   001DA2                     
  3251                           ; BSR set to: 1
  3252   001DA2  5102               	movf	___lwdiv@divisor& (0+255),w,b
  3253   001DA4  1103               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  3254   001DA6  B4D8               	btfsc	status,2,c
  3255   001DA8  EFD8  F00E         	goto	u3711
  3256   001DAC  EFDA  F00E         	goto	u3710
  3257   001DB0                     u3711:
  3258   001DB0  EF02  F00F         	goto	l781
  3259   001DB4                     u3710:
  3260   001DB4                     
  3261                           ; BSR set to: 1
  3262   001DB4  0E01               	movlw	1
  3263   001DB6  6F04               	movwf	___lwdiv@counter& (0+255),b
  3264   001DB8  EFE2  F00E         	goto	l3622
  3265   001DBC                     l3620:
  3266                           
  3267                           ; BSR set to: 1
  3268   001DBC  90D8               	bcf	status,0,c
  3269   001DBE  3702               	rlcf	___lwdiv@divisor& (0+255),f,b
  3270   001DC0  3703               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  3271   001DC2  2B04               	incf	___lwdiv@counter& (0+255),f,b
  3272   001DC4                     l3622:
  3273                           
  3274                           ; BSR set to: 1
  3275   001DC4  AF03               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  3276   001DC6  EFE7  F00E         	goto	u3721
  3277   001DCA  EFE9  F00E         	goto	u3720
  3278   001DCE                     u3721:
  3279   001DCE  EFDE  F00E         	goto	l3620
  3280   001DD2                     u3720:
  3281   001DD2                     l3624:
  3282                           
  3283                           ; BSR set to: 1
  3284   001DD2  90D8               	bcf	status,0,c
  3285   001DD4  3705               	rlcf	___lwdiv@quotient& (0+255),f,b
  3286   001DD6  3706               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3287   001DD8                     
  3288                           ; BSR set to: 1
  3289   001DD8  5102               	movf	___lwdiv@divisor& (0+255),w,b
  3290   001DDA  5D00               	subwf	___lwdiv@dividend& (0+255),w,b
  3291   001DDC  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3292   001DDE  5901               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  3293   001DE0  A0D8               	btfss	status,0,c
  3294   001DE2  EFF5  F00E         	goto	u3731
  3295   001DE6  EFF7  F00E         	goto	u3730
  3296   001DEA                     u3731:
  3297   001DEA  EFFC  F00E         	goto	l3632
  3298   001DEE                     u3730:
  3299   001DEE                     
  3300                           ; BSR set to: 1
  3301   001DEE  5102               	movf	___lwdiv@divisor& (0+255),w,b
  3302   001DF0  5F00               	subwf	___lwdiv@dividend& (0+255),f,b
  3303   001DF2  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3304   001DF4  5B01               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  3305   001DF6                     
  3306                           ; BSR set to: 1
  3307   001DF6  8105               	bsf	___lwdiv@quotient& (0+255),0,b
  3308   001DF8                     l3632:
  3309                           
  3310                           ; BSR set to: 1
  3311   001DF8  90D8               	bcf	status,0,c
  3312   001DFA  3303               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  3313   001DFC  3302               	rrcf	___lwdiv@divisor& (0+255),f,b
  3314   001DFE                     
  3315                           ; BSR set to: 1
  3316   001DFE  2F04               	decfsz	___lwdiv@counter& (0+255),f,b
  3317   001E00  EFE9  F00E         	goto	l3624
  3318   001E04                     l781:
  3319                           
  3320                           ; BSR set to: 1
  3321   001E04  C105  F100         	movff	___lwdiv@quotient,?___lwdiv
  3322   001E08  C106  F101         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3323   001E0C                     
  3324                           ; BSR set to: 1
  3325   001E0C  0012               	return		;funcret
  3326   001E0E                     __end_of___lwdiv:
  3327                           	callstack 0
  3328                           
  3329 ;; *************** function ___awdiv *****************
  3330 ;; Defined at:
  3331 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  dividend        2   18[BANK1 ] int 
  3334 ;;  divisor         2   20[BANK1 ] int 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  quotient        2   24[BANK1 ] int 
  3337 ;;  sign            1   23[BANK1 ] unsigned char 
  3338 ;;  counter         1   22[BANK1 ] unsigned char 
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  2   18[BANK1 ] int 
  3341 ;; Registers used:
  3342 ;;		wreg, status,2, status,0
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3348 ;;      Params:         0       0       4       0       0       0       0
  3349 ;;      Locals:         0       0       4       0       0       0       0
  3350 ;;      Temps:          0       0       0       0       0       0       0
  3351 ;;      Totals:         0       0       8       0       0       0       0
  3352 ;;Total ram usage:        8 bytes
  3353 ;; Hardware stack levels used: 1
  3354 ;; Hardware stack levels required when called: 12
  3355 ;; This function calls:
  3356 ;;		Nothing
  3357 ;; This function is called by:
  3358 ;;		_shuffle
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text10
  3363   001A14                     __ptext10:
  3364                           	callstack 0
  3365   001A14                     ___awdiv:
  3366                           	callstack 16
  3367   001A14  0E00               	movlw	0
  3368   001A16  0101               	movlb	1	; () banked
  3369   001A18  6F17               	movwf	___awdiv@sign& (0+255),b
  3370   001A1A                     
  3371                           ; BSR set to: 1
  3372   001A1A  BF15               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  3373   001A1C  EF14  F00D         	goto	u3650
  3374   001A20  EF12  F00D         	goto	u3651
  3375   001A24                     u3651:
  3376   001A24  EF1A  F00D         	goto	l3578
  3377   001A28                     u3650:
  3378   001A28                     
  3379                           ; BSR set to: 1
  3380   001A28  6D14               	negf	___awdiv@divisor& (0+255),b
  3381   001A2A  1F15               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3382   001A2C  B0D8               	btfsc	status,0,c
  3383   001A2E  2B15               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3384   001A30                     
  3385                           ; BSR set to: 1
  3386   001A30  0E01               	movlw	1
  3387   001A32  6F17               	movwf	___awdiv@sign& (0+255),b
  3388   001A34                     l3578:
  3389                           
  3390                           ; BSR set to: 1
  3391   001A34  BF13               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  3392   001A36  EF21  F00D         	goto	u3660
  3393   001A3A  EF1F  F00D         	goto	u3661
  3394   001A3E                     u3661:
  3395   001A3E  EF27  F00D         	goto	l3584
  3396   001A42                     u3660:
  3397   001A42                     
  3398                           ; BSR set to: 1
  3399   001A42  6D12               	negf	___awdiv@dividend& (0+255),b
  3400   001A44  1F13               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3401   001A46  B0D8               	btfsc	status,0,c
  3402   001A48  2B13               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3403   001A4A                     
  3404                           ; BSR set to: 1
  3405   001A4A  0E01               	movlw	1
  3406   001A4C  1B17               	xorwf	___awdiv@sign& (0+255),f,b
  3407   001A4E                     l3584:
  3408                           
  3409                           ; BSR set to: 1
  3410   001A4E  0E00               	movlw	0
  3411   001A50  6F19               	movwf	(___awdiv@quotient+1)& (0+255),b
  3412   001A52  0E00               	movlw	0
  3413   001A54  6F18               	movwf	___awdiv@quotient& (0+255),b
  3414   001A56                     
  3415                           ; BSR set to: 1
  3416   001A56  5114               	movf	___awdiv@divisor& (0+255),w,b
  3417   001A58  1115               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3418   001A5A  B4D8               	btfsc	status,2,c
  3419   001A5C  EF32  F00D         	goto	u3671
  3420   001A60  EF34  F00D         	goto	u3670
  3421   001A64                     u3671:
  3422   001A64  EF5C  F00D         	goto	l3606
  3423   001A68                     u3670:
  3424   001A68                     
  3425                           ; BSR set to: 1
  3426   001A68  0E01               	movlw	1
  3427   001A6A  6F16               	movwf	___awdiv@counter& (0+255),b
  3428   001A6C  EF3C  F00D         	goto	l3592
  3429   001A70                     l3590:
  3430                           
  3431                           ; BSR set to: 1
  3432   001A70  90D8               	bcf	status,0,c
  3433   001A72  3714               	rlcf	___awdiv@divisor& (0+255),f,b
  3434   001A74  3715               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3435   001A76  2B16               	incf	___awdiv@counter& (0+255),f,b
  3436   001A78                     l3592:
  3437                           
  3438                           ; BSR set to: 1
  3439   001A78  AF15               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3440   001A7A  EF41  F00D         	goto	u3681
  3441   001A7E  EF43  F00D         	goto	u3680
  3442   001A82                     u3681:
  3443   001A82  EF38  F00D         	goto	l3590
  3444   001A86                     u3680:
  3445   001A86                     l3594:
  3446                           
  3447                           ; BSR set to: 1
  3448   001A86  90D8               	bcf	status,0,c
  3449   001A88  3718               	rlcf	___awdiv@quotient& (0+255),f,b
  3450   001A8A  3719               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3451   001A8C                     
  3452                           ; BSR set to: 1
  3453   001A8C  5114               	movf	___awdiv@divisor& (0+255),w,b
  3454   001A8E  5D12               	subwf	___awdiv@dividend& (0+255),w,b
  3455   001A90  5115               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3456   001A92  5913               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3457   001A94  A0D8               	btfss	status,0,c
  3458   001A96  EF4F  F00D         	goto	u3691
  3459   001A9A  EF51  F00D         	goto	u3690
  3460   001A9E                     u3691:
  3461   001A9E  EF56  F00D         	goto	l3602
  3462   001AA2                     u3690:
  3463   001AA2                     
  3464                           ; BSR set to: 1
  3465   001AA2  5114               	movf	___awdiv@divisor& (0+255),w,b
  3466   001AA4  5F12               	subwf	___awdiv@dividend& (0+255),f,b
  3467   001AA6  5115               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3468   001AA8  5B13               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3469   001AAA                     
  3470                           ; BSR set to: 1
  3471   001AAA  8118               	bsf	___awdiv@quotient& (0+255),0,b
  3472   001AAC                     l3602:
  3473                           
  3474                           ; BSR set to: 1
  3475   001AAC  90D8               	bcf	status,0,c
  3476   001AAE  3315               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3477   001AB0  3314               	rrcf	___awdiv@divisor& (0+255),f,b
  3478   001AB2                     
  3479                           ; BSR set to: 1
  3480   001AB2  2F16               	decfsz	___awdiv@counter& (0+255),f,b
  3481   001AB4  EF43  F00D         	goto	l3594
  3482   001AB8                     l3606:
  3483                           
  3484                           ; BSR set to: 1
  3485   001AB8  5117               	movf	___awdiv@sign& (0+255),w,b
  3486   001ABA  B4D8               	btfsc	status,2,c
  3487   001ABC  EF62  F00D         	goto	u3701
  3488   001AC0  EF64  F00D         	goto	u3700
  3489   001AC4                     u3701:
  3490   001AC4  EF68  F00D         	goto	l3610
  3491   001AC8                     u3700:
  3492   001AC8                     
  3493                           ; BSR set to: 1
  3494   001AC8  6D18               	negf	___awdiv@quotient& (0+255),b
  3495   001ACA  1F19               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3496   001ACC  B0D8               	btfsc	status,0,c
  3497   001ACE  2B19               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3498   001AD0                     l3610:
  3499                           
  3500                           ; BSR set to: 1
  3501   001AD0  C118  F112         	movff	___awdiv@quotient,?___awdiv
  3502   001AD4  C119  F113         	movff	___awdiv@quotient+1,?___awdiv+1
  3503   001AD8                     
  3504                           ; BSR set to: 1
  3505   001AD8  0012               	return		;funcret
  3506   001ADA                     __end_of___awdiv:
  3507                           	callstack 0
  3508                           
  3509 ;; *************** function _GetString *****************
  3510 ;; Defined at:
  3511 ;;		line 75 in file "setting_hardaware/uart.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;		None
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;		None
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  2    0[BANK1 ] PTR unsigned char 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3525 ;;      Params:         0       0       2       0       0       0       0
  3526 ;;      Locals:         0       0       0       0       0       0       0
  3527 ;;      Temps:          0       0       0       0       0       0       0
  3528 ;;      Totals:         0       0       2       0       0       0       0
  3529 ;;Total ram usage:        2 bytes
  3530 ;; Hardware stack levels used: 1
  3531 ;; Hardware stack levels required when called: 12
  3532 ;; This function calls:
  3533 ;;		Nothing
  3534 ;; This function is called by:
  3535 ;;		_round
  3536 ;;		_main
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text11
  3541   0023DC                     __ptext11:
  3542                           	callstack 0
  3543   0023DC                     _GetString:
  3544                           	callstack 17
  3545   0023DC                     
  3546                           ;setting_hardaware/uart.c: 76:     return mystring;
  3547   0023DC  0E9C               	movlw	low _mystring
  3548   0023DE  0101               	movlb	1	; () banked
  3549   0023E0  6F00               	movwf	?_GetString& (0+255),b
  3550   0023E2  0E01               	movlw	high _mystring
  3551   0023E4  6F01               	movwf	(?_GetString+1)& (0+255),b
  3552   0023E6                     
  3553                           ; BSR set to: 1
  3554   0023E6  0012               	return		;funcret
  3555   0023E8                     __end_of_GetString:
  3556                           	callstack 0
  3557                           
  3558 ;; *************** function _count_score *****************
  3559 ;; Defined at:
  3560 ;;		line 91 in file "main.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;		None
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  txt            30  210[BANK2 ] unsigned char [30]
  3565 ;;  txt            30  180[BANK2 ] unsigned char [30]
  3566 ;;  txt            30  150[BANK2 ] unsigned char [30]
  3567 ;;  txt            30  120[BANK2 ] unsigned char [30]
  3568 ;;  txt            30   90[BANK2 ] unsigned char [30]
  3569 ;;  txt            30   60[BANK2 ] unsigned char [30]
  3570 ;;  txt            30   30[BANK2 ] unsigned char [30]
  3571 ;;  txt            30    0[BANK2 ] unsigned char [30]
  3572 ;;  seven           2  240[BANK2 ] int 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      void 
  3575 ;; Registers used:
  3576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3582 ;;      Params:         0       0       0       0       0       0       0
  3583 ;;      Locals:         0       0       0     242       0       0       0
  3584 ;;      Temps:          0       0       2       0       0       0       0
  3585 ;;      Totals:         0       0       2     242       0       0       0
  3586 ;;Total ram usage:      244 bytes
  3587 ;; Hardware stack levels used: 1
  3588 ;; Hardware stack levels required when called: 20
  3589 ;; This function calls:
  3590 ;;		_ClearBuffer
  3591 ;;		_UART_Write_Text
  3592 ;;		_sprintf
  3593 ;; This function is called by:
  3594 ;;		_main
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           	psect	text12
  3599   000070                     __ptext12:
  3600                           	callstack 0
  3601   000070                     _count_score:
  3602                           	callstack 10
  3603   000070                     
  3604                           ;main.c: 92:             else{
  3605   000070  0E00               	movlw	0
  3606   000072  0102               	movlb	2	; () banked
  3607   000074  6FF3               	movwf	_scored& (0+255),b
  3608                           
  3609                           ;main.c: 93:                 no_scored++;
  3610   000076  0E00               	movlw	0
  3611   000078  6FF2               	movwf	_no_scored& (0+255),b
  3612   00007A                     l3760:
  3613                           
  3614                           ;main.c: 96:              sprintf(txt, "\n 1 scored = %d, not_scored = %d\r", scored, no
      +                          _scored);
  3615   00007A  B081               	btfsc	129,0,c	;volatile
  3616   00007C  EF42  F000         	goto	u3831
  3617   000080  EF44  F000         	goto	u3830
  3618   000084                     u3831:
  3619   000084  EF6D  F000         	goto	l3774
  3620   000088                     u3830:
  3621   000088                     
  3622                           ;main.c: 97:              UART_Write_Text(txt);
  3623   000088  A08C               	btfss	140,0,c	;volatile
  3624   00008A  EF49  F000         	goto	u3841
  3625   00008E  EF4B  F000         	goto	u3840
  3626   000092                     u3841:
  3627   000092  EF4F  F000         	goto	l3766
  3628   000096                     u3840:
  3629   000096                     
  3630                           ;main.c: 98:              _delay((unsigned long)((500)*(4000000/4000000.0)));
  3631   000096  0102               	movlb	2	; () banked
  3632   000098  2BF3               	incf	_scored& (0+255),f,b
  3633   00009A  EF51  F000         	goto	l3768
  3634   00009E                     l3766:
  3635                           
  3636                           ;main.c: 100:         if(PORTBbits.RB2 == 0){
  3637   00009E  0102               	movlb	2	; () banked
  3638   0000A0  2BF2               	incf	_no_scored& (0+255),f,b
  3639   0000A2                     l3768:
  3640                           
  3641                           ; BSR set to: 2
  3642                           ;main.c: 102:                 scored++;;main.c: 103:             else{
  3643   0000A2  0E00               	movlw	low count_score@txt
  3644   0000A4  0101               	movlb	1	; () banked
  3645   0000A6  6F58               	movwf	sprintf@s& (0+255),b
  3646   0000A8  0E02               	movlw	high count_score@txt
  3647   0000AA  6F59               	movwf	(sprintf@s+1)& (0+255),b
  3648   0000AC  0E22               	movlw	low STR_8
  3649   0000AE  6F5A               	movwf	sprintf@fmt& (0+255),b
  3650   0000B0  0E7C               	movlw	high STR_8
  3651   0000B2  6F5B               	movwf	(sprintf@fmt+1)& (0+255),b
  3652   0000B4  C2F3  F15C         	movff	_scored,?_sprintf+4
  3653   0000B8  6B5D               	clrf	(?_sprintf+5)& (0+255),b
  3654   0000BA  C2F2  F15E         	movff	_no_scored,?_sprintf+6
  3655   0000BE  6B5F               	clrf	(?_sprintf+7)& (0+255),b
  3656   0000C0  ECD4  F00F         	call	_sprintf	;wreg free
  3657   0000C4                     
  3658                           ;main.c: 104:                 no_scored++;
  3659   0000C4  0E00               	movlw	low count_score@txt
  3660   0000C6  0101               	movlb	1	; () banked
  3661   0000C8  6F01               	movwf	UART_Write_Text@text& (0+255),b
  3662   0000CA  0E02               	movlw	high count_score@txt
  3663   0000CC  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  3664   0000CE  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  3665   0000D2                     
  3666                           ;main.c: 105:             }
  3667   0000D2  0EA6               	movlw	166
  3668   0000D4                     u4367:
  3669   0000D4  2EE8               	decfsz	wreg,f,c
  3670   0000D6  D7FE               	bra	u4367
  3671   0000D8  D000               	nop2	
  3672   0000DA                     l3774:
  3673                           
  3674                           ;main.c: 107:              sprintf(txt, "\n 2 scored = %d, not_scored = %d\r", scored, n
      +                          o_scored);
  3675   0000DA  B281               	btfsc	129,1,c	;volatile
  3676   0000DC  EF72  F000         	goto	u3851
  3677   0000E0  EF74  F000         	goto	u3850
  3678   0000E4                     u3851:
  3679   0000E4  EF9D  F000         	goto	l3788
  3680   0000E8                     u3850:
  3681   0000E8                     
  3682                           ;main.c: 108:              UART_Write_Text(txt);
  3683   0000E8  A28C               	btfss	140,1,c	;volatile
  3684   0000EA  EF79  F000         	goto	u3861
  3685   0000EE  EF7B  F000         	goto	u3860
  3686   0000F2                     u3861:
  3687   0000F2  EF7F  F000         	goto	l3780
  3688   0000F6                     u3860:
  3689   0000F6                     
  3690                           ;main.c: 109:              _delay((unsigned long)((500)*(4000000/4000000.0)));
  3691   0000F6  0102               	movlb	2	; () banked
  3692   0000F8  2BF3               	incf	_scored& (0+255),f,b
  3693   0000FA  EF81  F000         	goto	l3782
  3694   0000FE                     l3780:
  3695                           
  3696                           ;main.c: 111:         if(PORTBbits.RB3 == 0){
  3697   0000FE  0102               	movlb	2	; () banked
  3698   000100  2BF2               	incf	_no_scored& (0+255),f,b
  3699   000102                     l3782:
  3700                           
  3701                           ; BSR set to: 2
  3702                           ;main.c: 113:                 scored++;;main.c: 114:             else{
  3703   000102  0E1E               	movlw	low count_score@txt_813
  3704   000104  0101               	movlb	1	; () banked
  3705   000106  6F58               	movwf	sprintf@s& (0+255),b
  3706   000108  0E02               	movlw	high count_score@txt_813
  3707   00010A  6F59               	movwf	(sprintf@s+1)& (0+255),b
  3708   00010C  0E44               	movlw	low STR_9
  3709   00010E  6F5A               	movwf	sprintf@fmt& (0+255),b
  3710   000110  0E7C               	movlw	high STR_9
  3711   000112  6F5B               	movwf	(sprintf@fmt+1)& (0+255),b
  3712   000114  C2F3  F15C         	movff	_scored,?_sprintf+4
  3713   000118  6B5D               	clrf	(?_sprintf+5)& (0+255),b
  3714   00011A  C2F2  F15E         	movff	_no_scored,?_sprintf+6
  3715   00011E  6B5F               	clrf	(?_sprintf+7)& (0+255),b
  3716   000120  ECD4  F00F         	call	_sprintf	;wreg free
  3717   000124                     
  3718                           ;main.c: 115:                 no_scored++;
  3719   000124  0E1E               	movlw	low count_score@txt_813
  3720   000126  0101               	movlb	1	; () banked
  3721   000128  6F01               	movwf	UART_Write_Text@text& (0+255),b
  3722   00012A  0E02               	movlw	high count_score@txt_813
  3723   00012C  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  3724   00012E  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  3725   000132                     
  3726                           ;main.c: 116:             }
  3727   000132  0EA6               	movlw	166
  3728   000134                     u4377:
  3729   000134  2EE8               	decfsz	wreg,f,c
  3730   000136  D7FE               	bra	u4377
  3731   000138  D000               	nop2	
  3732   00013A                     l3788:
  3733                           
  3734                           ;main.c: 118:              sprintf(txt, "\n 3 scored = %d, not_scored = %d\r", scored, n
      +                          o_scored);
  3735   00013A  B481               	btfsc	129,2,c	;volatile
  3736   00013C  EFA2  F000         	goto	u3871
  3737   000140  EFA4  F000         	goto	u3870
  3738   000144                     u3871:
  3739   000144  EFCD  F000         	goto	l3802
  3740   000148                     u3870:
  3741   000148                     
  3742                           ;main.c: 119:              UART_Write_Text(txt);
  3743   000148  A48C               	btfss	140,2,c	;volatile
  3744   00014A  EFA9  F000         	goto	u3881
  3745   00014E  EFAB  F000         	goto	u3880
  3746   000152                     u3881:
  3747   000152  EFAF  F000         	goto	l3794
  3748   000156                     u3880:
  3749   000156                     
  3750                           ;main.c: 120:              _delay((unsigned long)((500)*(4000000/4000000.0)));
  3751   000156  0102               	movlb	2	; () banked
  3752   000158  2BF3               	incf	_scored& (0+255),f,b
  3753   00015A  EFB1  F000         	goto	l3796
  3754   00015E                     l3794:
  3755                           
  3756                           ;main.c: 122:         if(PORTBbits.RB4 == 0){
  3757   00015E  0102               	movlb	2	; () banked
  3758   000160  2BF2               	incf	_no_scored& (0+255),f,b
  3759   000162                     l3796:
  3760                           
  3761                           ; BSR set to: 2
  3762                           ;main.c: 124:                 scored++;;main.c: 125:             else{
  3763   000162  0E3C               	movlw	low count_score@txt_815
  3764   000164  0101               	movlb	1	; () banked
  3765   000166  6F58               	movwf	sprintf@s& (0+255),b
  3766   000168  0E02               	movlw	high count_score@txt_815
  3767   00016A  6F59               	movwf	(sprintf@s+1)& (0+255),b
  3768   00016C  0E66               	movlw	low STR_10
  3769   00016E  6F5A               	movwf	sprintf@fmt& (0+255),b
  3770   000170  0E7C               	movlw	high STR_10
  3771   000172  6F5B               	movwf	(sprintf@fmt+1)& (0+255),b
  3772   000174  C2F3  F15C         	movff	_scored,?_sprintf+4
  3773   000178  6B5D               	clrf	(?_sprintf+5)& (0+255),b
  3774   00017A  C2F2  F15E         	movff	_no_scored,?_sprintf+6
  3775   00017E  6B5F               	clrf	(?_sprintf+7)& (0+255),b
  3776   000180  ECD4  F00F         	call	_sprintf	;wreg free
  3777   000184                     
  3778                           ;main.c: 126:                 no_scored++;
  3779   000184  0E3C               	movlw	low count_score@txt_815
  3780   000186  0101               	movlb	1	; () banked
  3781   000188  6F01               	movwf	UART_Write_Text@text& (0+255),b
  3782   00018A  0E02               	movlw	high count_score@txt_815
  3783   00018C  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  3784   00018E  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  3785   000192                     
  3786                           ;main.c: 127:             }
  3787   000192  0EA6               	movlw	166
  3788   000194                     u4387:
  3789   000194  2EE8               	decfsz	wreg,f,c
  3790   000196  D7FE               	bra	u4387
  3791   000198  D000               	nop2	
  3792   00019A                     l3802:
  3793                           
  3794                           ;main.c: 129:              sprintf(txt, "\n 4 scored = %d, not_scored = %d\r", scored, n
      +                          o_scored);
  3795   00019A  B681               	btfsc	129,3,c	;volatile
  3796   00019C  EFD2  F000         	goto	u3891
  3797   0001A0  EFD4  F000         	goto	u3890
  3798   0001A4                     u3891:
  3799   0001A4  EFFD  F000         	goto	l3816
  3800   0001A8                     u3890:
  3801   0001A8                     
  3802                           ;main.c: 130:              UART_Write_Text(txt);
  3803   0001A8  A68C               	btfss	140,3,c	;volatile
  3804   0001AA  EFD9  F000         	goto	u3901
  3805   0001AE  EFDB  F000         	goto	u3900
  3806   0001B2                     u3901:
  3807   0001B2  EFDF  F000         	goto	l3808
  3808   0001B6                     u3900:
  3809   0001B6                     
  3810                           ;main.c: 131:              _delay((unsigned long)((500)*(4000000/4000000.0)));
  3811   0001B6  0102               	movlb	2	; () banked
  3812   0001B8  2BF3               	incf	_scored& (0+255),f,b
  3813   0001BA  EFE1  F000         	goto	l3810
  3814   0001BE                     l3808:
  3815                           
  3816                           ;main.c: 133:         if(PORTBbits.RB5 == 0){
  3817   0001BE  0102               	movlb	2	; () banked
  3818   0001C0  2BF2               	incf	_no_scored& (0+255),f,b
  3819   0001C2                     l3810:
  3820                           
  3821                           ; BSR set to: 2
  3822                           ;main.c: 135:                 scored++;;main.c: 136:             else{
  3823   0001C2  0E5A               	movlw	low count_score@txt_817
  3824   0001C4  0101               	movlb	1	; () banked
  3825   0001C6  6F58               	movwf	sprintf@s& (0+255),b
  3826   0001C8  0E02               	movlw	high count_score@txt_817
  3827   0001CA  6F59               	movwf	(sprintf@s+1)& (0+255),b
  3828   0001CC  0E88               	movlw	low STR_11
  3829   0001CE  6F5A               	movwf	sprintf@fmt& (0+255),b
  3830   0001D0  0E7C               	movlw	high STR_11
  3831   0001D2  6F5B               	movwf	(sprintf@fmt+1)& (0+255),b
  3832   0001D4  C2F3  F15C         	movff	_scored,?_sprintf+4
  3833   0001D8  6B5D               	clrf	(?_sprintf+5)& (0+255),b
  3834   0001DA  C2F2  F15E         	movff	_no_scored,?_sprintf+6
  3835   0001DE  6B5F               	clrf	(?_sprintf+7)& (0+255),b
  3836   0001E0  ECD4  F00F         	call	_sprintf	;wreg free
  3837   0001E4                     
  3838                           ;main.c: 137:                 no_scored++;
  3839   0001E4  0E5A               	movlw	low count_score@txt_817
  3840   0001E6  0101               	movlb	1	; () banked
  3841   0001E8  6F01               	movwf	UART_Write_Text@text& (0+255),b
  3842   0001EA  0E02               	movlw	high count_score@txt_817
  3843   0001EC  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  3844   0001EE  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  3845   0001F2                     
  3846                           ;main.c: 138:             }
  3847   0001F2  0EA6               	movlw	166
  3848   0001F4                     u4397:
  3849   0001F4  2EE8               	decfsz	wreg,f,c
  3850   0001F6  D7FE               	bra	u4397
  3851   0001F8  D000               	nop2	
  3852   0001FA                     l3816:
  3853                           
  3854                           ;main.c: 140:              sprintf(txt, "\n 5 scored = %d, not_scored = %d\r", scored, n
      +                          o_scored);
  3855   0001FA  B881               	btfsc	129,4,c	;volatile
  3856   0001FC  EF02  F001         	goto	u3911
  3857   000200  EF04  F001         	goto	u3910
  3858   000204                     u3911:
  3859   000204  EF2D  F001         	goto	l3830
  3860   000208                     u3910:
  3861   000208                     
  3862                           ;main.c: 141:              UART_Write_Text(txt);
  3863   000208  A88C               	btfss	140,4,c	;volatile
  3864   00020A  EF09  F001         	goto	u3921
  3865   00020E  EF0B  F001         	goto	u3920
  3866   000212                     u3921:
  3867   000212  EF0F  F001         	goto	l3822
  3868   000216                     u3920:
  3869   000216                     
  3870                           ;main.c: 142:              _delay((unsigned long)((500)*(4000000/4000000.0)));
  3871   000216  0102               	movlb	2	; () banked
  3872   000218  2BF3               	incf	_scored& (0+255),f,b
  3873   00021A  EF11  F001         	goto	l3824
  3874   00021E                     l3822:
  3875                           
  3876                           ;main.c: 144:         if(PORTEbits.RE0 == 0){
  3877   00021E  0102               	movlb	2	; () banked
  3878   000220  2BF2               	incf	_no_scored& (0+255),f,b
  3879   000222                     l3824:
  3880                           
  3881                           ; BSR set to: 2
  3882                           ;main.c: 146:                 scored++;;main.c: 147:             else{
  3883   000222  0E78               	movlw	low count_score@txt_819
  3884   000224  0101               	movlb	1	; () banked
  3885   000226  6F58               	movwf	sprintf@s& (0+255),b
  3886   000228  0E02               	movlw	high count_score@txt_819
  3887   00022A  6F59               	movwf	(sprintf@s+1)& (0+255),b
  3888   00022C  0EAA               	movlw	low STR_12
  3889   00022E  6F5A               	movwf	sprintf@fmt& (0+255),b
  3890   000230  0E7C               	movlw	high STR_12
  3891   000232  6F5B               	movwf	(sprintf@fmt+1)& (0+255),b
  3892   000234  C2F3  F15C         	movff	_scored,?_sprintf+4
  3893   000238  6B5D               	clrf	(?_sprintf+5)& (0+255),b
  3894   00023A  C2F2  F15E         	movff	_no_scored,?_sprintf+6
  3895   00023E  6B5F               	clrf	(?_sprintf+7)& (0+255),b
  3896   000240  ECD4  F00F         	call	_sprintf	;wreg free
  3897   000244                     
  3898                           ;main.c: 148:                 no_scored++;
  3899   000244  0E78               	movlw	low count_score@txt_819
  3900   000246  0101               	movlb	1	; () banked
  3901   000248  6F01               	movwf	UART_Write_Text@text& (0+255),b
  3902   00024A  0E02               	movlw	high count_score@txt_819
  3903   00024C  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  3904   00024E  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  3905   000252                     
  3906                           ;main.c: 149:             }
  3907   000252  0EA6               	movlw	166
  3908   000254                     u4407:
  3909   000254  2EE8               	decfsz	wreg,f,c
  3910   000256  D7FE               	bra	u4407
  3911   000258  D000               	nop2	
  3912   00025A                     l3830:
  3913                           
  3914                           ;main.c: 151:              sprintf(txt, "\n 6 scored = %d, not_scored = %d\r", scored, n
      +                          o_scored);
  3915   00025A  BA81               	btfsc	129,5,c	;volatile
  3916   00025C  EF32  F001         	goto	u3931
  3917   000260  EF34  F001         	goto	u3930
  3918   000264                     u3931:
  3919   000264  EF5D  F001         	goto	l3844
  3920   000268                     u3930:
  3921   000268                     
  3922                           ;main.c: 152:              UART_Write_Text(txt);
  3923   000268  AA8C               	btfss	140,5,c	;volatile
  3924   00026A  EF39  F001         	goto	u3941
  3925   00026E  EF3B  F001         	goto	u3940
  3926   000272                     u3941:
  3927   000272  EF3F  F001         	goto	l3836
  3928   000276                     u3940:
  3929   000276                     
  3930                           ;main.c: 153:              _delay((unsigned long)((500)*(4000000/4000000.0)));
  3931   000276  0102               	movlb	2	; () banked
  3932   000278  2BF3               	incf	_scored& (0+255),f,b
  3933   00027A  EF41  F001         	goto	l3838
  3934   00027E                     l3836:
  3935                           
  3936                           ;main.c: 155:         int seven = 0;
  3937   00027E  0102               	movlb	2	; () banked
  3938   000280  2BF2               	incf	_no_scored& (0+255),f,b
  3939   000282                     l3838:
  3940                           
  3941                           ; BSR set to: 2
  3942                           ;main.c: 157:             if(LATDbits.LATD7 == 1){;main.c: 158:                 seven = 
      +                          1;
  3943   000282  0E96               	movlw	low count_score@txt_821
  3944   000284  0101               	movlb	1	; () banked
  3945   000286  6F58               	movwf	sprintf@s& (0+255),b
  3946   000288  0E02               	movlw	high count_score@txt_821
  3947   00028A  6F59               	movwf	(sprintf@s+1)& (0+255),b
  3948   00028C  0ECC               	movlw	low STR_13
  3949   00028E  6F5A               	movwf	sprintf@fmt& (0+255),b
  3950   000290  0E7C               	movlw	high STR_13
  3951   000292  6F5B               	movwf	(sprintf@fmt+1)& (0+255),b
  3952   000294  C2F3  F15C         	movff	_scored,?_sprintf+4
  3953   000298  6B5D               	clrf	(?_sprintf+5)& (0+255),b
  3954   00029A  C2F2  F15E         	movff	_no_scored,?_sprintf+6
  3955   00029E  6B5F               	clrf	(?_sprintf+7)& (0+255),b
  3956   0002A0  ECD4  F00F         	call	_sprintf	;wreg free
  3957   0002A4                     
  3958                           ;main.c: 159:             }
  3959   0002A4  0E96               	movlw	low count_score@txt_821
  3960   0002A6  0101               	movlb	1	; () banked
  3961   0002A8  6F01               	movwf	UART_Write_Text@text& (0+255),b
  3962   0002AA  0E02               	movlw	high count_score@txt_821
  3963   0002AC  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  3964   0002AE  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  3965   0002B2                     
  3966                           ;main.c: 160:             else{
  3967   0002B2  0EA6               	movlw	166
  3968   0002B4                     u4417:
  3969   0002B4  2EE8               	decfsz	wreg,f,c
  3970   0002B6  D7FE               	bra	u4417
  3971   0002B8  D000               	nop2	
  3972   0002BA                     l3844:
  3973                           
  3974                           ;main.c: 162:             }
  3975   0002BA  B084               	btfsc	132,0,c	;volatile
  3976   0002BC  EF62  F001         	goto	u3951
  3977   0002C0  EF64  F001         	goto	u3950
  3978   0002C4                     u3951:
  3979   0002C4  EF8D  F001         	goto	l3858
  3980   0002C8                     u3950:
  3981   0002C8                     
  3982                           ;main.c: 163:         }
  3983   0002C8  AC8C               	btfss	140,6,c	;volatile
  3984   0002CA  EF69  F001         	goto	u3961
  3985   0002CE  EF6B  F001         	goto	u3960
  3986   0002D2                     u3961:
  3987   0002D2  EF6F  F001         	goto	l3850
  3988   0002D6                     u3960:
  3989   0002D6                     
  3990                           ;main.c: 164:         if(seven!=0){
  3991   0002D6  0102               	movlb	2	; () banked
  3992   0002D8  2BF3               	incf	_scored& (0+255),f,b
  3993   0002DA  EF71  F001         	goto	l3852
  3994   0002DE                     l3850:
  3995                           
  3996                           ;main.c: 166:                 scored++;
  3997   0002DE  0102               	movlb	2	; () banked
  3998   0002E0  2BF2               	incf	_no_scored& (0+255),f,b
  3999   0002E2                     l3852:
  4000                           
  4001                           ; BSR set to: 2
  4002                           ;main.c: 168:                 no_scored++;;main.c: 169:             char txt[30];
  4003   0002E2  0EB4               	movlw	low count_score@txt_827
  4004   0002E4  0101               	movlb	1	; () banked
  4005   0002E6  6F58               	movwf	sprintf@s& (0+255),b
  4006   0002E8  0E02               	movlw	high count_score@txt_827
  4007   0002EA  6F59               	movwf	(sprintf@s+1)& (0+255),b
  4008   0002EC  0EEE               	movlw	low STR_14
  4009   0002EE  6F5A               	movwf	sprintf@fmt& (0+255),b
  4010   0002F0  0E7C               	movlw	high STR_14
  4011   0002F2  6F5B               	movwf	(sprintf@fmt+1)& (0+255),b
  4012   0002F4  C2F3  F15C         	movff	_scored,?_sprintf+4
  4013   0002F8  6B5D               	clrf	(?_sprintf+5)& (0+255),b
  4014   0002FA  C2F2  F15E         	movff	_no_scored,?_sprintf+6
  4015   0002FE  6B5F               	clrf	(?_sprintf+7)& (0+255),b
  4016   000300  ECD4  F00F         	call	_sprintf	;wreg free
  4017   000304                     
  4018                           ;main.c: 170:             sprintf(txt, "\n 7 scored = %d, not_scored = %d %d\r", scored,
      +                           no_scored, seven);
  4019   000304  0EB4               	movlw	low count_score@txt_827
  4020   000306  0101               	movlb	1	; () banked
  4021   000308  6F01               	movwf	UART_Write_Text@text& (0+255),b
  4022   00030A  0E02               	movlw	high count_score@txt_827
  4023   00030C  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  4024   00030E  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  4025   000312                     
  4026                           ;main.c: 171:             UART_Write_Text(txt);
  4027   000312  0EA6               	movlw	166
  4028   000314                     u4427:
  4029   000314  2EE8               	decfsz	wreg,f,c
  4030   000316  D7FE               	bra	u4427
  4031   000318  D000               	nop2	
  4032   00031A                     l3858:
  4033                           
  4034                           ;main.c: 173:         }
  4035   00031A  0E00               	movlw	0
  4036   00031C  0102               	movlb	2	; () banked
  4037   00031E  6FF1               	movwf	(count_score@seven+1)& (0+255),b
  4038   000320  0E00               	movlw	0
  4039   000322  6FF0               	movwf	count_score@seven& (0+255),b
  4040   000324                     
  4041                           ; BSR set to: 2
  4042                           ;main.c: 174: 
  4043   000324  B284               	btfsc	132,1,c	;volatile
  4044   000326  EF97  F001         	goto	u3971
  4045   00032A  EF99  F001         	goto	u3970
  4046   00032E                     u3971:
  4047   00032E  EFA8  F001         	goto	l3866
  4048   000332                     u3970:
  4049   000332                     
  4050                           ; BSR set to: 2
  4051                           ;main.c: 175:         if((no_scored + scored) == cur_play_times){
  4052   000332  AE8C               	btfss	140,7,c	;volatile
  4053   000334  EF9E  F001         	goto	u3981
  4054   000338  EFA0  F001         	goto	u3980
  4055   00033C                     u3981:
  4056   00033C  EFA6  F001         	goto	l119
  4057   000340                     u3980:
  4058   000340                     
  4059                           ; BSR set to: 2
  4060                           ;main.c: 176:             UART_Write_Text("\n\r");
  4061   000340  0E00               	movlw	0
  4062   000342  6FF1               	movwf	(count_score@seven+1)& (0+255),b
  4063   000344  0E01               	movlw	1
  4064   000346  6FF0               	movwf	count_score@seven& (0+255),b
  4065                           
  4066                           ;main.c: 177:             break;
  4067   000348  EFA8  F001         	goto	l3866
  4068   00034C                     l119:
  4069                           
  4070                           ; BSR set to: 2
  4071                           ;main.c: 179:         _delay((unsigned long)((1000)*(4000000/4000000.0)));
  4072   00034C  69F0               	setf	count_score@seven& (0+255),b
  4073   00034E  69F1               	setf	(count_score@seven+1)& (0+255),b
  4074   000350                     l3866:
  4075                           
  4076                           ; BSR set to: 2
  4077                           ;main.c: 182: }
  4078   000350  51F0               	movf	count_score@seven& (0+255),w,b
  4079   000352  11F1               	iorwf	(count_score@seven+1)& (0+255),w,b
  4080   000354  B4D8               	btfsc	status,2,c
  4081   000356  EFAF  F001         	goto	u3991
  4082   00035A  EFB1  F001         	goto	u3990
  4083   00035E                     u3991:
  4084   00035E  EFD2  F001         	goto	l3880
  4085   000362                     u3990:
  4086   000362                     
  4087                           ; BSR set to: 2
  4088                           ;main.c: 184: 
  4089   000362  2BF3               	incf	_scored& (0+255),f,b
  4090   000364                     
  4091                           ; BSR set to: 2
  4092                           ;main.c: 187:         UART_Write_Text("\n\nYOU WIN !!!!\n\r");;main.c: 188:     else if(
      +                          difficulty == 2 && scored >= 2)
  4093   000364  0ED2               	movlw	low count_score@txt_830
  4094   000366  0101               	movlb	1	; () banked
  4095   000368  6F58               	movwf	sprintf@s& (0+255),b
  4096   00036A  0E02               	movlw	high count_score@txt_830
  4097   00036C  6F59               	movwf	(sprintf@s+1)& (0+255),b
  4098   00036E  0EB9               	movlw	low STR_15
  4099   000370  6F5A               	movwf	sprintf@fmt& (0+255),b
  4100   000372  0E7B               	movlw	high STR_15
  4101   000374  6F5B               	movwf	(sprintf@fmt+1)& (0+255),b
  4102   000376  C2F3  F15C         	movff	_scored,?_sprintf+4
  4103   00037A  6B5D               	clrf	(?_sprintf+5)& (0+255),b
  4104   00037C  C2F2  F15E         	movff	_no_scored,?_sprintf+6
  4105   000380  6B5F               	clrf	(?_sprintf+7)& (0+255),b
  4106   000382  0E00               	movlw	0
  4107   000384  6F61               	movwf	(?_sprintf+9)& (0+255),b
  4108   000386  0E01               	movlw	1
  4109   000388  6F60               	movwf	(?_sprintf+8)& (0+255),b
  4110   00038A  ECD4  F00F         	call	_sprintf	;wreg free
  4111   00038E                     
  4112                           ;main.c: 189:         UART_Write_Text("\n\nYOU WIN !!!!\n\r");
  4113   00038E  0ED2               	movlw	low count_score@txt_830
  4114   000390  0101               	movlb	1	; () banked
  4115   000392  6F01               	movwf	UART_Write_Text@text& (0+255),b
  4116   000394  0E02               	movlw	high count_score@txt_830
  4117   000396  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  4118   000398  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  4119   00039C                     
  4120                           ;main.c: 190:     else if(difficulty == 3 && scored >= 1)
  4121   00039C  0EA6               	movlw	166
  4122   00039E                     u4437:
  4123   00039E  2EE8               	decfsz	wreg,f,c
  4124   0003A0  D7FE               	bra	u4437
  4125   0003A2  D000               	nop2	
  4126   0003A4                     l3880:
  4127                           
  4128                           ;main.c: 193:         UART_Write_Text("\n\nYOU LOSER !!!!\n\r");
  4129   0003A4  0102               	movlb	2	; () banked
  4130   0003A6  51F3               	movf	_scored& (0+255),w,b
  4131   0003A8  C2F2  F16F         	movff	_no_scored,??_count_score
  4132   0003AC  0101               	movlb	1	; () banked
  4133   0003AE  6B70               	clrf	(??_count_score+1)& (0+255),b
  4134   0003B0  276F               	addwf	??_count_score& (0+255),f,b
  4135   0003B2  0E00               	movlw	0
  4136   0003B4  2370               	addwfc	(??_count_score+1)& (0+255),f,b
  4137   0003B6  0100               	movlb	0	; () banked
  4138   0003B8  51C2               	movf	_cur_play_times& (0+255),w,b
  4139   0003BA  0101               	movlb	1	; () banked
  4140   0003BC  196F               	xorwf	??_count_score& (0+255),w,b
  4141   0003BE  E109               	bnz	u4001
  4142   0003C0  0100               	movlb	0	; () banked
  4143   0003C2  51C3               	movf	(_cur_play_times+1)& (0+255),w,b
  4144   0003C4  0101               	movlb	1	; () banked
  4145   0003C6  1970               	xorwf	(??_count_score+1)& (0+255),w,b
  4146   0003C8  A4D8               	btfss	status,2,c
  4147   0003CA  EFE9  F001         	goto	u4001
  4148   0003CE  EFEB  F001         	goto	u4000
  4149   0003D2                     u4001:
  4150   0003D2  EFF3  F001         	goto	l3884
  4151   0003D6                     u4000:
  4152   0003D6                     
  4153                           ; BSR set to: 1
  4154                           ;main.c: 194: 
  4155   0003D6  0E63               	movlw	low (STR_3+45)
  4156   0003D8  6F01               	movwf	UART_Write_Text@text& (0+255),b
  4157   0003DA  0E7B               	movlw	high (STR_3+45)
  4158   0003DC  6F02               	movwf	(UART_Write_Text@text+1)& (0+255),b
  4159   0003DE  ECCF  F00D         	call	_UART_Write_Text	;wreg free
  4160                           
  4161                           ;main.c: 195: 
  4162   0003E2  EFF9  F001         	goto	l3886
  4163   0003E6                     l3884:
  4164                           
  4165                           ; BSR set to: 1
  4166                           ;main.c: 197:     CCPR1L = 21;
  4167   0003E6  0EC8               	movlw	200
  4168   0003E8                     u4447:
  4169   0003E8  D000               	nop2	
  4170   0003EA  2EE8               	decfsz	wreg,f,c
  4171   0003EC  D7FD               	bra	u4447
  4172   0003EE  EF3D  F000         	goto	l3760
  4173   0003F2                     l3886:
  4174                           
  4175                           ;main.c: 199:     LATD = 0;
  4176   0003F2  EC98  F010         	call	_ClearBuffer	;wreg free
  4177   0003F6  0012               	return		;funcret
  4178   0003F8                     __end_of_count_score:
  4179                           	callstack 0
  4180                           
  4181 ;; *************** function _sprintf *****************
  4182 ;; Defined at:
  4183 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;  s               2   88[BANK1 ] PTR unsigned char 
  4186 ;;		 -> count_score@txt_830(30), count_score@txt_827(30), count_score@txt_821(30), count_score@txt_819(30), 
  4187 ;;		 -> count_score@txt_817(30), count_score@txt_815(30), count_score@txt_813(30), count_score@txt(30), 
  4188 ;;		 -> ISR@s(50), 
  4189 ;;  fmt             2   90[BANK1 ] PTR const unsigned char 
  4190 ;;		 -> STR_15(37), STR_14(34), STR_13(34), STR_12(34), 
  4191 ;;		 -> STR_11(34), STR_10(34), STR_9(34), STR_8(34), 
  4192 ;;		 -> STR_1(34), 
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;  f              11  100[BANK1 ] struct _IO_FILE
  4195 ;;  ap              2   98[BANK1 ] PTR void [1]
  4196 ;;		 -> ?_sprintf(2), 
  4197 ;;  ret             2    0        int 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  2   88[BANK1 ] int 
  4200 ;; Registers used:
  4201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4207 ;;      Params:         0       0      10       0       0       0       0
  4208 ;;      Locals:         0       0      13       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0
  4210 ;;      Totals:         0       0      23       0       0       0       0
  4211 ;;Total ram usage:       23 bytes
  4212 ;; Hardware stack levels used: 1
  4213 ;; Hardware stack levels required when called: 19
  4214 ;; This function calls:
  4215 ;;		_vfprintf
  4216 ;; This function is called by:
  4217 ;;		_count_score
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           	psect	text13
  4222   001FA8                     __ptext13:
  4223                           	callstack 0
  4224   001FA8                     _sprintf:
  4225                           	callstack 10
  4226   001FA8  0E5C               	movlw	low (?_sprintf+4)
  4227   001FAA  0101               	movlb	1	; () banked
  4228   001FAC  6F62               	movwf	sprintf@ap& (0+255),b
  4229   001FAE  0E01               	movlw	high (?_sprintf+4)
  4230   001FB0  6F63               	movwf	(sprintf@ap+1)& (0+255),b
  4231   001FB2  C158  F164         	movff	sprintf@s,sprintf@f
  4232   001FB6  C159  F165         	movff	sprintf@s+1,sprintf@f+1
  4233   001FBA                     
  4234                           ; BSR set to: 1
  4235   001FBA  0E00               	movlw	0
  4236   001FBC  6F68               	movwf	(sprintf@f+4)& (0+255),b
  4237   001FBE  0E00               	movlw	0
  4238   001FC0  6F67               	movwf	(sprintf@f+3)& (0+255),b
  4239   001FC2                     
  4240                           ; BSR set to: 1
  4241   001FC2  0E00               	movlw	0
  4242   001FC4  6F6E               	movwf	(sprintf@f+10)& (0+255),b
  4243   001FC6  0E00               	movlw	0
  4244   001FC8  6F6D               	movwf	(sprintf@f+9)& (0+255),b
  4245   001FCA                     
  4246                           ; BSR set to: 1
  4247   001FCA  0E64               	movlw	low sprintf@f
  4248   001FCC  6F50               	movwf	vfprintf@fp& (0+255),b
  4249   001FCE  0E01               	movlw	high sprintf@f
  4250   001FD0  6F51               	movwf	(vfprintf@fp+1)& (0+255),b
  4251   001FD2  C15A  F152         	movff	sprintf@fmt,vfprintf@fmt
  4252   001FD6  C15B  F153         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4253   001FDA  0E62               	movlw	low sprintf@ap
  4254   001FDC  6F54               	movwf	vfprintf@ap& (0+255),b
  4255   001FDE  0E01               	movlw	high sprintf@ap
  4256   001FE0  6F55               	movwf	(vfprintf@ap+1)& (0+255),b
  4257   001FE2  ECFD  F00F         	call	_vfprintf	;wreg free
  4258   001FE6  0101               	movlb	1	; () banked
  4259   001FE8  5167               	movf	(sprintf@f+3)& (0+255),w,b
  4260   001FEA  2558               	addwf	sprintf@s& (0+255),w,b
  4261   001FEC  6ED9               	movwf	fsr2l,c
  4262   001FEE  5168               	movf	(sprintf@f+4)& (0+255),w,b
  4263   001FF0  2159               	addwfc	(sprintf@s+1)& (0+255),w,b
  4264   001FF2  6EDA               	movwf	fsr2h,c
  4265   001FF4  0E00               	movlw	0
  4266   001FF6  6EDF               	movwf	indf2,c
  4267   001FF8                     
  4268                           ; BSR set to: 1
  4269   001FF8  0012               	return		;funcret
  4270   001FFA                     __end_of_sprintf:
  4271                           	callstack 0
  4272                           
  4273 ;; *************** function _vfprintf *****************
  4274 ;; Defined at:
  4275 ;;		line 1520 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  fp              2   80[BANK1 ] PTR struct _IO_FILE
  4278 ;;		 -> sprintf@f(11), 
  4279 ;;  fmt             2   82[BANK1 ] PTR const unsigned char 
  4280 ;;		 -> STR_15(37), STR_14(34), STR_13(34), STR_12(34), 
  4281 ;;		 -> STR_11(34), STR_10(34), STR_9(34), STR_8(34), 
  4282 ;;		 -> STR_1(34), 
  4283 ;;  ap              2   84[BANK1 ] PTR PTR void 
  4284 ;;		 -> sprintf@ap(2), 
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  cfmt            2   86[BANK1 ] PTR unsigned char 
  4287 ;;		 -> STR_15(37), STR_14(34), STR_13(34), STR_12(34), 
  4288 ;;		 -> STR_11(34), STR_10(34), STR_9(34), STR_8(34), 
  4289 ;;		 -> STR_1(34), 
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  2   80[BANK1 ] int 
  4292 ;; Registers used:
  4293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4299 ;;      Params:         0       0       6       0       0       0       0
  4300 ;;      Locals:         0       0       2       0       0       0       0
  4301 ;;      Temps:          0       0       0       0       0       0       0
  4302 ;;      Totals:         0       0       8       0       0       0       0
  4303 ;;Total ram usage:        8 bytes
  4304 ;; Hardware stack levels used: 1
  4305 ;; Hardware stack levels required when called: 18
  4306 ;; This function calls:
  4307 ;;		_vfpfcnvrt
  4308 ;; This function is called by:
  4309 ;;		_sprintf
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           	psect	text14
  4314   001FFA                     __ptext14:
  4315                           	callstack 0
  4316   001FFA                     _vfprintf:
  4317                           	callstack 10
  4318   001FFA                     
  4319                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  4320   001FFA  C152  F156         	movff	vfprintf@fmt,vfprintf@cfmt
  4321   001FFE  C153  F157         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4322                           
  4323                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  4324   002002  EF12  F010         	goto	l3640
  4325   002006                     l3638:
  4326                           
  4327                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4328   002006  C150  F13E         	movff	vfprintf@fp,vfpfcnvrt@fp
  4329   00200A  C151  F13F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4330   00200E  0E56               	movlw	low vfprintf@cfmt
  4331   002010  0101               	movlb	1	; () banked
  4332   002012  6F40               	movwf	vfpfcnvrt@fmt& (0+255),b
  4333   002014  0E01               	movlw	high vfprintf@cfmt
  4334   002016  6F41               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4335   002018  C154  F142         	movff	vfprintf@ap,vfpfcnvrt@ap
  4336   00201C  C155  F143         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4337   002020  ECC2  F008         	call	_vfpfcnvrt	;wreg free
  4338   002024                     l3640:
  4339                           
  4340                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  4341   002024  C156  FFF6         	movff	vfprintf@cfmt,tblptrl
  4342   002028  C157  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4343   00202C                     	if	0	;tblptru may be non-zero
  4344   00202C                     	endif
  4345   00202C                     	if	0	;tblptru may be non-zero
  4346   00202C                     	endif
  4347   00202C  0008               	tblrd		*
  4348   00202E  50F5               	movf	tablat,w,c
  4349   002030  0900               	iorlw	0
  4350   002032  A4D8               	btfss	status,2,c
  4351   002034  EF1E  F010         	goto	u3741
  4352   002038  EF20  F010         	goto	u3740
  4353   00203C                     u3741:
  4354   00203C  EF03  F010         	goto	l3638
  4355   002040                     u3740:
  4356   002040                     
  4357                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  4358   002040  0E00               	movlw	0
  4359   002042  0101               	movlb	1	; () banked
  4360   002044  6F51               	movwf	(?_vfprintf+1)& (0+255),b
  4361   002046  0E00               	movlw	0
  4362   002048  6F50               	movwf	?_vfprintf& (0+255),b
  4363   00204A                     
  4364                           ; BSR set to: 1
  4365   00204A  0012               	return		;funcret
  4366   00204C                     __end_of_vfprintf:
  4367                           	callstack 0
  4368                           
  4369 ;; *************** function _vfpfcnvrt *****************
  4370 ;; Defined at:
  4371 ;;		line 1007 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;  fp              2   62[BANK1 ] PTR struct _IO_FILE
  4374 ;;		 -> sprintf@f(11), 
  4375 ;;  fmt             2   64[BANK1 ] PTR PTR unsigned char 
  4376 ;;		 -> vfprintf@cfmt(2), 
  4377 ;;  ap              2   66[BANK1 ] PTR PTR void 
  4378 ;;		 -> sprintf@ap(2), 
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;  convarg         8   70[BANK1 ] struct .
  4381 ;;  cp              2   78[BANK1 ] PTR unsigned char 
  4382 ;;		 -> STR_15(37), STR_14(34), STR_13(34), STR_12(34), 
  4383 ;;		 -> STR_11(34), STR_10(34), STR_9(34), STR_8(34), 
  4384 ;;		 -> STR_1(34), 
  4385 ;;  i               2    0        int 
  4386 ;;  done            2    0        int 
  4387 ;;  c               1    0        unsigned char 
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      void 
  4390 ;; Registers used:
  4391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4397 ;;      Params:         0       0       6       0       0       0       0
  4398 ;;      Locals:         0       0      10       0       0       0       0
  4399 ;;      Temps:          0       0       2       0       0       0       0
  4400 ;;      Totals:         0       0      18       0       0       0       0
  4401 ;;Total ram usage:       18 bytes
  4402 ;; Hardware stack levels used: 1
  4403 ;; Hardware stack levels required when called: 17
  4404 ;; This function calls:
  4405 ;;		_dtoa
  4406 ;;		_fputc
  4407 ;; This function is called by:
  4408 ;;		_vfprintf
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           	psect	text15
  4413   001184                     __ptext15:
  4414                           	callstack 0
  4415   001184                     _vfpfcnvrt:
  4416                           	callstack 10
  4417   001184                     
  4418                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  4419   001184  C140  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4420   001188  C141  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4421   00118C  CFDE FFF6          	movff	postinc2,tblptrl
  4422   001190  CFDD FFF7          	movff	postdec2,tblptrh
  4423   001194                     	if	0	;tblptru may be non-zero
  4424   001194                     	endif
  4425   001194                     	if	0	;tblptru may be non-zero
  4426   001194                     	endif
  4427   001194  0008               	tblrd		*
  4428   001196  50F5               	movf	tablat,w,c
  4429   001198  0A25               	xorlw	37
  4430   00119A  A4D8               	btfss	status,2,c
  4431   00119C  EFD2  F008         	goto	u3601
  4432   0011A0  EFD4  F008         	goto	u3600
  4433   0011A4                     u3601:
  4434   0011A4  EF54  F009         	goto	l3554
  4435   0011A8                     u3600:
  4436   0011A8                     
  4437                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  4438   0011A8  C140  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4439   0011AC  C141  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4440   0011B0  2ADE               	incf	postinc2,f,c
  4441   0011B2  0E00               	movlw	0
  4442   0011B4  22DD               	addwfc	postdec2,f,c
  4443   0011B6                     
  4444                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  4445   0011B6  0E00               	movlw	0
  4446   0011B8  0101               	movlb	1	; () banked
  4447   0011BA  6F74               	movwf	(_width+1)& (0+255),b
  4448   0011BC  0E00               	movlw	0
  4449   0011BE  6F73               	movwf	_width& (0+255),b
  4450   0011C0  C173  F17B         	movff	_width,_flags
  4451   0011C4                     
  4452                           ; BSR set to: 1
  4453                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  4454   0011C4  6975               	setf	_prec& (0+255),b
  4455   0011C6  6976               	setf	(_prec+1)& (0+255),b
  4456   0011C8                     
  4457                           ; BSR set to: 1
  4458                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  4459   0011C8  C140  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4460   0011CC  C141  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4461   0011D0  CFDE F14E          	movff	postinc2,vfpfcnvrt@cp
  4462   0011D4  CFDD F14F          	movff	postdec2,vfpfcnvrt@cp+1
  4463   0011D8                     
  4464                           ; BSR set to: 1
  4465                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4466   0011D8  C14E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4467   0011DC  C14F  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4468   0011E0                     	if	0	;tblptru may be non-zero
  4469   0011E0                     	endif
  4470   0011E0                     	if	0	;tblptru may be non-zero
  4471   0011E0                     	endif
  4472   0011E0  0008               	tblrd		*
  4473   0011E2  50F5               	movf	tablat,w,c
  4474   0011E4  0A64               	xorlw	100
  4475   0011E6  B4D8               	btfsc	status,2,c
  4476   0011E8  EFF8  F008         	goto	u3611
  4477   0011EC  EFFA  F008         	goto	u3610
  4478   0011F0                     u3611:
  4479   0011F0  EF08  F009         	goto	l3544
  4480   0011F4                     u3610:
  4481   0011F4                     
  4482                           ; BSR set to: 1
  4483   0011F4  C14E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4484   0011F8  C14F  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4485   0011FC                     	if	0	;tblptru may be non-zero
  4486   0011FC                     	endif
  4487   0011FC                     	if	0	;tblptru may be non-zero
  4488   0011FC                     	endif
  4489   0011FC  0008               	tblrd		*
  4490   0011FE  50F5               	movf	tablat,w,c
  4491   001200  0A69               	xorlw	105
  4492   001202  A4D8               	btfss	status,2,c
  4493   001204  EF06  F009         	goto	u3621
  4494   001208  EF08  F009         	goto	u3620
  4495   00120C                     u3621:
  4496   00120C  EF4B  F009         	goto	l3550
  4497   001210                     u3620:
  4498   001210                     l3544:
  4499                           
  4500                           ; BSR set to: 1
  4501                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4502   001210  C142  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4503   001214  C143  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4504   001218  CFDF F144          	movff	indf2,??_vfpfcnvrt
  4505   00121C  0E02               	movlw	2
  4506   00121E  26DE               	addwf	postinc2,f,c
  4507   001220  CFDF F145          	movff	indf2,??_vfpfcnvrt+1
  4508   001224  0E00               	movlw	0
  4509   001226  22DD               	addwfc	postdec2,f,c
  4510   001228  C144  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4511   00122C  C145  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4512   001230  CFDE F146          	movff	postinc2,vfpfcnvrt@convarg
  4513   001234  CFDD F147          	movff	postdec2,vfpfcnvrt@convarg+1
  4514   001238  0E00               	movlw	0
  4515   00123A  BF47               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  4516   00123C  0EFF               	movlw	-1
  4517   00123E  6F48               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  4518   001240  6F49               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  4519   001242  6F4A               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  4520   001244  6F4B               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  4521   001246  6F4C               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  4522   001248  6F4D               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  4523                           
  4524                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  4525   00124A  0E01               	movlw	1
  4526   00124C  254E               	addwf	vfpfcnvrt@cp& (0+255),w,b
  4527   00124E  6F44               	movwf	??_vfpfcnvrt& (0+255),b
  4528   001250  0E00               	movlw	0
  4529   001252  214F               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  4530   001254  6F45               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4531   001256  C140  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4532   00125A  C141  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4533   00125E  C144  FFDE         	movff	??_vfpfcnvrt,postinc2
  4534   001262  C145  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  4535   001266                     
  4536                           ; BSR set to: 1
  4537                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  4538   001266  C13E  F11B         	movff	vfpfcnvrt@fp,dtoa@fp
  4539   00126A  C13F  F11C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4540   00126E  C146  F11D         	movff	vfpfcnvrt@convarg,dtoa@d
  4541   001272  C147  F11E         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  4542   001276  C148  F11F         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  4543   00127A  C149  F120         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  4544   00127E  C14A  F121         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  4545   001282  C14B  F122         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  4546   001286  C14C  F123         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  4547   00128A  C14D  F124         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  4548   00128E  EC56  F003         	call	_dtoa	;wreg free
  4549   001292  EF69  F009         	goto	l1020
  4550   001296                     l3550:
  4551                           
  4552                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  4553   001296  C140  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4554   00129A  C141  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4555   00129E  2ADE               	incf	postinc2,f,c
  4556   0012A0  0E00               	movlw	0
  4557   0012A2  22DD               	addwfc	postdec2,f,c
  4558   0012A4  EF69  F009         	goto	l1020
  4559   0012A8                     l3554:
  4560                           
  4561                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  4562   0012A8  C140  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4563   0012AC  C141  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4564   0012B0  CFDE FFF6          	movff	postinc2,tblptrl
  4565   0012B4  CFDD FFF7          	movff	postdec2,tblptrh
  4566   0012B8                     	if	0	;tblptru may be non-zero
  4567   0012B8                     	endif
  4568   0012B8                     	if	0	;tblptru may be non-zero
  4569   0012B8                     	endif
  4570   0012B8  0008               	tblrd		*
  4571   0012BA  50F5               	movf	tablat,w,c
  4572   0012BC  0101               	movlb	1	; () banked
  4573   0012BE  6F00               	movwf	fputc@c& (0+255),b
  4574   0012C0  6B01               	clrf	(fputc@c+1)& (0+255),b
  4575   0012C2  C13E  F102         	movff	vfpfcnvrt@fp,fputc@fp
  4576   0012C6  C13F  F103         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4577   0012CA  EC3F  F00C         	call	_fputc	;wreg free
  4578   0012CE  EF4B  F009         	goto	l3550
  4579   0012D2                     l1020:
  4580   0012D2  0012               	return		;funcret
  4581   0012D4                     __end_of_vfpfcnvrt:
  4582                           	callstack 0
  4583                           
  4584 ;; *************** function _dtoa *****************
  4585 ;; Defined at:
  4586 ;;		line 443 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;  fp              2   27[BANK1 ] PTR struct _IO_FILE
  4589 ;;		 -> sprintf@f(11), 
  4590 ;;  d               8   29[BANK1 ] long long 
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;  n               8   51[BANK1 ] long long 
  4593 ;;  i               2   60[BANK1 ] int 
  4594 ;;  w               2   49[BANK1 ] int 
  4595 ;;  p               2   47[BANK1 ] int 
  4596 ;;  s               1   59[BANK1 ] unsigned char 
  4597 ;; Return value:  Size  Location     Type
  4598 ;;                  1    wreg      void 
  4599 ;; Registers used:
  4600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/0
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4606 ;;      Params:         0       0      10       0       0       0       0
  4607 ;;      Locals:         0       0      17       0       0       0       0
  4608 ;;      Temps:          0       0       8       0       0       0       0
  4609 ;;      Totals:         0       0      35       0       0       0       0
  4610 ;;Total ram usage:       35 bytes
  4611 ;; Hardware stack levels used: 1
  4612 ;; Hardware stack levels required when called: 16
  4613 ;; This function calls:
  4614 ;;		___aodiv
  4615 ;;		___aomod
  4616 ;;		_abs
  4617 ;;		_pad
  4618 ;; This function is called by:
  4619 ;;		_vfpfcnvrt
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           	psect	text16
  4624   0006AC                     __ptext16:
  4625                           	callstack 0
  4626   0006AC                     _dtoa:
  4627                           	callstack 10
  4628   0006AC                     
  4629                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  4630   0006AC  C11D  F133         	movff	dtoa@d,dtoa@n
  4631   0006B0  C11E  F134         	movff	dtoa@d+1,dtoa@n+1
  4632   0006B4  C11F  F135         	movff	dtoa@d+2,dtoa@n+2
  4633   0006B8  C120  F136         	movff	dtoa@d+3,dtoa@n+3
  4634   0006BC  C121  F137         	movff	dtoa@d+4,dtoa@n+4
  4635   0006C0  C122  F138         	movff	dtoa@d+5,dtoa@n+5
  4636   0006C4  C123  F139         	movff	dtoa@d+6,dtoa@n+6
  4637   0006C8  C124  F13A         	movff	dtoa@d+7,dtoa@n+7
  4638   0006CC                     
  4639                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  4640   0006CC  0101               	movlb	1	; () banked
  4641   0006CE  BF3A               	btfsc	(dtoa@n+7)& (0+255),7,b
  4642   0006D0  EF6C  F003         	goto	u3481
  4643   0006D4  EF6F  F003         	goto	u3480
  4644   0006D8                     u3481:
  4645   0006D8  0E01               	movlw	1
  4646   0006DA  EF70  F003         	goto	u3490
  4647   0006DE                     u3480:
  4648   0006DE  0E00               	movlw	0
  4649   0006E0                     u3490:
  4650   0006E0  6F3B               	movwf	dtoa@s& (0+255),b
  4651   0006E2                     
  4652                           ; BSR set to: 1
  4653                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  4654   0006E2  513B               	movf	dtoa@s& (0+255),w,b
  4655   0006E4  B4D8               	btfsc	status,2,c
  4656   0006E6  EF77  F003         	goto	u3501
  4657   0006EA  EF79  F003         	goto	u3500
  4658   0006EE                     u3501:
  4659   0006EE  EF89  F003         	goto	l3476
  4660   0006F2                     u3500:
  4661   0006F2                     
  4662                           ; BSR set to: 1
  4663                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  4664   0006F2  1F3A               	comf	(dtoa@n+7)& (0+255),f,b
  4665   0006F4  1F39               	comf	(dtoa@n+6)& (0+255),f,b
  4666   0006F6  1F38               	comf	(dtoa@n+5)& (0+255),f,b
  4667   0006F8  1F37               	comf	(dtoa@n+4)& (0+255),f,b
  4668   0006FA  1F36               	comf	(dtoa@n+3)& (0+255),f,b
  4669   0006FC  1F35               	comf	(dtoa@n+2)& (0+255),f,b
  4670   0006FE  1F34               	comf	(dtoa@n+1)& (0+255),f,b
  4671   000700  6D33               	negf	dtoa@n& (0+255),b
  4672   000702  0E00               	movlw	0
  4673   000704  2334               	addwfc	(dtoa@n+1)& (0+255),f,b
  4674   000706  2335               	addwfc	(dtoa@n+2)& (0+255),f,b
  4675   000708  2336               	addwfc	(dtoa@n+3)& (0+255),f,b
  4676   00070A  2337               	addwfc	(dtoa@n+4)& (0+255),f,b
  4677   00070C  2338               	addwfc	(dtoa@n+5)& (0+255),f,b
  4678   00070E  2339               	addwfc	(dtoa@n+6)& (0+255),f,b
  4679   000710  233A               	addwfc	(dtoa@n+7)& (0+255),f,b
  4680   000712                     l3476:
  4681                           
  4682                           ; BSR set to: 1
  4683                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  4684   000712  BF76               	btfsc	(_prec+1)& (0+255),7,b
  4685   000714  EF96  F003         	goto	u3510
  4686   000718  5176               	movf	(_prec+1)& (0+255),w,b
  4687   00071A  E106               	bnz	u3511
  4688   00071C  0575               	decf	_prec& (0+255),w,b
  4689   00071E  B0D8               	btfsc	status,0,c
  4690   000720  EF94  F003         	goto	u3511
  4691   000724  EF96  F003         	goto	u3510
  4692   000728                     u3511:
  4693   000728  EF9C  F003         	goto	l999
  4694   00072C                     u3510:
  4695   00072C                     
  4696                           ; BSR set to: 1
  4697   00072C  0E00               	movlw	0
  4698   00072E  6F30               	movwf	(dtoa@p+1)& (0+255),b
  4699   000730  0E01               	movlw	1
  4700   000732  6F2F               	movwf	dtoa@p& (0+255),b
  4701   000734  EFA0  F003         	goto	l1001
  4702   000738                     l999:
  4703                           
  4704                           ; BSR set to: 1
  4705   000738  C175  F12F         	movff	_prec,dtoa@p
  4706   00073C  C176  F130         	movff	_prec+1,dtoa@p+1
  4707   000740                     l1001:
  4708                           
  4709                           ; BSR set to: 1
  4710                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  4711   000740  C173  F131         	movff	_width,dtoa@w
  4712   000744  C174  F132         	movff	_width+1,dtoa@w+1
  4713   000748                     
  4714                           ; BSR set to: 1
  4715                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  4716   000748  513B               	movf	dtoa@s& (0+255),w,b
  4717   00074A  B4D8               	btfsc	status,2,c
  4718   00074C  EFAA  F003         	goto	u3521
  4719   000750  EFAC  F003         	goto	u3520
  4720   000754                     u3521:
  4721   000754  EFC3  F003         	goto	l1002
  4722   000758                     u3520:
  4723   000758                     
  4724                           ; BSR set to: 1
  4725                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;D:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  4726   000758  0731               	decf	dtoa@w& (0+255),f,b
  4727   00075A  A0D8               	btfss	status,0,c
  4728   00075C  0732               	decf	(dtoa@w+1)& (0+255),f,b
  4729   00075E                     
  4730                           ; BSR set to: 1
  4731                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  4732   00075E  513B               	movf	dtoa@s& (0+255),w,b
  4733   000760  A4D8               	btfss	status,2,c
  4734   000762  EFB5  F003         	goto	u3531
  4735   000766  EFB7  F003         	goto	u3530
  4736   00076A                     u3531:
  4737   00076A  EFBD  F003         	goto	l3488
  4738   00076E                     u3530:
  4739   00076E                     
  4740                           ; BSR set to: 1
  4741   00076E  0E00               	movlw	0
  4742   000770  6F2E               	movwf	(_dtoa$1986+1)& (0+255),b
  4743   000772  0E2B               	movlw	43
  4744   000774  6F2D               	movwf	_dtoa$1986& (0+255),b
  4745   000776  EFC1  F003         	goto	l3490
  4746   00077A                     l3488:
  4747                           
  4748                           ; BSR set to: 1
  4749   00077A  0E00               	movlw	0
  4750   00077C  6F2E               	movwf	(_dtoa$1986+1)& (0+255),b
  4751   00077E  0E2D               	movlw	45
  4752   000780  6F2D               	movwf	_dtoa$1986& (0+255),b
  4753   000782                     l3490:
  4754                           
  4755                           ; BSR set to: 1
  4756   000782  C12D  F13B         	movff	_dtoa$1986,dtoa@s
  4757   000786                     l1002:
  4758                           
  4759                           ; BSR set to: 1
  4760                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  4761   000786  0E00               	movlw	0
  4762   000788  6F3D               	movwf	(dtoa@i+1)& (0+255),b
  4763   00078A  0E1F               	movlw	31
  4764   00078C  6F3C               	movwf	dtoa@i& (0+255),b
  4765   00078E                     
  4766                           ; BSR set to: 1
  4767                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  4768   00078E  0E00               	movlw	0
  4769   000790  6F9B               	movwf	(_dbuf+31)& (0+255),b
  4770                           
  4771                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  4772   000792  EF48  F004         	goto	l3504
  4773   000796                     l3494:
  4774                           
  4775                           ; BSR set to: 1
  4776                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;D:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  4777   000796  073C               	decf	dtoa@i& (0+255),f,b
  4778   000798  A0D8               	btfss	status,0,c
  4779   00079A  073D               	decf	(dtoa@i+1)& (0+255),f,b
  4780   00079C                     
  4781                           ; BSR set to: 1
  4782                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4783   00079C  0E7C               	movlw	low _dbuf
  4784   00079E  253C               	addwf	dtoa@i& (0+255),w,b
  4785   0007A0  6ED9               	movwf	fsr2l,c
  4786   0007A2  0E01               	movlw	high _dbuf
  4787   0007A4  213D               	addwfc	(dtoa@i+1)& (0+255),w,b
  4788   0007A6  6EDA               	movwf	fsr2h,c
  4789   0007A8  C133  F100         	movff	dtoa@n,___aomod@dividend
  4790   0007AC  C134  F101         	movff	dtoa@n+1,___aomod@dividend+1
  4791   0007B0  C135  F102         	movff	dtoa@n+2,___aomod@dividend+2
  4792   0007B4  C136  F103         	movff	dtoa@n+3,___aomod@dividend+3
  4793   0007B8  C137  F104         	movff	dtoa@n+4,___aomod@dividend+4
  4794   0007BC  C138  F105         	movff	dtoa@n+5,___aomod@dividend+5
  4795   0007C0  C139  F106         	movff	dtoa@n+6,___aomod@dividend+6
  4796   0007C4  C13A  F107         	movff	dtoa@n+7,___aomod@dividend+7
  4797   0007C8  0E0A               	movlw	10
  4798   0007CA  6F08               	movwf	___aomod@divisor& (0+255),b
  4799   0007CC  0E00               	movlw	0
  4800   0007CE  6F09               	movwf	(___aomod@divisor+1)& (0+255),b
  4801   0007D0  0E00               	movlw	0
  4802   0007D2  6F0A               	movwf	(___aomod@divisor+2)& (0+255),b
  4803   0007D4  0E00               	movlw	0
  4804   0007D6  6F0B               	movwf	(___aomod@divisor+3)& (0+255),b
  4805   0007D8  0E00               	movlw	0
  4806   0007DA  6F0C               	movwf	(___aomod@divisor+4)& (0+255),b
  4807   0007DC  0E00               	movlw	0
  4808   0007DE  6F0D               	movwf	(___aomod@divisor+5)& (0+255),b
  4809   0007E0  0E00               	movlw	0
  4810   0007E2  6F0E               	movwf	(___aomod@divisor+6)& (0+255),b
  4811   0007E4  0E00               	movlw	0
  4812   0007E6  6F0F               	movwf	(___aomod@divisor+7)& (0+255),b
  4813   0007E8  EC5D  F007         	call	___aomod	;wreg free
  4814   0007EC  C100  F125         	movff	?___aomod,??_dtoa
  4815   0007F0  C101  F126         	movff	?___aomod+1,??_dtoa+1
  4816   0007F4  C102  F127         	movff	?___aomod+2,??_dtoa+2
  4817   0007F8  C103  F128         	movff	?___aomod+3,??_dtoa+3
  4818   0007FC  C104  F129         	movff	?___aomod+4,??_dtoa+4
  4819   000800  C105  F12A         	movff	?___aomod+5,??_dtoa+5
  4820   000804  C106  F12B         	movff	?___aomod+6,??_dtoa+6
  4821   000808  C107  F12C         	movff	?___aomod+7,??_dtoa+7
  4822   00080C  C125  F112         	movff	??_dtoa,abs@a
  4823   000810  C126  F113         	movff	??_dtoa+1,abs@a+1
  4824   000814  ECFF  F010         	call	_abs	;wreg free
  4825   000818  0101               	movlb	1	; () banked
  4826   00081A  5112               	movf	?_abs& (0+255),w,b
  4827   00081C  0F30               	addlw	48
  4828   00081E  6EDF               	movwf	indf2,c
  4829   000820                     
  4830                           ; BSR set to: 1
  4831                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  4832   000820  072F               	decf	dtoa@p& (0+255),f,b
  4833   000822  A0D8               	btfss	status,0,c
  4834   000824  0730               	decf	(dtoa@p+1)& (0+255),f,b
  4835   000826                     
  4836                           ; BSR set to: 1
  4837                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  4838   000826  0731               	decf	dtoa@w& (0+255),f,b
  4839   000828  A0D8               	btfss	status,0,c
  4840   00082A  0732               	decf	(dtoa@w+1)& (0+255),f,b
  4841   00082C                     
  4842                           ; BSR set to: 1
  4843                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  4844   00082C  C133  F100         	movff	dtoa@n,___aodiv@dividend
  4845   000830  C134  F101         	movff	dtoa@n+1,___aodiv@dividend+1
  4846   000834  C135  F102         	movff	dtoa@n+2,___aodiv@dividend+2
  4847   000838  C136  F103         	movff	dtoa@n+3,___aodiv@dividend+3
  4848   00083C  C137  F104         	movff	dtoa@n+4,___aodiv@dividend+4
  4849   000840  C138  F105         	movff	dtoa@n+5,___aodiv@dividend+5
  4850   000844  C139  F106         	movff	dtoa@n+6,___aodiv@dividend+6
  4851   000848  C13A  F107         	movff	dtoa@n+7,___aodiv@dividend+7
  4852   00084C  0E0A               	movlw	10
  4853   00084E  6F08               	movwf	___aodiv@divisor& (0+255),b
  4854   000850  0E00               	movlw	0
  4855   000852  6F09               	movwf	(___aodiv@divisor+1)& (0+255),b
  4856   000854  0E00               	movlw	0
  4857   000856  6F0A               	movwf	(___aodiv@divisor+2)& (0+255),b
  4858   000858  0E00               	movlw	0
  4859   00085A  6F0B               	movwf	(___aodiv@divisor+3)& (0+255),b
  4860   00085C  0E00               	movlw	0
  4861   00085E  6F0C               	movwf	(___aodiv@divisor+4)& (0+255),b
  4862   000860  0E00               	movlw	0
  4863   000862  6F0D               	movwf	(___aodiv@divisor+5)& (0+255),b
  4864   000864  0E00               	movlw	0
  4865   000866  6F0E               	movwf	(___aodiv@divisor+6)& (0+255),b
  4866   000868  0E00               	movlw	0
  4867   00086A  6F0F               	movwf	(___aodiv@divisor+7)& (0+255),b
  4868   00086C  ECD4  F005         	call	___aodiv	;wreg free
  4869   000870  C100  F133         	movff	?___aodiv,dtoa@n
  4870   000874  C101  F134         	movff	?___aodiv+1,dtoa@n+1
  4871   000878  C102  F135         	movff	?___aodiv+2,dtoa@n+2
  4872   00087C  C103  F136         	movff	?___aodiv+3,dtoa@n+3
  4873   000880  C104  F137         	movff	?___aodiv+4,dtoa@n+4
  4874   000884  C105  F138         	movff	?___aodiv+5,dtoa@n+5
  4875   000888  C106  F139         	movff	?___aodiv+6,dtoa@n+6
  4876   00088C  C107  F13A         	movff	?___aodiv+7,dtoa@n+7
  4877   000890                     l3504:
  4878                           
  4879                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  4880   000890  0101               	movlb	1	; () banked
  4881   000892  BF3D               	btfsc	(dtoa@i+1)& (0+255),7,b
  4882   000894  EF54  F004         	goto	u3541
  4883   000898  513D               	movf	(dtoa@i+1)& (0+255),w,b
  4884   00089A  E108               	bnz	u3540
  4885   00089C  053C               	decf	dtoa@i& (0+255),w,b
  4886   00089E  A0D8               	btfss	status,0,c
  4887   0008A0  EF54  F004         	goto	u3541
  4888   0008A4  EF56  F004         	goto	u3540
  4889   0008A8                     u3541:
  4890   0008A8  EF72  F004         	goto	l3510
  4891   0008AC                     u3540:
  4892   0008AC                     
  4893                           ; BSR set to: 1
  4894   0008AC  5133               	movf	dtoa@n& (0+255),w,b
  4895   0008AE  1134               	iorwf	(dtoa@n+1)& (0+255),w,b
  4896   0008B0  1135               	iorwf	(dtoa@n+2)& (0+255),w,b
  4897   0008B2  1136               	iorwf	(dtoa@n+3)& (0+255),w,b
  4898   0008B4  1137               	iorwf	(dtoa@n+4)& (0+255),w,b
  4899   0008B6  1138               	iorwf	(dtoa@n+5)& (0+255),w,b
  4900   0008B8  1139               	iorwf	(dtoa@n+6)& (0+255),w,b
  4901   0008BA  113A               	iorwf	(dtoa@n+7)& (0+255),w,b
  4902   0008BC  A4D8               	btfss	status,2,c
  4903   0008BE  EF63  F004         	goto	u3551
  4904   0008C2  EF65  F004         	goto	u3550
  4905   0008C6                     u3551:
  4906   0008C6  EFCB  F003         	goto	l3494
  4907   0008CA                     u3550:
  4908   0008CA                     
  4909                           ; BSR set to: 1
  4910   0008CA  BF30               	btfsc	(dtoa@p+1)& (0+255),7,b
  4911   0008CC  EF72  F004         	goto	u3560
  4912   0008D0  5130               	movf	(dtoa@p+1)& (0+255),w,b
  4913   0008D2  E106               	bnz	u3561
  4914   0008D4  052F               	decf	dtoa@p& (0+255),w,b
  4915   0008D6  B0D8               	btfsc	status,0,c
  4916   0008D8  EF70  F004         	goto	u3561
  4917   0008DC  EF72  F004         	goto	u3560
  4918   0008E0                     u3561:
  4919   0008E0  EFCB  F003         	goto	l3494
  4920   0008E4                     u3560:
  4921   0008E4                     l3510:
  4922                           
  4923                           ; BSR set to: 1
  4924                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  4925   0008E4  513B               	movf	dtoa@s& (0+255),w,b
  4926   0008E6  B4D8               	btfsc	status,2,c
  4927   0008E8  EF78  F004         	goto	u3571
  4928   0008EC  EF7A  F004         	goto	u3570
  4929   0008F0                     u3571:
  4930   0008F0  EF85  F004         	goto	l3516
  4931   0008F4                     u3570:
  4932   0008F4                     
  4933                           ; BSR set to: 1
  4934                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  4935   0008F4  073C               	decf	dtoa@i& (0+255),f,b
  4936   0008F6  A0D8               	btfss	status,0,c
  4937   0008F8  073D               	decf	(dtoa@i+1)& (0+255),f,b
  4938   0008FA                     
  4939                           ; BSR set to: 1
  4940                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  4941   0008FA  0E7C               	movlw	low _dbuf
  4942   0008FC  253C               	addwf	dtoa@i& (0+255),w,b
  4943   0008FE  6ED9               	movwf	fsr2l,c
  4944   000900  0E01               	movlw	high _dbuf
  4945   000902  213D               	addwfc	(dtoa@i+1)& (0+255),w,b
  4946   000904  6EDA               	movwf	fsr2h,c
  4947   000906  C13B  FFDF         	movff	dtoa@s,indf2
  4948   00090A                     l3516:
  4949                           
  4950                           ; BSR set to: 1
  4951                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  4952   00090A  C11B  F110         	movff	dtoa@fp,pad@fp
  4953   00090E  C11C  F111         	movff	dtoa@fp+1,pad@fp+1
  4954   000912  0E7C               	movlw	low _dbuf
  4955   000914  253C               	addwf	dtoa@i& (0+255),w,b
  4956   000916  6F12               	movwf	pad@buf& (0+255),b
  4957   000918  0E01               	movlw	high _dbuf
  4958   00091A  213D               	addwfc	(dtoa@i+1)& (0+255),w,b
  4959   00091C  6F13               	movwf	(pad@buf+1)& (0+255),b
  4960   00091E  C131  F114         	movff	dtoa@w,pad@p
  4961   000922  C132  F115         	movff	dtoa@w+1,pad@p+1
  4962   000926  EC11  F00E         	call	_pad	;wreg free
  4963   00092A  0012               	return		;funcret
  4964   00092C                     __end_of_dtoa:
  4965                           	callstack 0
  4966                           
  4967 ;; *************** function _pad *****************
  4968 ;; Defined at:
  4969 ;;		line 133 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4970 ;; Parameters:    Size  Location     Type
  4971 ;;  fp              2   16[BANK1 ] PTR struct _IO_FILE
  4972 ;;		 -> sprintf@f(11), 
  4973 ;;  buf             2   18[BANK1 ] PTR unsigned char 
  4974 ;;		 -> dbuf(32), 
  4975 ;;  p               2   20[BANK1 ] int 
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;  w               2   25[BANK1 ] int 
  4978 ;;  i               2   23[BANK1 ] int 
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  1    wreg      void 
  4981 ;; Registers used:
  4982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4988 ;;      Params:         0       0       6       0       0       0       0
  4989 ;;      Locals:         0       0       4       0       0       0       0
  4990 ;;      Temps:          0       0       1       0       0       0       0
  4991 ;;      Totals:         0       0      11       0       0       0       0
  4992 ;;Total ram usage:       11 bytes
  4993 ;; Hardware stack levels used: 1
  4994 ;; Hardware stack levels required when called: 15
  4995 ;; This function calls:
  4996 ;;		_fputc
  4997 ;;		_fputs
  4998 ;; This function is called by:
  4999 ;;		_dtoa
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003                           	psect	text17
  5004   001C22                     __ptext17:
  5005                           	callstack 0
  5006   001C22                     _pad:
  5007                           	callstack 10
  5008   001C22                     
  5009                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5010   001C22  0101               	movlb	1	; () banked
  5011   001C24  BF15               	btfsc	(pad@p+1)& (0+255),7,b
  5012   001C26  EF17  F00E         	goto	u3461
  5013   001C2A  EF19  F00E         	goto	u3460
  5014   001C2E                     u3461:
  5015   001C2E  EF1F  F00E         	goto	l3458
  5016   001C32                     u3460:
  5017   001C32                     
  5018                           ; BSR set to: 1
  5019   001C32  C114  F119         	movff	pad@p,pad@w
  5020   001C36  C115  F11A         	movff	pad@p+1,pad@w+1
  5021   001C3A  EF23  F00E         	goto	l990
  5022   001C3E                     l3458:
  5023                           
  5024                           ; BSR set to: 1
  5025   001C3E  0E00               	movlw	0
  5026   001C40  6F1A               	movwf	(pad@w+1)& (0+255),b
  5027   001C42  0E00               	movlw	0
  5028   001C44  6F19               	movwf	pad@w& (0+255),b
  5029   001C46                     l990:
  5030                           
  5031                           ; BSR set to: 1
  5032                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5033   001C46  0E00               	movlw	0
  5034   001C48  6F18               	movwf	(pad@i+1)& (0+255),b
  5035   001C4A  0E00               	movlw	0
  5036   001C4C  6F17               	movwf	pad@i& (0+255),b
  5037                           
  5038                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5039   001C4E  EF36  F00E         	goto	l3464
  5040   001C52                     l3460:
  5041                           
  5042                           ; BSR set to: 1
  5043                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5044   001C52  0E00               	movlw	0
  5045   001C54  6F01               	movwf	(fputc@c+1)& (0+255),b
  5046   001C56  0E20               	movlw	32
  5047   001C58  6F00               	movwf	fputc@c& (0+255),b
  5048   001C5A  C110  F102         	movff	pad@fp,fputc@fp
  5049   001C5E  C111  F103         	movff	pad@fp+1,fputc@fp+1
  5050   001C62  EC3F  F00C         	call	_fputc	;wreg free
  5051   001C66                     
  5052                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5053   001C66  0101               	movlb	1	; () banked
  5054   001C68  4B17               	infsnz	pad@i& (0+255),f,b
  5055   001C6A  2B18               	incf	(pad@i+1)& (0+255),f,b
  5056   001C6C                     l3464:
  5057                           
  5058                           ; BSR set to: 1
  5059                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5060   001C6C  5119               	movf	pad@w& (0+255),w,b
  5061   001C6E  5D17               	subwf	pad@i& (0+255),w,b
  5062   001C70  5118               	movf	(pad@i+1)& (0+255),w,b
  5063   001C72  0A80               	xorlw	128
  5064   001C74  6F16               	movwf	??_pad& (0+255),b
  5065   001C76  511A               	movf	(pad@w+1)& (0+255),w,b
  5066   001C78  0A80               	xorlw	128
  5067   001C7A  5916               	subwfb	??_pad& (0+255),w,b
  5068   001C7C  A0D8               	btfss	status,0,c
  5069   001C7E  EF43  F00E         	goto	u3471
  5070   001C82  EF45  F00E         	goto	u3470
  5071   001C86                     u3471:
  5072   001C86  EF29  F00E         	goto	l3460
  5073   001C8A                     u3470:
  5074   001C8A                     
  5075                           ; BSR set to: 1
  5076                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5077   001C8A  C112  F109         	movff	pad@buf,fputs@s
  5078   001C8E  C113  F10A         	movff	pad@buf+1,fputs@s+1
  5079   001C92  C110  F10B         	movff	pad@fp,fputs@fp
  5080   001C96  C111  F10C         	movff	pad@fp+1,fputs@fp+1
  5081   001C9A  EC74  F010         	call	_fputs	;wreg free
  5082   001C9E  0012               	return		;funcret
  5083   001CA0                     __end_of_pad:
  5084                           	callstack 0
  5085                           
  5086 ;; *************** function _fputs *****************
  5087 ;; Defined at:
  5088 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;  s               2    9[BANK1 ] PTR const unsigned char 
  5091 ;;		 -> dbuf(32), 
  5092 ;;  fp              2   11[BANK1 ] PTR struct _IO_FILE
  5093 ;;		 -> sprintf@f(11), 
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;  i               2   14[BANK1 ] int 
  5096 ;;  c               1   13[BANK1 ] unsigned char 
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  2    9[BANK1 ] int 
  5099 ;; Registers used:
  5100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5106 ;;      Params:         0       0       4       0       0       0       0
  5107 ;;      Locals:         0       0       3       0       0       0       0
  5108 ;;      Temps:          0       0       0       0       0       0       0
  5109 ;;      Totals:         0       0       7       0       0       0       0
  5110 ;;Total ram usage:        7 bytes
  5111 ;; Hardware stack levels used: 1
  5112 ;; Hardware stack levels required when called: 14
  5113 ;; This function calls:
  5114 ;;		_fputc
  5115 ;; This function is called by:
  5116 ;;		_pad
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text18
  5121   0020E8                     __ptext18:
  5122                           	callstack 0
  5123   0020E8                     _fputs:
  5124                           	callstack 10
  5125   0020E8  0E00               	movlw	0
  5126   0020EA  0101               	movlb	1	; () banked
  5127   0020EC  6F0F               	movwf	(fputs@i+1)& (0+255),b
  5128   0020EE  0E00               	movlw	0
  5129   0020F0  6F0E               	movwf	fputs@i& (0+255),b
  5130   0020F2  EF87  F010         	goto	l3372
  5131   0020F6                     l3368:
  5132                           
  5133                           ; BSR set to: 1
  5134   0020F6  C10D  F100         	movff	fputs@c,fputc@c
  5135   0020FA  6B01               	clrf	(fputc@c+1)& (0+255),b
  5136   0020FC  C10B  F102         	movff	fputs@fp,fputc@fp
  5137   002100  C10C  F103         	movff	fputs@fp+1,fputc@fp+1
  5138   002104  EC3F  F00C         	call	_fputc	;wreg free
  5139   002108  0101               	movlb	1	; () banked
  5140   00210A  4B0E               	infsnz	fputs@i& (0+255),f,b
  5141   00210C  2B0F               	incf	(fputs@i+1)& (0+255),f,b
  5142   00210E                     l3372:
  5143                           
  5144                           ; BSR set to: 1
  5145   00210E  510E               	movf	fputs@i& (0+255),w,b
  5146   002110  2509               	addwf	fputs@s& (0+255),w,b
  5147   002112  6ED9               	movwf	fsr2l,c
  5148   002114  510F               	movf	(fputs@i+1)& (0+255),w,b
  5149   002116  210A               	addwfc	(fputs@s+1)& (0+255),w,b
  5150   002118  6EDA               	movwf	fsr2h,c
  5151   00211A  50DF               	movf	indf2,w,c
  5152   00211C  6F0D               	movwf	fputs@c& (0+255),b
  5153   00211E  510D               	movf	fputs@c& (0+255),w,b
  5154   002120  A4D8               	btfss	status,2,c
  5155   002122  EF95  F010         	goto	u3321
  5156   002126  EF97  F010         	goto	u3320
  5157   00212A                     u3321:
  5158   00212A  EF7B  F010         	goto	l3368
  5159   00212E                     u3320:
  5160   00212E                     
  5161                           ; BSR set to: 1
  5162   00212E  0012               	return		;funcret
  5163   002130                     __end_of_fputs:
  5164                           	callstack 0
  5165                           
  5166 ;; *************** function _fputc *****************
  5167 ;; Defined at:
  5168 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;  c               2    0[BANK1 ] int 
  5171 ;;  fp              2    2[BANK1 ] PTR struct _IO_FILE
  5172 ;;		 -> sprintf@f(11), 
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;		None
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  2    0[BANK1 ] int 
  5177 ;; Registers used:
  5178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5184 ;;      Params:         0       0       4       0       0       0       0
  5185 ;;      Locals:         0       0       0       0       0       0       0
  5186 ;;      Temps:          0       0       5       0       0       0       0
  5187 ;;      Totals:         0       0       9       0       0       0       0
  5188 ;;Total ram usage:        9 bytes
  5189 ;; Hardware stack levels used: 1
  5190 ;; Hardware stack levels required when called: 13
  5191 ;; This function calls:
  5192 ;;		_putch
  5193 ;; This function is called by:
  5194 ;;		_pad
  5195 ;;		_vfpfcnvrt
  5196 ;;		_fputs
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text19
  5201   00187E                     __ptext19:
  5202                           	callstack 0
  5203   00187E                     _fputc:
  5204                           	callstack 13
  5205   00187E  0101               	movlb	1	; () banked
  5206   001880  5102               	movf	fputc@fp& (0+255),w,b
  5207   001882  1103               	iorwf	(fputc@fp+1)& (0+255),w,b
  5208   001884  B4D8               	btfsc	status,2,c
  5209   001886  EF47  F00C         	goto	u3281
  5210   00188A  EF49  F00C         	goto	u3280
  5211   00188E                     u3281:
  5212   00188E  EF52  F00C         	goto	l3356
  5213   001892                     u3280:
  5214   001892                     
  5215                           ; BSR set to: 1
  5216   001892  5102               	movf	fputc@fp& (0+255),w,b
  5217   001894  1103               	iorwf	(fputc@fp+1)& (0+255),w,b
  5218   001896  A4D8               	btfss	status,2,c
  5219   001898  EF50  F00C         	goto	u3291
  5220   00189C  EF52  F00C         	goto	u3290
  5221   0018A0                     u3291:
  5222   0018A0  EF57  F00C         	goto	l3358
  5223   0018A4                     u3290:
  5224   0018A4                     l3356:
  5225                           
  5226                           ; BSR set to: 1
  5227   0018A4  5100               	movf	fputc@c& (0+255),w,b
  5228   0018A6  EC04  F012         	call	_putch
  5229   0018AA  EFA4  F00C         	goto	l1045
  5230   0018AE                     l3358:
  5231                           
  5232                           ; BSR set to: 1
  5233   0018AE  EE20 F009          	lfsr	2,9
  5234   0018B2  5102               	movf	fputc@fp& (0+255),w,b
  5235   0018B4  26D9               	addwf	fsr2l,f,c
  5236   0018B6  5103               	movf	(fputc@fp+1)& (0+255),w,b
  5237   0018B8  22DA               	addwfc	fsr2h,f,c
  5238   0018BA  50DE               	movf	postinc2,w,c
  5239   0018BC  10DE               	iorwf	postinc2,w,c
  5240   0018BE  B4D8               	btfsc	status,2,c
  5241   0018C0  EF64  F00C         	goto	u3301
  5242   0018C4  EF66  F00C         	goto	u3300
  5243   0018C8                     u3301:
  5244   0018C8  EF81  F00C         	goto	l3362
  5245   0018CC                     u3300:
  5246   0018CC                     
  5247                           ; BSR set to: 1
  5248   0018CC  EE20 F009          	lfsr	2,9
  5249   0018D0  5102               	movf	fputc@fp& (0+255),w,b
  5250   0018D2  26D9               	addwf	fsr2l,f,c
  5251   0018D4  5103               	movf	(fputc@fp+1)& (0+255),w,b
  5252   0018D6  22DA               	addwfc	fsr2h,f,c
  5253   0018D8  EE10 F003          	lfsr	1,3
  5254   0018DC  5102               	movf	fputc@fp& (0+255),w,b
  5255   0018DE  26E1               	addwf	fsr1l,f,c
  5256   0018E0  5103               	movf	(fputc@fp+1)& (0+255),w,b
  5257   0018E2  22E2               	addwfc	fsr1h,f,c
  5258   0018E4  50DE               	movf	postinc2,w,c
  5259   0018E6  5CE6               	subwf	postinc1,w,c
  5260   0018E8  50E6               	movf	postinc1,w,c
  5261   0018EA  0A80               	xorlw	128
  5262   0018EC  6F08               	movwf	(??_fputc+4)& (0+255),b
  5263   0018EE  50DE               	movf	postinc2,w,c
  5264   0018F0  0A80               	xorlw	128
  5265   0018F2  5908               	subwfb	(??_fputc+4)& (0+255),w,b
  5266   0018F4  B0D8               	btfsc	status,0,c
  5267   0018F6  EF7F  F00C         	goto	u3311
  5268   0018FA  EF81  F00C         	goto	u3310
  5269   0018FE                     u3311:
  5270   0018FE  EFA4  F00C         	goto	l1045
  5271   001902                     u3310:
  5272   001902                     l3362:
  5273                           
  5274                           ; BSR set to: 1
  5275   001902  EE20 F003          	lfsr	2,3
  5276   001906  5102               	movf	fputc@fp& (0+255),w,b
  5277   001908  26D9               	addwf	fsr2l,f,c
  5278   00190A  5103               	movf	(fputc@fp+1)& (0+255),w,b
  5279   00190C  22DA               	addwfc	fsr2h,f,c
  5280   00190E  CFDE F104          	movff	postinc2,??_fputc
  5281   001912  CFDD F105          	movff	postdec2,??_fputc+1
  5282   001916  C102  FFD9         	movff	fputc@fp,fsr2l
  5283   00191A  C103  FFDA         	movff	fputc@fp+1,fsr2h
  5284   00191E  CFDE F106          	movff	postinc2,??_fputc+2
  5285   001922  CFDD F107          	movff	postdec2,??_fputc+3
  5286   001926  5104               	movf	??_fputc& (0+255),w,b
  5287   001928  2506               	addwf	(??_fputc+2)& (0+255),w,b
  5288   00192A  6ED9               	movwf	fsr2l,c
  5289   00192C  5105               	movf	(??_fputc+1)& (0+255),w,b
  5290   00192E  2107               	addwfc	(??_fputc+3)& (0+255),w,b
  5291   001930  6EDA               	movwf	fsr2h,c
  5292   001932  C100  FFDF         	movff	fputc@c,indf2
  5293   001936  EE20 F003          	lfsr	2,3
  5294   00193A  5102               	movf	fputc@fp& (0+255),w,b
  5295   00193C  26D9               	addwf	fsr2l,f,c
  5296   00193E  5103               	movf	(fputc@fp+1)& (0+255),w,b
  5297   001940  22DA               	addwfc	fsr2h,f,c
  5298   001942  2ADE               	incf	postinc2,f,c
  5299   001944  0E00               	movlw	0
  5300   001946  22DD               	addwfc	postdec2,f,c
  5301   001948                     l1045:
  5302   001948  0012               	return		;funcret
  5303   00194A                     __end_of_fputc:
  5304                           	callstack 0
  5305                           
  5306 ;; *************** function _putch *****************
  5307 ;; Defined at:
  5308 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  c               1    wreg     unsigned char 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;  c               1    0[COMRAM] unsigned char 
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      void 
  5315 ;; Registers used:
  5316 ;;		wreg
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5322 ;;      Params:         0       0       0       0       0       0       0
  5323 ;;      Locals:         0       0       0       0       0       0       0
  5324 ;;      Temps:          0       0       0       0       0       0       0
  5325 ;;      Totals:         0       0       0       0       0       0       0
  5326 ;;Total ram usage:        0 bytes
  5327 ;; Hardware stack levels used: 1
  5328 ;; Hardware stack levels required when called: 12
  5329 ;; This function calls:
  5330 ;;		Nothing
  5331 ;; This function is called by:
  5332 ;;		_fputc
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text20
  5337   002408                     __ptext20:
  5338                           	callstack 0
  5339   002408                     _putch:
  5340                           	callstack 13
  5341   002408  0012               	return		;funcret
  5342   00240A                     __end_of_putch:
  5343                           	callstack 0
  5344                           
  5345 ;; *************** function _abs *****************
  5346 ;; Defined at:
  5347 ;;		line 1 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  a               2   18[BANK1 ] int 
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;		None
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  2   18[BANK1 ] int 
  5354 ;; Registers used:
  5355 ;;		wreg, status,2, status,0
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5361 ;;      Params:         0       0       2       0       0       0       0
  5362 ;;      Locals:         0       0       0       0       0       0       0
  5363 ;;      Temps:          0       0       2       0       0       0       0
  5364 ;;      Totals:         0       0       4       0       0       0       0
  5365 ;;Total ram usage:        4 bytes
  5366 ;; Hardware stack levels used: 1
  5367 ;; Hardware stack levels required when called: 12
  5368 ;; This function calls:
  5369 ;;		Nothing
  5370 ;; This function is called by:
  5371 ;;		_dtoa
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           	psect	text21
  5376   0021FE                     __ptext21:
  5377                           	callstack 0
  5378   0021FE                     _abs:
  5379                           	callstack 13
  5380   0021FE  0101               	movlb	1	; () banked
  5381   002200  BF13               	btfsc	(abs@a+1)& (0+255),7,b
  5382   002202  EF0D  F011         	goto	u1890
  5383   002206  5113               	movf	(abs@a+1)& (0+255),w,b
  5384   002208  E106               	bnz	u1891
  5385   00220A  0512               	decf	abs@a& (0+255),w,b
  5386   00220C  B0D8               	btfsc	status,0,c
  5387   00220E  EF0B  F011         	goto	u1891
  5388   002212  EF0D  F011         	goto	u1890
  5389   002216                     u1891:
  5390   002216  EF1B  F011         	goto	l1030
  5391   00221A                     u1890:
  5392   00221A                     
  5393                           ; BSR set to: 1
  5394   00221A  C112  F114         	movff	abs@a,??_abs
  5395   00221E  C113  F115         	movff	abs@a+1,??_abs+1
  5396   002222  1F14               	comf	??_abs& (0+255),f,b
  5397   002224  1F15               	comf	(??_abs+1)& (0+255),f,b
  5398   002226  4B14               	infsnz	??_abs& (0+255),f,b
  5399   002228  2B15               	incf	(??_abs+1)& (0+255),f,b
  5400   00222A  C114  F112         	movff	??_abs,?_abs
  5401   00222E  C115  F113         	movff	??_abs+1,?_abs+1
  5402   002232  EF1F  F011         	goto	l1033
  5403   002236                     l1030:
  5404                           
  5405                           ; BSR set to: 1
  5406   002236  C112  F112         	movff	abs@a,?_abs
  5407   00223A  C113  F113         	movff	abs@a+1,?_abs+1
  5408   00223E                     l1033:
  5409                           
  5410                           ; BSR set to: 1
  5411   00223E  0012               	return		;funcret
  5412   002240                     __end_of_abs:
  5413                           	callstack 0
  5414                           
  5415 ;; *************** function ___aomod *****************
  5416 ;; Defined at:
  5417 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;  dividend        8    0[BANK1 ] long long 
  5420 ;;  divisor         8    8[BANK1 ] long long 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;  sign            1   17[BANK1 ] unsigned char 
  5423 ;;  counter         1   16[BANK1 ] unsigned char 
  5424 ;; Return value:  Size  Location     Type
  5425 ;;                  8    0[BANK1 ] long long 
  5426 ;; Registers used:
  5427 ;;		wreg, status,2, status,0
  5428 ;; Tracked objects:
  5429 ;;		On entry : 0/0
  5430 ;;		On exit  : 0/0
  5431 ;;		Unchanged: 0/0
  5432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5433 ;;      Params:         0       0      16       0       0       0       0
  5434 ;;      Locals:         0       0       2       0       0       0       0
  5435 ;;      Temps:          0       0       0       0       0       0       0
  5436 ;;      Totals:         0       0      18       0       0       0       0
  5437 ;;Total ram usage:       18 bytes
  5438 ;; Hardware stack levels used: 1
  5439 ;; Hardware stack levels required when called: 12
  5440 ;; This function calls:
  5441 ;;		Nothing
  5442 ;; This function is called by:
  5443 ;;		_dtoa
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text22
  5448   000EBA                     __ptext22:
  5449                           	callstack 0
  5450   000EBA                     ___aomod:
  5451                           	callstack 13
  5452   000EBA  0E00               	movlw	0
  5453   000EBC  0101               	movlb	1	; () banked
  5454   000EBE  6F11               	movwf	___aomod@sign& (0+255),b
  5455   000EC0                     
  5456                           ; BSR set to: 1
  5457   000EC0  BF07               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  5458   000EC2  EF67  F007         	goto	u3400
  5459   000EC6  EF65  F007         	goto	u3401
  5460   000ECA                     u3401:
  5461   000ECA  EF79  F007         	goto	l3426
  5462   000ECE                     u3400:
  5463   000ECE                     
  5464                           ; BSR set to: 1
  5465   000ECE  1F07               	comf	(___aomod@dividend+7)& (0+255),f,b
  5466   000ED0  1F06               	comf	(___aomod@dividend+6)& (0+255),f,b
  5467   000ED2  1F05               	comf	(___aomod@dividend+5)& (0+255),f,b
  5468   000ED4  1F04               	comf	(___aomod@dividend+4)& (0+255),f,b
  5469   000ED6  1F03               	comf	(___aomod@dividend+3)& (0+255),f,b
  5470   000ED8  1F02               	comf	(___aomod@dividend+2)& (0+255),f,b
  5471   000EDA  1F01               	comf	(___aomod@dividend+1)& (0+255),f,b
  5472   000EDC  6D00               	negf	___aomod@dividend& (0+255),b
  5473   000EDE  0E00               	movlw	0
  5474   000EE0  2301               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  5475   000EE2  2302               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  5476   000EE4  2303               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  5477   000EE6  2304               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  5478   000EE8  2305               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  5479   000EEA  2306               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  5480   000EEC  2307               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  5481   000EEE                     
  5482                           ; BSR set to: 1
  5483   000EEE  0E01               	movlw	1
  5484   000EF0  6F11               	movwf	___aomod@sign& (0+255),b
  5485   000EF2                     l3426:
  5486                           
  5487                           ; BSR set to: 1
  5488   000EF2  BF0F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  5489   000EF4  EF80  F007         	goto	u3410
  5490   000EF8  EF7E  F007         	goto	u3411
  5491   000EFC                     u3411:
  5492   000EFC  EF90  F007         	goto	l3430
  5493   000F00                     u3410:
  5494   000F00                     
  5495                           ; BSR set to: 1
  5496   000F00  1F0F               	comf	(___aomod@divisor+7)& (0+255),f,b
  5497   000F02  1F0E               	comf	(___aomod@divisor+6)& (0+255),f,b
  5498   000F04  1F0D               	comf	(___aomod@divisor+5)& (0+255),f,b
  5499   000F06  1F0C               	comf	(___aomod@divisor+4)& (0+255),f,b
  5500   000F08  1F0B               	comf	(___aomod@divisor+3)& (0+255),f,b
  5501   000F0A  1F0A               	comf	(___aomod@divisor+2)& (0+255),f,b
  5502   000F0C  1F09               	comf	(___aomod@divisor+1)& (0+255),f,b
  5503   000F0E  6D08               	negf	___aomod@divisor& (0+255),b
  5504   000F10  0E00               	movlw	0
  5505   000F12  2309               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  5506   000F14  230A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  5507   000F16  230B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  5508   000F18  230C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  5509   000F1A  230D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  5510   000F1C  230E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  5511   000F1E  230F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  5512   000F20                     l3430:
  5513                           
  5514                           ; BSR set to: 1
  5515   000F20  5108               	movf	___aomod@divisor& (0+255),w,b
  5516   000F22  1109               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  5517   000F24  110A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  5518   000F26  110B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  5519   000F28  110C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  5520   000F2A  110D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  5521   000F2C  110E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  5522   000F2E  110F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  5523   000F30  B4D8               	btfsc	status,2,c
  5524   000F32  EF9D  F007         	goto	u3421
  5525   000F36  EF9F  F007         	goto	u3420
  5526   000F3A                     u3421:
  5527   000F3A  EFE7  F007         	goto	l3446
  5528   000F3E                     u3420:
  5529   000F3E                     
  5530                           ; BSR set to: 1
  5531   000F3E  0E01               	movlw	1
  5532   000F40  6F10               	movwf	___aomod@counter& (0+255),b
  5533   000F42  EFAD  F007         	goto	l3436
  5534   000F46                     l3434:
  5535                           
  5536                           ; BSR set to: 1
  5537   000F46  90D8               	bcf	status,0,c
  5538   000F48  3708               	rlcf	___aomod@divisor& (0+255),f,b
  5539   000F4A  3709               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  5540   000F4C  370A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  5541   000F4E  370B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  5542   000F50  370C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  5543   000F52  370D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  5544   000F54  370E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  5545   000F56  370F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  5546   000F58  2B10               	incf	___aomod@counter& (0+255),f,b
  5547   000F5A                     l3436:
  5548                           
  5549                           ; BSR set to: 1
  5550   000F5A  AF0F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  5551   000F5C  EFB2  F007         	goto	u3431
  5552   000F60  EFB4  F007         	goto	u3430
  5553   000F64                     u3431:
  5554   000F64  EFA3  F007         	goto	l3434
  5555   000F68                     u3430:
  5556   000F68                     l3438:
  5557                           
  5558                           ; BSR set to: 1
  5559   000F68  5108               	movf	___aomod@divisor& (0+255),w,b
  5560   000F6A  5D00               	subwf	___aomod@dividend& (0+255),w,b
  5561   000F6C  5109               	movf	(___aomod@divisor+1)& (0+255),w,b
  5562   000F6E  5901               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  5563   000F70  510A               	movf	(___aomod@divisor+2)& (0+255),w,b
  5564   000F72  5902               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  5565   000F74  510B               	movf	(___aomod@divisor+3)& (0+255),w,b
  5566   000F76  5903               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  5567   000F78  510C               	movf	(___aomod@divisor+4)& (0+255),w,b
  5568   000F7A  5904               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  5569   000F7C  510D               	movf	(___aomod@divisor+5)& (0+255),w,b
  5570   000F7E  5905               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  5571   000F80  510E               	movf	(___aomod@divisor+6)& (0+255),w,b
  5572   000F82  5906               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  5573   000F84  510F               	movf	(___aomod@divisor+7)& (0+255),w,b
  5574   000F86  5907               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  5575   000F88  A0D8               	btfss	status,0,c
  5576   000F8A  EFC9  F007         	goto	u3441
  5577   000F8E  EFCB  F007         	goto	u3440
  5578   000F92                     u3441:
  5579   000F92  EFDB  F007         	goto	l3442
  5580   000F96                     u3440:
  5581   000F96                     
  5582                           ; BSR set to: 1
  5583   000F96  5108               	movf	___aomod@divisor& (0+255),w,b
  5584   000F98  5F00               	subwf	___aomod@dividend& (0+255),f,b
  5585   000F9A  5109               	movf	(___aomod@divisor+1)& (0+255),w,b
  5586   000F9C  5B01               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  5587   000F9E  510A               	movf	(___aomod@divisor+2)& (0+255),w,b
  5588   000FA0  5B02               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  5589   000FA2  510B               	movf	(___aomod@divisor+3)& (0+255),w,b
  5590   000FA4  5B03               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  5591   000FA6  510C               	movf	(___aomod@divisor+4)& (0+255),w,b
  5592   000FA8  5B04               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  5593   000FAA  510D               	movf	(___aomod@divisor+5)& (0+255),w,b
  5594   000FAC  5B05               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  5595   000FAE  510E               	movf	(___aomod@divisor+6)& (0+255),w,b
  5596   000FB0  5B06               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  5597   000FB2  510F               	movf	(___aomod@divisor+7)& (0+255),w,b
  5598   000FB4  5B07               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  5599   000FB6                     l3442:
  5600                           
  5601                           ; BSR set to: 1
  5602   000FB6  90D8               	bcf	status,0,c
  5603   000FB8  330F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  5604   000FBA  330E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  5605   000FBC  330D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  5606   000FBE  330C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  5607   000FC0  330B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  5608   000FC2  330A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  5609   000FC4  3309               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  5610   000FC6  3308               	rrcf	___aomod@divisor& (0+255),f,b
  5611   000FC8                     
  5612                           ; BSR set to: 1
  5613   000FC8  2F10               	decfsz	___aomod@counter& (0+255),f,b
  5614   000FCA  EFB4  F007         	goto	l3438
  5615   000FCE                     l3446:
  5616                           
  5617                           ; BSR set to: 1
  5618   000FCE  5111               	movf	___aomod@sign& (0+255),w,b
  5619   000FD0  B4D8               	btfsc	status,2,c
  5620   000FD2  EFED  F007         	goto	u3451
  5621   000FD6  EFEF  F007         	goto	u3450
  5622   000FDA                     u3451:
  5623   000FDA  EFFF  F007         	goto	l3450
  5624   000FDE                     u3450:
  5625   000FDE                     
  5626                           ; BSR set to: 1
  5627   000FDE  1F07               	comf	(___aomod@dividend+7)& (0+255),f,b
  5628   000FE0  1F06               	comf	(___aomod@dividend+6)& (0+255),f,b
  5629   000FE2  1F05               	comf	(___aomod@dividend+5)& (0+255),f,b
  5630   000FE4  1F04               	comf	(___aomod@dividend+4)& (0+255),f,b
  5631   000FE6  1F03               	comf	(___aomod@dividend+3)& (0+255),f,b
  5632   000FE8  1F02               	comf	(___aomod@dividend+2)& (0+255),f,b
  5633   000FEA  1F01               	comf	(___aomod@dividend+1)& (0+255),f,b
  5634   000FEC  6D00               	negf	___aomod@dividend& (0+255),b
  5635   000FEE  0E00               	movlw	0
  5636   000FF0  2301               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  5637   000FF2  2302               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  5638   000FF4  2303               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  5639   000FF6  2304               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  5640   000FF8  2305               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  5641   000FFA  2306               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  5642   000FFC  2307               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  5643   000FFE                     l3450:
  5644                           
  5645                           ; BSR set to: 1
  5646   000FFE  C100  F100         	movff	___aomod@dividend,?___aomod
  5647   001002  C101  F101         	movff	___aomod@dividend+1,?___aomod+1
  5648   001006  C102  F102         	movff	___aomod@dividend+2,?___aomod+2
  5649   00100A  C103  F103         	movff	___aomod@dividend+3,?___aomod+3
  5650   00100E  C104  F104         	movff	___aomod@dividend+4,?___aomod+4
  5651   001012  C105  F105         	movff	___aomod@dividend+5,?___aomod+5
  5652   001016  C106  F106         	movff	___aomod@dividend+6,?___aomod+6
  5653   00101A  C107  F107         	movff	___aomod@dividend+7,?___aomod+7
  5654   00101E                     
  5655                           ; BSR set to: 1
  5656   00101E  0012               	return		;funcret
  5657   001020                     __end_of___aomod:
  5658                           	callstack 0
  5659                           
  5660 ;; *************** function ___aodiv *****************
  5661 ;; Defined at:
  5662 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;  dividend        8    0[BANK1 ] long long 
  5665 ;;  divisor         8    8[BANK1 ] long long 
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;  quotient        8   18[BANK1 ] long long 
  5668 ;;  sign            1   17[BANK1 ] unsigned char 
  5669 ;;  counter         1   16[BANK1 ] unsigned char 
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  8    0[BANK1 ] long long 
  5672 ;; Registers used:
  5673 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5679 ;;      Params:         0       0      16       0       0       0       0
  5680 ;;      Locals:         0       0      10       0       0       0       0
  5681 ;;      Temps:          0       0       0       0       0       0       0
  5682 ;;      Totals:         0       0      26       0       0       0       0
  5683 ;;Total ram usage:       26 bytes
  5684 ;; Hardware stack levels used: 1
  5685 ;; Hardware stack levels required when called: 12
  5686 ;; This function calls:
  5687 ;;		Nothing
  5688 ;; This function is called by:
  5689 ;;		_dtoa
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text23
  5694   000BA8                     __ptext23:
  5695                           	callstack 0
  5696   000BA8                     ___aodiv:
  5697                           	callstack 13
  5698   000BA8  0E00               	movlw	0
  5699   000BAA  0101               	movlb	1	; () banked
  5700   000BAC  6F11               	movwf	___aodiv@sign& (0+255),b
  5701   000BAE                     
  5702                           ; BSR set to: 1
  5703   000BAE  BF0F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  5704   000BB0  EFDE  F005         	goto	u3330
  5705   000BB4  EFDC  F005         	goto	u3331
  5706   000BB8                     u3331:
  5707   000BB8  EFF0  F005         	goto	l3382
  5708   000BBC                     u3330:
  5709   000BBC                     
  5710                           ; BSR set to: 1
  5711   000BBC  1F0F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  5712   000BBE  1F0E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  5713   000BC0  1F0D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  5714   000BC2  1F0C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  5715   000BC4  1F0B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  5716   000BC6  1F0A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  5717   000BC8  1F09               	comf	(___aodiv@divisor+1)& (0+255),f,b
  5718   000BCA  6D08               	negf	___aodiv@divisor& (0+255),b
  5719   000BCC  0E00               	movlw	0
  5720   000BCE  2309               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  5721   000BD0  230A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  5722   000BD2  230B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  5723   000BD4  230C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  5724   000BD6  230D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  5725   000BD8  230E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  5726   000BDA  230F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  5727   000BDC                     
  5728                           ; BSR set to: 1
  5729   000BDC  0E01               	movlw	1
  5730   000BDE  6F11               	movwf	___aodiv@sign& (0+255),b
  5731   000BE0                     l3382:
  5732                           
  5733                           ; BSR set to: 1
  5734   000BE0  BF07               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  5735   000BE2  EFF7  F005         	goto	u3340
  5736   000BE6  EFF5  F005         	goto	u3341
  5737   000BEA                     u3341:
  5738   000BEA  EF09  F006         	goto	l3388
  5739   000BEE                     u3340:
  5740   000BEE                     
  5741                           ; BSR set to: 1
  5742   000BEE  1F07               	comf	(___aodiv@dividend+7)& (0+255),f,b
  5743   000BF0  1F06               	comf	(___aodiv@dividend+6)& (0+255),f,b
  5744   000BF2  1F05               	comf	(___aodiv@dividend+5)& (0+255),f,b
  5745   000BF4  1F04               	comf	(___aodiv@dividend+4)& (0+255),f,b
  5746   000BF6  1F03               	comf	(___aodiv@dividend+3)& (0+255),f,b
  5747   000BF8  1F02               	comf	(___aodiv@dividend+2)& (0+255),f,b
  5748   000BFA  1F01               	comf	(___aodiv@dividend+1)& (0+255),f,b
  5749   000BFC  6D00               	negf	___aodiv@dividend& (0+255),b
  5750   000BFE  0E00               	movlw	0
  5751   000C00  2301               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  5752   000C02  2302               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  5753   000C04  2303               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  5754   000C06  2304               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  5755   000C08  2305               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  5756   000C0A  2306               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  5757   000C0C  2307               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  5758   000C0E                     
  5759                           ; BSR set to: 1
  5760   000C0E  0E01               	movlw	1
  5761   000C10  1B11               	xorwf	___aodiv@sign& (0+255),f,b
  5762   000C12                     l3388:
  5763                           
  5764                           ; BSR set to: 1
  5765   000C12  EE21  F012         	lfsr	2,___aodiv@quotient
  5766   000C16  0E07               	movlw	7
  5767   000C18                     u3351:
  5768   000C18  6ADE               	clrf	postinc2,c
  5769   000C1A  06E8               	decf	wreg,f,c
  5770   000C1C  E2FD               	bc	u3351
  5771   000C1E                     
  5772                           ; BSR set to: 1
  5773   000C1E  5108               	movf	___aodiv@divisor& (0+255),w,b
  5774   000C20  1109               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  5775   000C22  110A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  5776   000C24  110B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  5777   000C26  110C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  5778   000C28  110D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  5779   000C2A  110E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  5780   000C2C  110F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  5781   000C2E  B4D8               	btfsc	status,2,c
  5782   000C30  EF1C  F006         	goto	u3361
  5783   000C34  EF1E  F006         	goto	u3360
  5784   000C38                     u3361:
  5785   000C38  EF70  F006         	goto	l3410
  5786   000C3C                     u3360:
  5787   000C3C                     
  5788                           ; BSR set to: 1
  5789   000C3C  0E01               	movlw	1
  5790   000C3E  6F10               	movwf	___aodiv@counter& (0+255),b
  5791   000C40  EF2C  F006         	goto	l3396
  5792   000C44                     l3394:
  5793                           
  5794                           ; BSR set to: 1
  5795   000C44  90D8               	bcf	status,0,c
  5796   000C46  3708               	rlcf	___aodiv@divisor& (0+255),f,b
  5797   000C48  3709               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  5798   000C4A  370A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  5799   000C4C  370B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  5800   000C4E  370C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  5801   000C50  370D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  5802   000C52  370E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  5803   000C54  370F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  5804   000C56  2B10               	incf	___aodiv@counter& (0+255),f,b
  5805   000C58                     l3396:
  5806                           
  5807                           ; BSR set to: 1
  5808   000C58  AF0F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  5809   000C5A  EF31  F006         	goto	u3371
  5810   000C5E  EF33  F006         	goto	u3370
  5811   000C62                     u3371:
  5812   000C62  EF22  F006         	goto	l3394
  5813   000C66                     u3370:
  5814   000C66                     l3398:
  5815                           
  5816                           ; BSR set to: 1
  5817   000C66  90D8               	bcf	status,0,c
  5818   000C68  3712               	rlcf	___aodiv@quotient& (0+255),f,b
  5819   000C6A  3713               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  5820   000C6C  3714               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  5821   000C6E  3715               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  5822   000C70  3716               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  5823   000C72  3717               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  5824   000C74  3718               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  5825   000C76  3719               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  5826   000C78                     
  5827                           ; BSR set to: 1
  5828   000C78  5108               	movf	___aodiv@divisor& (0+255),w,b
  5829   000C7A  5D00               	subwf	___aodiv@dividend& (0+255),w,b
  5830   000C7C  5109               	movf	(___aodiv@divisor+1)& (0+255),w,b
  5831   000C7E  5901               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  5832   000C80  510A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  5833   000C82  5902               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  5834   000C84  510B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  5835   000C86  5903               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  5836   000C88  510C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  5837   000C8A  5904               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  5838   000C8C  510D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  5839   000C8E  5905               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  5840   000C90  510E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  5841   000C92  5906               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  5842   000C94  510F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  5843   000C96  5907               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  5844   000C98  A0D8               	btfss	status,0,c
  5845   000C9A  EF51  F006         	goto	u3381
  5846   000C9E  EF53  F006         	goto	u3380
  5847   000CA2                     u3381:
  5848   000CA2  EF64  F006         	goto	l3406
  5849   000CA6                     u3380:
  5850   000CA6                     
  5851                           ; BSR set to: 1
  5852   000CA6  5108               	movf	___aodiv@divisor& (0+255),w,b
  5853   000CA8  5F00               	subwf	___aodiv@dividend& (0+255),f,b
  5854   000CAA  5109               	movf	(___aodiv@divisor+1)& (0+255),w,b
  5855   000CAC  5B01               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  5856   000CAE  510A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  5857   000CB0  5B02               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  5858   000CB2  510B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  5859   000CB4  5B03               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  5860   000CB6  510C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  5861   000CB8  5B04               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  5862   000CBA  510D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  5863   000CBC  5B05               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  5864   000CBE  510E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  5865   000CC0  5B06               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  5866   000CC2  510F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  5867   000CC4  5B07               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  5868   000CC6                     
  5869                           ; BSR set to: 1
  5870   000CC6  8112               	bsf	___aodiv@quotient& (0+255),0,b
  5871   000CC8                     l3406:
  5872                           
  5873                           ; BSR set to: 1
  5874   000CC8  90D8               	bcf	status,0,c
  5875   000CCA  330F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  5876   000CCC  330E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  5877   000CCE  330D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  5878   000CD0  330C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  5879   000CD2  330B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  5880   000CD4  330A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  5881   000CD6  3309               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  5882   000CD8  3308               	rrcf	___aodiv@divisor& (0+255),f,b
  5883   000CDA                     
  5884                           ; BSR set to: 1
  5885   000CDA  2F10               	decfsz	___aodiv@counter& (0+255),f,b
  5886   000CDC  EF33  F006         	goto	l3398
  5887   000CE0                     l3410:
  5888                           
  5889                           ; BSR set to: 1
  5890   000CE0  5111               	movf	___aodiv@sign& (0+255),w,b
  5891   000CE2  B4D8               	btfsc	status,2,c
  5892   000CE4  EF76  F006         	goto	u3391
  5893   000CE8  EF78  F006         	goto	u3390
  5894   000CEC                     u3391:
  5895   000CEC  EF88  F006         	goto	l3414
  5896   000CF0                     u3390:
  5897   000CF0                     
  5898                           ; BSR set to: 1
  5899   000CF0  1F19               	comf	(___aodiv@quotient+7)& (0+255),f,b
  5900   000CF2  1F18               	comf	(___aodiv@quotient+6)& (0+255),f,b
  5901   000CF4  1F17               	comf	(___aodiv@quotient+5)& (0+255),f,b
  5902   000CF6  1F16               	comf	(___aodiv@quotient+4)& (0+255),f,b
  5903   000CF8  1F15               	comf	(___aodiv@quotient+3)& (0+255),f,b
  5904   000CFA  1F14               	comf	(___aodiv@quotient+2)& (0+255),f,b
  5905   000CFC  1F13               	comf	(___aodiv@quotient+1)& (0+255),f,b
  5906   000CFE  6D12               	negf	___aodiv@quotient& (0+255),b
  5907   000D00  0E00               	movlw	0
  5908   000D02  2313               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  5909   000D04  2314               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  5910   000D06  2315               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  5911   000D08  2316               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  5912   000D0A  2317               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  5913   000D0C  2318               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  5914   000D0E  2319               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  5915   000D10                     l3414:
  5916                           
  5917                           ; BSR set to: 1
  5918   000D10  C112  F100         	movff	___aodiv@quotient,?___aodiv
  5919   000D14  C113  F101         	movff	___aodiv@quotient+1,?___aodiv+1
  5920   000D18  C114  F102         	movff	___aodiv@quotient+2,?___aodiv+2
  5921   000D1C  C115  F103         	movff	___aodiv@quotient+3,?___aodiv+3
  5922   000D20  C116  F104         	movff	___aodiv@quotient+4,?___aodiv+4
  5923   000D24  C117  F105         	movff	___aodiv@quotient+5,?___aodiv+5
  5924   000D28  C118  F106         	movff	___aodiv@quotient+6,?___aodiv+6
  5925   000D2C  C119  F107         	movff	___aodiv@quotient+7,?___aodiv+7
  5926   000D30                     
  5927                           ; BSR set to: 1
  5928   000D30  0012               	return		;funcret
  5929   000D32                     __end_of___aodiv:
  5930                           	callstack 0
  5931                           
  5932 ;; *************** function _UART_Write_Text *****************
  5933 ;; Defined at:
  5934 ;;		line 47 in file "setting_hardaware/uart.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;  text            2    1[BANK1 ] PTR unsigned char 
  5937 ;;		 -> STR_24(42), STR_23(29), STR_22(34), STR_21(14), 
  5938 ;;		 -> STR_20(19), STR_19(17), STR_18(17), STR_17(17), 
  5939 ;;		 -> STR_16(3), count_score@txt_830(30), count_score@txt_827(30), count_score@txt_821(30), 
  5940 ;;		 -> count_score@txt_819(30), count_score@txt_817(30), count_score@txt_815(30), count_score@txt_813(30), 
  5941 ;;		 -> count_score@txt(30), STR_7(32), STR_6(57), STR_5(41), 
  5942 ;;		 -> STR_4(33), STR_3(48), STR_2(31), ISR@s(50), 
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;  i               2    5[BANK1 ] int 
  5945 ;; Return value:  Size  Location     Type
  5946 ;;                  1    wreg      void 
  5947 ;; Registers used:
  5948 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5949 ;; Tracked objects:
  5950 ;;		On entry : 0/0
  5951 ;;		On exit  : 0/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5954 ;;      Params:         0       0       2       0       0       0       0
  5955 ;;      Locals:         0       0       2       0       0       0       0
  5956 ;;      Temps:          0       0       2       0       0       0       0
  5957 ;;      Totals:         0       0       6       0       0       0       0
  5958 ;;Total ram usage:        6 bytes
  5959 ;; Hardware stack levels used: 1
  5960 ;; Hardware stack levels required when called: 13
  5961 ;; This function calls:
  5962 ;;		_UART_Write
  5963 ;; This function is called by:
  5964 ;;		_start
  5965 ;;		_count_score
  5966 ;;		_show_result
  5967 ;;		_round
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text24
  5972   001B9E                     __ptext24:
  5973                           	callstack 0
  5974   001B9E                     _UART_Write_Text:
  5975                           	callstack 16
  5976   001B9E                     
  5977                           ;setting_hardaware/uart.c: 48:     for(int i=0;text[i]!='\0';i++){
  5978   001B9E  0E00               	movlw	0
  5979   001BA0  0101               	movlb	1	; () banked
  5980   001BA2  6F06               	movwf	(UART_Write_Text@i+1)& (0+255),b
  5981   001BA4  0E00               	movlw	0
  5982   001BA6  6F05               	movwf	UART_Write_Text@i& (0+255),b
  5983   001BA8  EFF2  F00D         	goto	l3664
  5984   001BAC                     l3660:
  5985                           
  5986                           ;setting_hardaware/uart.c: 49:         UART_Write(text[i]);
  5987   001BAC  0101               	movlb	1	; () banked
  5988   001BAE  5105               	movf	UART_Write_Text@i& (0+255),w,b
  5989   001BB0  2501               	addwf	UART_Write_Text@text& (0+255),w,b
  5990   001BB2  6F03               	movwf	??_UART_Write_Text& (0+255),b
  5991   001BB4  5106               	movf	(UART_Write_Text@i+1)& (0+255),w,b
  5992   001BB6  2102               	addwfc	(UART_Write_Text@text+1)& (0+255),w,b
  5993   001BB8  6F04               	movwf	(??_UART_Write_Text+1)& (0+255),b
  5994   001BBA  C103  FFF6         	movff	??_UART_Write_Text,tblptrl
  5995   001BBE  C104  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  5996   001BC2  6AF8               	clrf	tblptru,c
  5997   001BC4  0E05               	movlw	(high __ramtop+-1)
  5998   001BC6  64F7               	cpfsgt	tblptrh,c
  5999   001BC8  D003               	bra	u3757
  6000   001BCA  0008               	tblrd		*
  6001   001BCC  50F5               	movf	tablat,w,c
  6002   001BCE  D005               	bra	u3750
  6003   001BD0                     u3757:
  6004   001BD0  CFF6 FFE1          	movff	tblptrl,fsr1l
  6005   001BD4  CFF7 FFE2          	movff	tblptrh,fsr1h
  6006   001BD8  50E7               	movf	indf1,w,c
  6007   001BDA                     u3750:
  6008   001BDA  ECAD  F011         	call	_UART_Write
  6009   001BDE                     
  6010                           ;setting_hardaware/uart.c: 50:     }
  6011   001BDE  0101               	movlb	1	; () banked
  6012   001BE0  4B05               	infsnz	UART_Write_Text@i& (0+255),f,b
  6013   001BE2  2B06               	incf	(UART_Write_Text@i+1)& (0+255),f,b
  6014   001BE4                     l3664:
  6015                           
  6016                           ; BSR set to: 1
  6017   001BE4  5105               	movf	UART_Write_Text@i& (0+255),w,b
  6018   001BE6  2501               	addwf	UART_Write_Text@text& (0+255),w,b
  6019   001BE8  6F03               	movwf	??_UART_Write_Text& (0+255),b
  6020   001BEA  5106               	movf	(UART_Write_Text@i+1)& (0+255),w,b
  6021   001BEC  2102               	addwfc	(UART_Write_Text@text+1)& (0+255),w,b
  6022   001BEE  6F04               	movwf	(??_UART_Write_Text+1)& (0+255),b
  6023   001BF0  C103  FFF6         	movff	??_UART_Write_Text,tblptrl
  6024   001BF4  C104  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  6025   001BF8  6AF8               	clrf	tblptru,c
  6026   001BFA  0E05               	movlw	(high __ramtop+-1)
  6027   001BFC  64F7               	cpfsgt	tblptrh,c
  6028   001BFE  D003               	bra	u3767
  6029   001C00  0008               	tblrd		*
  6030   001C02  50F5               	movf	tablat,w,c
  6031   001C04  D005               	bra	u3760
  6032   001C06                     u3767:
  6033   001C06  CFF6 FFE1          	movff	tblptrl,fsr1l
  6034   001C0A  CFF7 FFE2          	movff	tblptrh,fsr1h
  6035   001C0E  50E7               	movf	indf1,w,c
  6036   001C10                     u3760:
  6037   001C10  0900               	iorlw	0
  6038   001C12  A4D8               	btfss	status,2,c
  6039   001C14  EF0E  F00E         	goto	u3771
  6040   001C18  EF10  F00E         	goto	u3770
  6041   001C1C                     u3771:
  6042   001C1C  EFD6  F00D         	goto	l3660
  6043   001C20                     u3770:
  6044   001C20  0012               	return		;funcret
  6045   001C22                     __end_of_UART_Write_Text:
  6046                           	callstack 0
  6047                           
  6048 ;; *************** function _UART_Write *****************
  6049 ;; Defined at:
  6050 ;;		line 40 in file "setting_hardaware/uart.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;  data            1    wreg     unsigned char 
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;  data            1    0[BANK1 ] unsigned char 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  1    wreg      void 
  6057 ;; Registers used:
  6058 ;;		wreg
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6064 ;;      Params:         0       0       0       0       0       0       0
  6065 ;;      Locals:         0       0       1       0       0       0       0
  6066 ;;      Temps:          0       0       0       0       0       0       0
  6067 ;;      Totals:         0       0       1       0       0       0       0
  6068 ;;Total ram usage:        1 bytes
  6069 ;; Hardware stack levels used: 1
  6070 ;; Hardware stack levels required when called: 12
  6071 ;; This function calls:
  6072 ;;		Nothing
  6073 ;; This function is called by:
  6074 ;;		_UART_Write_Text
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078                           	psect	text25
  6079   00235A                     __ptext25:
  6080                           	callstack 0
  6081   00235A                     _UART_Write:
  6082                           	callstack 16
  6083                           
  6084                           ;incstack = 0
  6085                           ;UART_Write@data stored from wreg
  6086   00235A  0101               	movlb	1	; () banked
  6087   00235C  6F00               	movwf	UART_Write@data& (0+255),b
  6088   00235E                     l258:
  6089   00235E  A2AC               	btfss	172,1,c	;volatile
  6090   002360  EFB4  F011         	goto	u3641
  6091   002364  EFB6  F011         	goto	u3640
  6092   002368                     u3641:
  6093   002368  EFAF  F011         	goto	l258
  6094   00236C                     u3640:
  6095   00236C                     
  6096                           ;setting_hardaware/uart.c: 43:     TXREG = data;
  6097   00236C  C100  FFAD         	movff	UART_Write@data,4013	;volatile
  6098   002370  0012               	return		;funcret
  6099   002372                     __end_of_UART_Write:
  6100                           	callstack 0
  6101                           
  6102 ;; *************** function _ClearBuffer *****************
  6103 ;; Defined at:
  6104 ;;		line 52 in file "setting_hardaware/uart.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;		None
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;  i               2    0[BANK1 ] int 
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  1    wreg      void 
  6111 ;; Registers used:
  6112 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6118 ;;      Params:         0       0       0       0       0       0       0
  6119 ;;      Locals:         0       0       2       0       0       0       0
  6120 ;;      Temps:          0       0       0       0       0       0       0
  6121 ;;      Totals:         0       0       2       0       0       0       0
  6122 ;;Total ram usage:        2 bytes
  6123 ;; Hardware stack levels used: 1
  6124 ;; Hardware stack levels required when called: 12
  6125 ;; This function calls:
  6126 ;;		Nothing
  6127 ;; This function is called by:
  6128 ;;		_start
  6129 ;;		_count_score
  6130 ;;		_show_result
  6131 ;;		_round
  6132 ;;		_main
  6133 ;; This function uses a non-reentrant model
  6134 ;;
  6135                           
  6136                           	psect	text26
  6137   002130                     __ptext26:
  6138                           	callstack 0
  6139   002130                     _ClearBuffer:
  6140                           	callstack 17
  6141   002130                     
  6142                           ;setting_hardaware/uart.c: 53:     for(int i = 0; i < 10 ; i++)
  6143   002130  0E00               	movlw	0
  6144   002132  0101               	movlb	1	; () banked
  6145   002134  6F01               	movwf	(ClearBuffer@i+1)& (0+255),b
  6146   002136  0E00               	movlw	0
  6147   002138  6F00               	movwf	ClearBuffer@i& (0+255),b
  6148   00213A                     l3688:
  6149                           
  6150                           ; BSR set to: 1
  6151                           ;setting_hardaware/uart.c: 54:         mystring[i] = '\0';
  6152   00213A  0E9C               	movlw	low _mystring
  6153   00213C  2500               	addwf	ClearBuffer@i& (0+255),w,b
  6154   00213E  6ED9               	movwf	fsr2l,c
  6155   002140  0E01               	movlw	high _mystring
  6156   002142  2101               	addwfc	(ClearBuffer@i+1)& (0+255),w,b
  6157   002144  6EDA               	movwf	fsr2h,c
  6158   002146  0E00               	movlw	0
  6159   002148  6EDF               	movwf	indf2,c
  6160   00214A                     
  6161                           ; BSR set to: 1
  6162   00214A  4B00               	infsnz	ClearBuffer@i& (0+255),f,b
  6163   00214C  2B01               	incf	(ClearBuffer@i+1)& (0+255),f,b
  6164   00214E                     
  6165                           ; BSR set to: 1
  6166   00214E  BF01               	btfsc	(ClearBuffer@i+1)& (0+255),7,b
  6167   002150  EFB3  F010         	goto	u3801
  6168   002154  5101               	movf	(ClearBuffer@i+1)& (0+255),w,b
  6169   002156  E109               	bnz	u3800
  6170   002158  0E0A               	movlw	10
  6171   00215A  5D00               	subwf	ClearBuffer@i& (0+255),w,b
  6172   00215C  A0D8               	btfss	status,0,c
  6173   00215E  EFB3  F010         	goto	u3801
  6174   002162  EFB5  F010         	goto	u3800
  6175   002166                     u3801:
  6176   002166  EF9D  F010         	goto	l3688
  6177   00216A                     u3800:
  6178   00216A                     
  6179                           ; BSR set to: 1
  6180                           ;setting_hardaware/uart.c: 55:     lenStr = 0;
  6181   00216A  0E00               	movlw	0
  6182   00216C  0100               	movlb	0	; () banked
  6183   00216E  6FC5               	movwf	(_lenStr+1)& (0+255),b
  6184   002170  0E00               	movlw	0
  6185   002172  6FC4               	movwf	_lenStr& (0+255),b
  6186   002174                     
  6187                           ; BSR set to: 0
  6188   002174  0012               	return		;funcret
  6189   002176                     __end_of_ClearBuffer:
  6190                           	callstack 0
  6191                           
  6192 ;; *************** function _SYSTEM_Initialize *****************
  6193 ;; Defined at:
  6194 ;;		line 60 in file "setting_hardaware/setting.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;		None
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;		None
  6199 ;; Return value:  Size  Location     Type
  6200 ;;                  1    wreg      void 
  6201 ;; Registers used:
  6202 ;;		wreg, status,2, cstack
  6203 ;; Tracked objects:
  6204 ;;		On entry : 0/0
  6205 ;;		On exit  : 0/0
  6206 ;;		Unchanged: 0/0
  6207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6208 ;;      Params:         0       0       0       0       0       0       0
  6209 ;;      Locals:         0       0       0       0       0       0       0
  6210 ;;      Temps:          0       0       0       0       0       0       0
  6211 ;;      Totals:         0       0       0       0       0       0       0
  6212 ;;Total ram usage:        0 bytes
  6213 ;; Hardware stack levels used: 1
  6214 ;; Hardware stack levels required when called: 13
  6215 ;; This function calls:
  6216 ;;		_ADC_Initialize
  6217 ;;		_CCP1_Initialize
  6218 ;;		_INTERRUPT_Initialize
  6219 ;;		_OSCILLATOR_Initialize
  6220 ;;		_UART_Initialize
  6221 ;; This function is called by:
  6222 ;;		_main
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           	psect	text27
  6227   00238A                     __ptext27:
  6228                           	callstack 0
  6229   00238A                     _SYSTEM_Initialize:
  6230                           	callstack 17
  6231   00238A                     
  6232                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
  6233   00238A  ECFA  F011         	call	_OSCILLATOR_Initialize	;wreg free
  6234                           
  6235                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
  6236   00238E  ECFE  F011         	call	_INTERRUPT_Initialize	;wreg free
  6237   002392                     
  6238                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
  6239   002392  EC9C  F011         	call	_UART_Initialize	;wreg free
  6240   002396                     
  6241                           ;setting_hardaware/setting.c: 69:     CCP1_Initialize();
  6242   002396  ECF4  F011         	call	_CCP1_Initialize	;wreg free
  6243   00239A                     
  6244                           ;setting_hardaware/setting.c: 70:     ADC_Initialize();
  6245   00239A  ECD0  F011         	call	_ADC_Initialize	;wreg free
  6246   00239E  0012               	return		;funcret
  6247   0023A0                     __end_of_SYSTEM_Initialize:
  6248                           	callstack 0
  6249                           
  6250 ;; *************** function _UART_Initialize *****************
  6251 ;; Defined at:
  6252 ;;		line 7 in file "setting_hardaware/uart.c"
  6253 ;; Parameters:    Size  Location     Type
  6254 ;;		None
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;		None
  6257 ;; Return value:  Size  Location     Type
  6258 ;;                  1    wreg      void 
  6259 ;; Registers used:
  6260 ;;		wreg, status,2
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6266 ;;      Params:         0       0       0       0       0       0       0
  6267 ;;      Locals:         0       0       0       0       0       0       0
  6268 ;;      Temps:          0       0       0       0       0       0       0
  6269 ;;      Totals:         0       0       0       0       0       0       0
  6270 ;;Total ram usage:        0 bytes
  6271 ;; Hardware stack levels used: 1
  6272 ;; Hardware stack levels required when called: 12
  6273 ;; This function calls:
  6274 ;;		Nothing
  6275 ;; This function is called by:
  6276 ;;		_SYSTEM_Initialize
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280                           	psect	text28
  6281   002338                     __ptext28:
  6282                           	callstack 0
  6283   002338                     _UART_Initialize:
  6284                           	callstack 17
  6285   002338                     
  6286                           ;setting_hardaware/uart.c: 18:     TRISCbits.TRISC6 = 1;
  6287   002338  8C94               	bsf	148,6,c	;volatile
  6288                           
  6289                           ;setting_hardaware/uart.c: 19:     TRISCbits.TRISC7 = 1;
  6290   00233A  8E94               	bsf	148,7,c	;volatile
  6291                           
  6292                           ;setting_hardaware/uart.c: 23:     TXSTAbits.SYNC = 0;
  6293   00233C  98AC               	bcf	172,4,c	;volatile
  6294                           
  6295                           ;setting_hardaware/uart.c: 24:     BAUDCONbits.BRG16 = 0;
  6296   00233E  96B8               	bcf	184,3,c	;volatile
  6297                           
  6298                           ;setting_hardaware/uart.c: 25:     TXSTAbits.BRGH = 0;
  6299   002340  94AC               	bcf	172,2,c	;volatile
  6300   002342                     
  6301                           ;setting_hardaware/uart.c: 26:     SPBRG = 12;
  6302   002342  0E0C               	movlw	12
  6303   002344  6EAF               	movwf	175,c	;volatile
  6304   002346                     
  6305                           ;setting_hardaware/uart.c: 28:     RCSTAbits.SPEN = 1;
  6306   002346  8EAB               	bsf	171,7,c	;volatile
  6307   002348                     
  6308                           ;setting_hardaware/uart.c: 29:     PIR1bits.TXIF = 0;
  6309   002348  989E               	bcf	158,4,c	;volatile
  6310   00234A                     
  6311                           ;setting_hardaware/uart.c: 30:     PIR1bits.RCIF = 0;
  6312   00234A  9A9E               	bcf	158,5,c	;volatile
  6313   00234C                     
  6314                           ;setting_hardaware/uart.c: 31:     TXSTAbits.TXEN = 1;
  6315   00234C  8AAC               	bsf	172,5,c	;volatile
  6316   00234E                     
  6317                           ;setting_hardaware/uart.c: 32:     RCSTAbits.CREN = 1;
  6318   00234E  88AB               	bsf	171,4,c	;volatile
  6319   002350                     
  6320                           ;setting_hardaware/uart.c: 33:     PIE1bits.TXIE = 0;
  6321   002350  989D               	bcf	157,4,c	;volatile
  6322   002352                     
  6323                           ;setting_hardaware/uart.c: 34:     IPR1bits.TXIP = 0;
  6324   002352  989F               	bcf	159,4,c	;volatile
  6325   002354                     
  6326                           ;setting_hardaware/uart.c: 35:     PIE1bits.RCIE = 1;
  6327   002354  8A9D               	bsf	157,5,c	;volatile
  6328   002356                     
  6329                           ;setting_hardaware/uart.c: 36:     IPR1bits.RCIP = 0;
  6330   002356  9A9F               	bcf	159,5,c	;volatile
  6331   002358  0012               	return		;funcret
  6332   00235A                     __end_of_UART_Initialize:
  6333                           	callstack 0
  6334                           
  6335 ;; *************** function _OSCILLATOR_Initialize *****************
  6336 ;; Defined at:
  6337 ;;		line 73 in file "setting_hardaware/setting.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;		None
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      void 
  6344 ;; Registers used:
  6345 ;;		None
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6351 ;;      Params:         0       0       0       0       0       0       0
  6352 ;;      Locals:         0       0       0       0       0       0       0
  6353 ;;      Temps:          0       0       0       0       0       0       0
  6354 ;;      Totals:         0       0       0       0       0       0       0
  6355 ;;Total ram usage:        0 bytes
  6356 ;; Hardware stack levels used: 1
  6357 ;; Hardware stack levels required when called: 12
  6358 ;; This function calls:
  6359 ;;		Nothing
  6360 ;; This function is called by:
  6361 ;;		_SYSTEM_Initialize
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           	psect	text29
  6366   0023F4                     __ptext29:
  6367                           	callstack 0
  6368   0023F4                     _OSCILLATOR_Initialize:
  6369                           	callstack 17
  6370   0023F4                     
  6371                           ;setting_hardaware/setting.c: 75:     IRCF2 = 1;
  6372   0023F4  8CD3               	bsf	4051,6,c	;volatile
  6373                           
  6374                           ;setting_hardaware/setting.c: 76:     IRCF1 = 0;
  6375   0023F6  9AD3               	bcf	4051,5,c	;volatile
  6376                           
  6377                           ;setting_hardaware/setting.c: 77:     IRCF0 = 0;
  6378   0023F8  98D3               	bcf	4051,4,c	;volatile
  6379   0023FA  0012               	return		;funcret
  6380   0023FC                     __end_of_OSCILLATOR_Initialize:
  6381                           	callstack 0
  6382                           
  6383 ;; *************** function _INTERRUPT_Initialize *****************
  6384 ;; Defined at:
  6385 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;		None
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;		None
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  1    wreg      void 
  6392 ;; Registers used:
  6393 ;;		None
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6399 ;;      Params:         0       0       0       0       0       0       0
  6400 ;;      Locals:         0       0       0       0       0       0       0
  6401 ;;      Temps:          0       0       0       0       0       0       0
  6402 ;;      Totals:         0       0       0       0       0       0       0
  6403 ;;Total ram usage:        0 bytes
  6404 ;; Hardware stack levels used: 1
  6405 ;; Hardware stack levels required when called: 12
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_SYSTEM_Initialize
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text30
  6414   0023FC                     __ptext30:
  6415                           	callstack 0
  6416   0023FC                     _INTERRUPT_Initialize:
  6417                           	callstack 17
  6418   0023FC                     
  6419                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
  6420   0023FC  8ED0               	bsf	208,7,c	;volatile
  6421                           
  6422                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
  6423   0023FE  8EF2               	bsf	242,7,c	;volatile
  6424                           
  6425                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
  6426   002400  8CF2               	bsf	242,6,c	;volatile
  6427   002402  0012               	return		;funcret
  6428   002404                     __end_of_INTERRUPT_Initialize:
  6429                           	callstack 0
  6430                           
  6431 ;; *************** function _CCP1_Initialize *****************
  6432 ;; Defined at:
  6433 ;;		line 3 in file "setting_hardaware/ccp1.c"
  6434 ;; Parameters:    Size  Location     Type
  6435 ;;		None
  6436 ;; Auto vars:     Size  Location     Type
  6437 ;;		None
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  1    wreg      void 
  6440 ;; Registers used:
  6441 ;;		wreg, status,2
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6447 ;;      Params:         0       0       0       0       0       0       0
  6448 ;;      Locals:         0       0       0       0       0       0       0
  6449 ;;      Temps:          0       0       0       0       0       0       0
  6450 ;;      Totals:         0       0       0       0       0       0       0
  6451 ;;Total ram usage:        0 bytes
  6452 ;; Hardware stack levels used: 1
  6453 ;; Hardware stack levels required when called: 12
  6454 ;; This function calls:
  6455 ;;		Nothing
  6456 ;; This function is called by:
  6457 ;;		_SYSTEM_Initialize
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           	psect	text31
  6462   0023E8                     __ptext31:
  6463                           	callstack 0
  6464   0023E8                     _CCP1_Initialize:
  6465                           	callstack 17
  6466   0023E8                     
  6467                           ;setting_hardaware/ccp1.c: 4:     TRISCbits.TRISC2=0;
  6468   0023E8  9494               	bcf	148,2,c	;volatile
  6469   0023EA                     
  6470                           ;setting_hardaware/ccp1.c: 5:     CCP1CON=9;
  6471   0023EA  0E09               	movlw	9
  6472   0023EC  6EBD               	movwf	189,c	;volatile
  6473   0023EE                     
  6474                           ;setting_hardaware/ccp1.c: 6:     PIR1bits.CCP1IF=0;
  6475   0023EE  949E               	bcf	158,2,c	;volatile
  6476   0023F0                     
  6477                           ;setting_hardaware/ccp1.c: 7:     IPR1bits.CCP1IP = 1;
  6478   0023F0  849F               	bsf	159,2,c	;volatile
  6479   0023F2  0012               	return		;funcret
  6480   0023F4                     __end_of_CCP1_Initialize:
  6481                           	callstack 0
  6482                           
  6483 ;; *************** function _ADC_Initialize *****************
  6484 ;; Defined at:
  6485 ;;		line 3 in file "setting_hardaware/adc.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;		None
  6488 ;; Auto vars:     Size  Location     Type
  6489 ;;		None
  6490 ;; Return value:  Size  Location     Type
  6491 ;;                  1    wreg      void 
  6492 ;; Registers used:
  6493 ;;		wreg, status,2
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 0/0
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6499 ;;      Params:         0       0       0       0       0       0       0
  6500 ;;      Locals:         0       0       0       0       0       0       0
  6501 ;;      Temps:          0       0       0       0       0       0       0
  6502 ;;      Totals:         0       0       0       0       0       0       0
  6503 ;;Total ram usage:        0 bytes
  6504 ;; Hardware stack levels used: 1
  6505 ;; Hardware stack levels required when called: 12
  6506 ;; This function calls:
  6507 ;;		Nothing
  6508 ;; This function is called by:
  6509 ;;		_SYSTEM_Initialize
  6510 ;; This function uses a non-reentrant model
  6511 ;;
  6512                           
  6513                           	psect	text32
  6514   0023A0                     __ptext32:
  6515                           	callstack 0
  6516   0023A0                     _ADC_Initialize:
  6517                           	callstack 17
  6518   0023A0                     
  6519                           ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
  6520   0023A0  6892               	setf	146,c	;volatile
  6521   0023A2                     
  6522                           ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0e;
  6523   0023A2  0E0E               	movlw	14
  6524   0023A4  6EC1               	movwf	193,c	;volatile
  6525   0023A6                     
  6526                           ;setting_hardaware/adc.c: 7:     ADFM = 1 ;
  6527   0023A6  8EC0               	bsf	4032,7,c	;volatile
  6528                           
  6529                           ;setting_hardaware/adc.c: 8:     ADCON2bits.ADCS = 7;
  6530   0023A8  0E07               	movlw	7
  6531   0023AA  12C0               	iorwf	192,f,c	;volatile
  6532                           
  6533                           ;setting_hardaware/adc.c: 9:     ADRESH=0;
  6534   0023AC  0E00               	movlw	0
  6535   0023AE  6EC4               	movwf	196,c	;volatile
  6536                           
  6537                           ;setting_hardaware/adc.c: 10:     ADRESL=0;
  6538   0023B0  0E00               	movlw	0
  6539   0023B2  6EC3               	movwf	195,c	;volatile
  6540   0023B4  0012               	return		;funcret
  6541   0023B6                     __end_of_ADC_Initialize:
  6542                           	callstack 0
  6543                           
  6544 ;; *************** function _Lo_ISR *****************
  6545 ;; Defined at:
  6546 ;;		line 81 in file "setting_hardaware/uart.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;		None
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;		None
  6551 ;; Return value:  Size  Location     Type
  6552 ;;                  1    wreg      void 
  6553 ;; Registers used:
  6554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6560 ;;      Params:         0       0       0       0       0       0       0
  6561 ;;      Locals:         0       0       0       0       0       0       0
  6562 ;;      Temps:          0       5       0       0       0       0       0
  6563 ;;      Totals:         0       5       0       0       0       0       0
  6564 ;;Total ram usage:        5 bytes
  6565 ;; Hardware stack levels used: 1
  6566 ;; Hardware stack levels required when called: 11
  6567 ;; This function calls:
  6568 ;;		_MyusartRead
  6569 ;; This function is called by:
  6570 ;;		Interrupt level 1
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574                           	psect	intcodelo
  6575   000018                     __pintcodelo:
  6576                           	callstack 0
  6577   000018                     _Lo_ISR:
  6578                           	callstack 10
  6579                           
  6580                           ;incstack = 0
  6581   000018  8074               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  6582   00001A  CFD8 F0BB          	movff	status,??_Lo_ISR
  6583   00001E  CFE8 F0BC          	movff	wreg,??_Lo_ISR+1
  6584   000022  CFE0 F0BD          	movff	bsr,??_Lo_ISR+2
  6585   000026  CFD9 F0BE          	movff	fsr2l,??_Lo_ISR+3
  6586   00002A  CFDA F0BF          	movff	fsr2h,??_Lo_ISR+4
  6587   00002E                     
  6588                           ;setting_hardaware/uart.c: 83:     if(RCIF)
  6589   00002E  AA9E               	btfss	3998,5,c	;volatile
  6590   000030  EF1C  F000         	goto	i1u326_21
  6591   000034  EF1E  F000         	goto	i1u326_20
  6592   000038                     i1u326_21:
  6593   000038  EF2A  F000         	goto	i1l287
  6594   00003C                     i1u326_20:
  6595   00003C                     
  6596                           ;setting_hardaware/uart.c: 84:     {;setting_hardaware/uart.c: 85:         if(RCSTAbits.
      +                          OERR)
  6597   00003C  A2AB               	btfss	171,1,c	;volatile
  6598   00003E  EF23  F000         	goto	i1u327_21
  6599   000042  EF25  F000         	goto	i1u327_20
  6600   000046                     i1u327_21:
  6601   000046  EF28  F000         	goto	i1l3348
  6602   00004A                     i1u327_20:
  6603   00004A                     
  6604                           ;setting_hardaware/uart.c: 86:         {;setting_hardaware/uart.c: 87:             CREN 
      +                          = 0;
  6605   00004A  98AB               	bcf	4011,4,c	;volatile
  6606                           
  6607                           ;setting_hardaware/uart.c: 88:             __nop();
  6608   00004C  F000               	nop	
  6609                           
  6610                           ;setting_hardaware/uart.c: 89:             CREN = 1;
  6611   00004E  88AB               	bsf	4011,4,c	;volatile
  6612   000050                     i1l3348:
  6613                           
  6614                           ;setting_hardaware/uart.c: 92:         MyusartRead();
  6615   000050  ECA8  F00F         	call	_MyusartRead	;wreg free
  6616   000054                     i1l287:
  6617   000054  C0BF  FFDA         	movff	??_Lo_ISR+4,fsr2h
  6618   000058  C0BE  FFD9         	movff	??_Lo_ISR+3,fsr2l
  6619   00005C  C0BD  FFE0         	movff	??_Lo_ISR+2,bsr
  6620   000060  C0BC  FFE8         	movff	??_Lo_ISR+1,wreg
  6621   000064  C0BB  FFD8         	movff	??_Lo_ISR,status
  6622   000068  9074               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  6623   00006A  0010               	retfie	
  6624   00006C                     __end_of_Lo_ISR:
  6625                           	callstack 0
  6626                           
  6627 ;; *************** function _MyusartRead *****************
  6628 ;; Defined at:
  6629 ;;		line 57 in file "setting_hardaware/uart.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;		None
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;		None
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  1    wreg      void 
  6636 ;; Registers used:
  6637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6643 ;;      Params:         0       0       0       0       0       0       0
  6644 ;;      Locals:         0       0       0       0       0       0       0
  6645 ;;      Temps:          0       1       0       0       0       0       0
  6646 ;;      Totals:         0       1       0       0       0       0       0
  6647 ;;Total ram usage:        1 bytes
  6648 ;; Hardware stack levels used: 1
  6649 ;; Hardware stack levels required when called: 10
  6650 ;; This function calls:
  6651 ;;		i1_ClearBuffer
  6652 ;;		i1_UART_Write
  6653 ;; This function is called by:
  6654 ;;		_Lo_ISR
  6655 ;; This function uses a non-reentrant model
  6656 ;;
  6657                           
  6658                           	psect	text34
  6659   001F50                     __ptext34:
  6660                           	callstack 0
  6661   001F50                     _MyusartRead:
  6662                           	callstack 10
  6663   001F50                     
  6664                           ;setting_hardaware/uart.c: 60:     mystring[lenStr] = RCREG;
  6665   001F50  0E9C               	movlw	low _mystring
  6666   001F52  0100               	movlb	0	; () banked
  6667   001F54  25C4               	addwf	_lenStr& (0+255),w,b
  6668   001F56  6ED9               	movwf	fsr2l,c
  6669   001F58  0E01               	movlw	high _mystring
  6670   001F5A  21C5               	addwfc	(_lenStr+1)& (0+255),w,b
  6671   001F5C  6EDA               	movwf	fsr2h,c
  6672   001F5E  CFAE FFDF          	movff	4014,indf2	;volatile
  6673   001F62                     
  6674                           ; BSR set to: 0
  6675                           ;setting_hardaware/uart.c: 61:     UART_Write(mystring[lenStr]);
  6676   001F62  0E9C               	movlw	low _mystring
  6677   001F64  25C4               	addwf	_lenStr& (0+255),w,b
  6678   001F66  6ED9               	movwf	fsr2l,c
  6679   001F68  0E01               	movlw	high _mystring
  6680   001F6A  21C5               	addwfc	(_lenStr+1)& (0+255),w,b
  6681   001F6C  6EDA               	movwf	fsr2h,c
  6682   001F6E  50DF               	movf	indf2,w,c
  6683   001F70  ECB9  F011         	call	i1_UART_Write
  6684   001F74                     
  6685                           ;setting_hardaware/uart.c: 62:     if(mystring[lenStr] == 13)
  6686   001F74  0E9C               	movlw	low _mystring
  6687   001F76  0100               	movlb	0	; () banked
  6688   001F78  25C4               	addwf	_lenStr& (0+255),w,b
  6689   001F7A  6ED9               	movwf	fsr2l,c
  6690   001F7C  0E01               	movlw	high _mystring
  6691   001F7E  21C5               	addwfc	(_lenStr+1)& (0+255),w,b
  6692   001F80  6EDA               	movwf	fsr2h,c
  6693   001F82  0E0D               	movlw	13
  6694   001F84  18DE               	xorwf	postinc2,w,c
  6695   001F86  A4D8               	btfss	status,2,c
  6696   001F88  EFC8  F00F         	goto	i1u306_21
  6697   001F8C  EFCA  F00F         	goto	i1u306_20
  6698   001F90                     i1u306_21:
  6699   001F90  EFD1  F00F         	goto	i1l3136
  6700   001F94                     i1u306_20:
  6701   001F94                     
  6702                           ; BSR set to: 0
  6703                           ;setting_hardaware/uart.c: 63:     {;setting_hardaware/uart.c: 64:         UART_Write('\
      +                          n');
  6704   001F94  0E0A               	movlw	10
  6705   001F96  ECB9  F011         	call	i1_UART_Write
  6706   001F9A                     
  6707                           ;setting_hardaware/uart.c: 65:         ClearBuffer();
  6708   001F9A  ECBB  F010         	call	i1_ClearBuffer	;wreg free
  6709                           
  6710                           ;setting_hardaware/uart.c: 66:     }
  6711   001F9E  EFD3  F00F         	goto	i1l277
  6712   001FA2                     i1l3136:
  6713                           
  6714                           ; BSR set to: 0
  6715                           ;setting_hardaware/uart.c: 68:     {;setting_hardaware/uart.c: 69:         lenStr++;
  6716   001FA2  4BC4               	infsnz	_lenStr& (0+255),f,b
  6717   001FA4  2BC5               	incf	(_lenStr+1)& (0+255),f,b
  6718   001FA6                     i1l277:
  6719   001FA6  0012               	return		;funcret
  6720   001FA8                     __end_of_MyusartRead:
  6721                           	callstack 0
  6722                           
  6723 ;; *************** function i1_UART_Write *****************
  6724 ;; Defined at:
  6725 ;;		line 40 in file "setting_hardaware/uart.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;  data            1    wreg     unsigned char 
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;  data            1   56[BANK0 ] unsigned char 
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  1    wreg      void 
  6732 ;; Registers used:
  6733 ;;		wreg
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6739 ;;      Params:         0       0       0       0       0       0       0
  6740 ;;      Locals:         0       1       0       0       0       0       0
  6741 ;;      Temps:          0       0       0       0       0       0       0
  6742 ;;      Totals:         0       1       0       0       0       0       0
  6743 ;;Total ram usage:        1 bytes
  6744 ;; Hardware stack levels used: 1
  6745 ;; Hardware stack levels required when called: 9
  6746 ;; This function calls:
  6747 ;;		Nothing
  6748 ;; This function is called by:
  6749 ;;		_MyusartRead
  6750 ;; This function uses a non-reentrant model
  6751 ;;
  6752                           
  6753                           	psect	text35
  6754   002372                     __ptext35:
  6755                           	callstack 0
  6756   002372                     i1_UART_Write:
  6757                           	callstack 10
  6758                           
  6759                           ;incstack = 0
  6760                           ;i1UART_Write@data stored from wreg
  6761   002372  0100               	movlb	0	; () banked
  6762   002374  6FB8               	movwf	i1UART_Write@data& (0+255),b
  6763   002376                     i1l258:
  6764   002376  A2AC               	btfss	172,1,c	;volatile
  6765   002378  EFC0  F011         	goto	i1u255_21
  6766   00237C  EFC2  F011         	goto	i1u255_20
  6767   002380                     i1u255_21:
  6768   002380  EFBB  F011         	goto	i1l258
  6769   002384                     i1u255_20:
  6770   002384                     
  6771                           ;setting_hardaware/uart.c: 43:     TXREG = data;
  6772   002384  C0B8  FFAD         	movff	i1UART_Write@data,4013	;volatile
  6773   002388  0012               	return		;funcret
  6774   00238A                     __end_ofi1_UART_Write:
  6775                           	callstack 0
  6776                           
  6777 ;; *************** function i1_ClearBuffer *****************
  6778 ;; Defined at:
  6779 ;;		line 52 in file "setting_hardaware/uart.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;		None
  6782 ;; Auto vars:     Size  Location     Type
  6783 ;;  i               2   56[BANK0 ] int 
  6784 ;; Return value:  Size  Location     Type
  6785 ;;                  1    wreg      void 
  6786 ;; Registers used:
  6787 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6788 ;; Tracked objects:
  6789 ;;		On entry : 0/0
  6790 ;;		On exit  : 0/0
  6791 ;;		Unchanged: 0/0
  6792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6793 ;;      Params:         0       0       0       0       0       0       0
  6794 ;;      Locals:         0       2       0       0       0       0       0
  6795 ;;      Temps:          0       0       0       0       0       0       0
  6796 ;;      Totals:         0       2       0       0       0       0       0
  6797 ;;Total ram usage:        2 bytes
  6798 ;; Hardware stack levels used: 1
  6799 ;; Hardware stack levels required when called: 9
  6800 ;; This function calls:
  6801 ;;		Nothing
  6802 ;; This function is called by:
  6803 ;;		_MyusartRead
  6804 ;; This function uses a non-reentrant model
  6805 ;;
  6806                           
  6807                           	psect	text36
  6808   002176                     __ptext36:
  6809                           	callstack 0
  6810   002176                     i1_ClearBuffer:
  6811                           	callstack 10
  6812   002176                     
  6813                           ;setting_hardaware/uart.c: 53:     for(int i = 0; i < 10 ; i++)
  6814   002176  0E00               	movlw	0
  6815   002178  0100               	movlb	0	; () banked
  6816   00217A  6FB9               	movwf	(i1ClearBuffer@i+1)& (0+255),b
  6817   00217C  0E00               	movlw	0
  6818   00217E  6FB8               	movwf	i1ClearBuffer@i& (0+255),b
  6819   002180                     i1l2842:
  6820                           
  6821                           ; BSR set to: 0
  6822                           ;setting_hardaware/uart.c: 54:         mystring[i] = '\0';
  6823   002180  0E9C               	movlw	low _mystring
  6824   002182  25B8               	addwf	i1ClearBuffer@i& (0+255),w,b
  6825   002184  6ED9               	movwf	fsr2l,c
  6826   002186  0E01               	movlw	high _mystring
  6827   002188  21B9               	addwfc	(i1ClearBuffer@i+1)& (0+255),w,b
  6828   00218A  6EDA               	movwf	fsr2h,c
  6829   00218C  0E00               	movlw	0
  6830   00218E  6EDF               	movwf	indf2,c
  6831   002190                     
  6832                           ; BSR set to: 0
  6833   002190  4BB8               	infsnz	i1ClearBuffer@i& (0+255),f,b
  6834   002192  2BB9               	incf	(i1ClearBuffer@i+1)& (0+255),f,b
  6835   002194                     
  6836                           ; BSR set to: 0
  6837   002194  BFB9               	btfsc	(i1ClearBuffer@i+1)& (0+255),7,b
  6838   002196  EFD6  F010         	goto	i1u257_21
  6839   00219A  51B9               	movf	(i1ClearBuffer@i+1)& (0+255),w,b
  6840   00219C  E109               	bnz	i1u257_20
  6841   00219E  0E0A               	movlw	10
  6842   0021A0  5DB8               	subwf	i1ClearBuffer@i& (0+255),w,b
  6843   0021A2  A0D8               	btfss	status,0,c
  6844   0021A4  EFD6  F010         	goto	i1u257_21
  6845   0021A8  EFD8  F010         	goto	i1u257_20
  6846   0021AC                     i1u257_21:
  6847   0021AC  EFC0  F010         	goto	i1l2842
  6848   0021B0                     i1u257_20:
  6849   0021B0                     
  6850                           ; BSR set to: 0
  6851                           ;setting_hardaware/uart.c: 55:     lenStr = 0;
  6852   0021B0  0E00               	movlw	0
  6853   0021B2  6FC5               	movwf	(_lenStr+1)& (0+255),b
  6854   0021B4  0E00               	movlw	0
  6855   0021B6  6FC4               	movwf	_lenStr& (0+255),b
  6856   0021B8                     
  6857                           ; BSR set to: 0
  6858   0021B8  0012               	return		;funcret
  6859   0021BA                     __end_ofi1_ClearBuffer:
  6860                           	callstack 0
  6861                           
  6862 ;; *************** function _ISR *****************
  6863 ;; Defined at:
  6864 ;;		line 29 in file "main.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;		None
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;  s              50    0[BANK0 ] unsigned char [50]
  6869 ;;  temp            2   54[BANK0 ] int 
  6870 ;;  range           2   52[BANK0 ] int 
  6871 ;;  value           2   50[BANK0 ] int 
  6872 ;; Return value:  Size  Location     Type
  6873 ;;                  1    wreg      void 
  6874 ;; Registers used:
  6875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6881 ;;      Params:         0       0       0       0       0       0       0
  6882 ;;      Locals:         0      56       0       0       0       0       0
  6883 ;;      Temps:          8       0       0       0       0       0       0
  6884 ;;      Totals:         8      56       0       0       0       0       0
  6885 ;;Total ram usage:       64 bytes
  6886 ;; Hardware stack levels used: 1
  6887 ;; Hardware stack levels required when called: 8
  6888 ;; This function calls:
  6889 ;;		i2_UART_Write_Text
  6890 ;;		i2___awdiv
  6891 ;;		i2_sprintf
  6892 ;; This function is called by:
  6893 ;;		Interrupt level 2
  6894 ;; This function uses a non-reentrant model
  6895 ;;
  6896                           
  6897                           	psect	intcode
  6898   000008                     __pintcode:
  6899                           	callstack 0
  6900   000008                     _ISR:
  6901                           	callstack 10
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;incstack = 0
  6905   000008  8274               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6906   00000A  EDAF  F00A         	call	int_func,f	;refresh shadow registers
  6907                           
  6908                           	psect	intcode_body
  6909   00155E                     __pintcode_body:
  6910                           	callstack 10
  6911   00155E                     int_func:
  6912                           	callstack 10
  6913   00155E  0006               	pop		; remove dummy address from shadow register refresh
  6914   001560  CFE1 F06C          	movff	fsr1l,??_ISR
  6915   001564  CFE2 F06D          	movff	fsr1h,??_ISR+1
  6916   001568  CFD9 F06E          	movff	fsr2l,??_ISR+2
  6917   00156C  CFDA F06F          	movff	fsr2h,??_ISR+3
  6918   001570  CFF6 F070          	movff	tblptrl,??_ISR+4
  6919   001574  CFF7 F071          	movff	tblptrh,??_ISR+5
  6920   001578  CFF8 F072          	movff	tblptru,??_ISR+6
  6921   00157C  CFF5 F073          	movff	tablat,??_ISR+7
  6922   001580                     
  6923                           ;main.c: 31:     adc_time --;
  6924   001580  CFC4 F0B2          	movff	4036,ISR@value	;volatile
  6925   001584  0100               	movlb	0	; () banked
  6926   001586  6BB3               	clrf	(ISR@value+1)& (0+255),b
  6927   001588                     
  6928                           ; BSR set to: 0
  6929                           ;main.c: 32: 
  6930   001588  C0B2  F001         	movff	ISR@value,i2___awdiv@dividend
  6931   00158C  C0B3  F002         	movff	ISR@value+1,i2___awdiv@dividend+1
  6932   001590  0E00               	movlw	0
  6933   001592  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  6934   001594  0E55               	movlw	85
  6935   001596  6E03               	movwf	i2___awdiv@divisor^0,c
  6936   001598  EC6D  F00D         	call	i2___awdiv	;wreg free
  6937   00159C  C001  F0B4         	movff	?i2___awdiv,ISR@range
  6938   0015A0  C002  F0B5         	movff	?i2___awdiv+1,ISR@range+1
  6939   0015A4                     
  6940                           ;main.c: 35:     ADCON0bits.GO = 1;
  6941   0015A4  0100               	movlb	0	; () banked
  6942   0015A6  51B4               	movf	ISR@range& (0+255),w,b
  6943   0015A8  11B5               	iorwf	(ISR@range+1)& (0+255),w,b
  6944   0015AA  A4D8               	btfss	status,2,c
  6945   0015AC  EFDA  F00A         	goto	i2u316_41
  6946   0015B0  EFDC  F00A         	goto	i2u316_40
  6947   0015B4                     i2u316_41:
  6948   0015B4  EFE2  F00A         	goto	i2l3214
  6949   0015B8                     i2u316_40:
  6950   0015B8                     
  6951                           ; BSR set to: 0
  6952                           ;main.c: 36: 
  6953   0015B8  0E00               	movlw	0
  6954   0015BA  6FB7               	movwf	(ISR@temp+1)& (0+255),b
  6955   0015BC  0E04               	movlw	4
  6956   0015BE  6FB6               	movwf	ISR@temp& (0+255),b
  6957                           
  6958                           ;main.c: 37: 
  6959   0015C0  EFF5  F00A         	goto	i2l3220
  6960   0015C4                     i2l3214:
  6961                           
  6962                           ; BSR set to: 0
  6963   0015C4  05B4               	decf	ISR@range& (0+255),w,b
  6964   0015C6  11B5               	iorwf	(ISR@range+1)& (0+255),w,b
  6965   0015C8  A4D8               	btfss	status,2,c
  6966   0015CA  EFE9  F00A         	goto	i2u317_41
  6967   0015CE  EFEB  F00A         	goto	i2u317_40
  6968   0015D2                     i2u317_41:
  6969   0015D2  EFF1  F00A         	goto	i2l3218
  6970   0015D6                     i2u317_40:
  6971   0015D6                     
  6972                           ; BSR set to: 0
  6973                           ;main.c: 38:     if(adc_time <= 0){
  6974   0015D6  0E00               	movlw	0
  6975   0015D8  6FB7               	movwf	(ISR@temp+1)& (0+255),b
  6976   0015DA  0E05               	movlw	5
  6977   0015DC  6FB6               	movwf	ISR@temp& (0+255),b
  6978                           
  6979                           ;main.c: 39:         ADCON0bits.GO = 0;
  6980   0015DE  EFF5  F00A         	goto	i2l3220
  6981   0015E2                     i2l3218:
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;main.c: 40:         PIR1bits.ADIF = 0;
  6985   0015E2  0E00               	movlw	0
  6986   0015E4  6FB7               	movwf	(ISR@temp+1)& (0+255),b
  6987   0015E6  0E06               	movlw	6
  6988   0015E8  6FB6               	movwf	ISR@temp& (0+255),b
  6989   0015EA                     i2l3220:
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;main.c: 43:     };main.c: 44:     return;
  6993   0015EA  51C2               	movf	_cur_play_times& (0+255),w,b
  6994   0015EC  19B6               	xorwf	ISR@temp& (0+255),w,b
  6995   0015EE  E109               	bnz	i2u318_40
  6996   0015F0  51C3               	movf	(_cur_play_times+1)& (0+255),w,b
  6997   0015F2  19B7               	xorwf	(ISR@temp+1)& (0+255),w,b
  6998   0015F4  B4D8               	btfsc	status,2,c
  6999   0015F6  EFFF  F00A         	goto	i2u318_41
  7000   0015FA  EF01  F00B         	goto	i2u318_40
  7001   0015FE                     i2u318_41:
  7002   0015FE  EF19  F00B         	goto	i2l3228
  7003   001602                     i2u318_40:
  7004   001602                     
  7005                           ; BSR set to: 0
  7006                           ;main.c: 45:     _delay((unsigned long)((4)*(4000000/4000000.0)));
  7007   001602  0E80               	movlw	low ISR@s
  7008   001604  6E59               	movwf	i2sprintf@s^0,c
  7009   001606  0E00               	movlw	high ISR@s
  7010   001608  6E5A               	movwf	(i2sprintf@s+1)^0,c
  7011   00160A  0E00               	movlw	low STR_1
  7012   00160C  6E5B               	movwf	i2sprintf@fmt^0,c
  7013   00160E  0E7C               	movlw	high STR_1
  7014   001610  6E5C               	movwf	(i2sprintf@fmt+1)^0,c
  7015   001612  C0B6  F05D         	movff	ISR@temp,?i2_sprintf+4
  7016   001616  C0B7  F05E         	movff	ISR@temp+1,?i2_sprintf+5
  7017   00161A  EC26  F010         	call	i2_sprintf	;wreg free
  7018   00161E                     
  7019                           ;main.c: 46: }
  7020   00161E  0E80               	movlw	low ISR@s
  7021   001620  6E02               	movwf	i2UART_Write_Text@text^0,c
  7022   001622  0E00               	movlw	high ISR@s
  7023   001624  6E03               	movwf	(i2UART_Write_Text@text+1)^0,c
  7024   001626  EC50  F00E         	call	i2_UART_Write_Text	;wreg free
  7025   00162A                     
  7026                           ;main.c: 47: 
  7027   00162A  C0B6  F0C2         	movff	ISR@temp,_cur_play_times
  7028   00162E  C0B7  F0C3         	movff	ISR@temp+1,_cur_play_times+1
  7029   001632                     i2l3228:
  7030                           
  7031                           ;main.c: 49: void shuffle(int *array, size_t n)
  7032   001632  0100               	movlb	0	; () banked
  7033   001634  07C0               	decf	_adc_time& (0+255),f,b
  7034   001636  A0D8               	btfss	status,0,c
  7035   001638  07C1               	decf	(_adc_time+1)& (0+255),f,b
  7036   00163A                     
  7037                           ; BSR set to: 0
  7038                           ;main.c: 51:     if (n > 1)
  7039   00163A  9C9E               	bcf	158,6,c	;volatile
  7040   00163C                     
  7041                           ; BSR set to: 0
  7042                           ;main.c: 53:         size_t i;
  7043   00163C  82C2               	bsf	194,1,c	;volatile
  7044   00163E                     
  7045                           ; BSR set to: 0
  7046                           ;main.c: 56:           size_t j = i + rand() / ((0x7fff) / (n - i) + 1);
  7047   00163E  BFC1               	btfsc	(_adc_time+1)& (0+255),7,b
  7048   001640  EF2C  F00B         	goto	i2u319_40
  7049   001644  51C1               	movf	(_adc_time+1)& (0+255),w,b
  7050   001646  E106               	bnz	i2u319_41
  7051   001648  05C0               	decf	_adc_time& (0+255),w,b
  7052   00164A  B0D8               	btfsc	status,0,c
  7053   00164C  EF2A  F00B         	goto	i2u319_41
  7054   001650  EF2C  F00B         	goto	i2u319_40
  7055   001654                     i2u319_41:
  7056   001654  EF3A  F00B         	goto	i2l83
  7057   001658                     i2u319_40:
  7058   001658                     
  7059                           ; BSR set to: 0
  7060                           ;main.c: 57:           int t = array[j];
  7061   001658  92C2               	bcf	194,1,c	;volatile
  7062                           
  7063                           ;main.c: 58:           array[j] = array[i];
  7064   00165A  9C9E               	bcf	158,6,c	;volatile
  7065   00165C                     
  7066                           ; BSR set to: 0
  7067                           ;main.c: 59:           array[i] = t;
  7068   00165C  0E51               	movlw	low STR_2
  7069   00165E  6E02               	movwf	i2UART_Write_Text@text^0,c
  7070   001660  0E7D               	movlw	high STR_2
  7071   001662  6E03               	movwf	(i2UART_Write_Text@text+1)^0,c
  7072   001664  EC50  F00E         	call	i2_UART_Write_Text	;wreg free
  7073                           
  7074                           ;main.c: 60:         }
  7075   001668  0E36               	movlw	low STR_3
  7076   00166A  6E02               	movwf	i2UART_Write_Text@text^0,c
  7077   00166C  0E7B               	movlw	high STR_3
  7078   00166E  6E03               	movwf	(i2UART_Write_Text@text+1)^0,c
  7079   001670  EC50  F00E         	call	i2_UART_Write_Text	;wreg free
  7080   001674                     i2l83:
  7081   001674  C073  FFF5         	movff	??_ISR+7,tablat
  7082   001678  C072  FFF8         	movff	??_ISR+6,tblptru
  7083   00167C  C071  FFF7         	movff	??_ISR+5,tblptrh
  7084   001680  C070  FFF6         	movff	??_ISR+4,tblptrl
  7085   001684  C06F  FFDA         	movff	??_ISR+3,fsr2h
  7086   001688  C06E  FFD9         	movff	??_ISR+2,fsr2l
  7087   00168C  C06D  FFE2         	movff	??_ISR+1,fsr1h
  7088   001690  C06C  FFE1         	movff	??_ISR,fsr1l
  7089   001694  9274               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7090   001696  0011               	retfie		f
  7091   001698                     __end_of_ISR:
  7092                           	callstack 0
  7093                           
  7094 ;; *************** function i2_sprintf *****************
  7095 ;; Defined at:
  7096 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  7097 ;; Parameters:    Size  Location     Type
  7098 ;;  s               2   88[COMRAM] PTR unsigned char 
  7099 ;;		 -> count_score@txt_830(30), count_score@txt_827(30), count_score@txt_821(30), count_score@txt_819(30), 
  7100 ;;		 -> count_score@txt_817(30), count_score@txt_815(30), count_score@txt_813(30), count_score@txt(30), 
  7101 ;;		 -> ISR@s(50), 
  7102 ;;  fmt             2   90[COMRAM] PTR const unsigned char 
  7103 ;;		 -> STR_15(37), STR_14(34), STR_13(34), STR_12(34), 
  7104 ;;		 -> STR_11(34), STR_10(34), STR_9(34), STR_8(34), 
  7105 ;;		 -> STR_1(34), 
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;  f              11   96[COMRAM] struct _IO_FILE
  7108 ;;  ap              2   94[COMRAM] PTR void [1]
  7109 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  7110 ;;  ret             2    0        int 
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  2   88[COMRAM] int 
  7113 ;; Registers used:
  7114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7120 ;;      Params:         6       0       0       0       0       0       0
  7121 ;;      Locals:        13       0       0       0       0       0       0
  7122 ;;      Temps:          0       0       0       0       0       0       0
  7123 ;;      Totals:        19       0       0       0       0       0       0
  7124 ;;Total ram usage:       19 bytes
  7125 ;; Hardware stack levels used: 1
  7126 ;; Hardware stack levels required when called: 7
  7127 ;; This function calls:
  7128 ;;		i2_vfprintf
  7129 ;; This function is called by:
  7130 ;;		_ISR
  7131 ;; This function uses a non-reentrant model
  7132 ;;
  7133                           
  7134                           	psect	text38
  7135   00204C                     __ptext38:
  7136                           	callstack 0
  7137   00204C                     i2_sprintf:
  7138                           	callstack 10
  7139   00204C  0E5D               	movlw	low (?i2_sprintf+4)
  7140   00204E  6E5F               	movwf	i2sprintf@ap^0,c
  7141   002050  0E00               	movlw	high (?i2_sprintf+4)
  7142   002052  6E60               	movwf	(i2sprintf@ap+1)^0,c
  7143   002054  C059  F061         	movff	i2sprintf@s,i2sprintf@f
  7144   002058  C05A  F062         	movff	i2sprintf@s+1,i2sprintf@f+1
  7145   00205C  0E00               	movlw	0
  7146   00205E  6E65               	movwf	(i2sprintf@f+4)^0,c
  7147   002060  0E00               	movlw	0
  7148   002062  6E64               	movwf	(i2sprintf@f+3)^0,c
  7149   002064  0E00               	movlw	0
  7150   002066  6E6B               	movwf	(i2sprintf@f+10)^0,c
  7151   002068  0E00               	movlw	0
  7152   00206A  6E6A               	movwf	(i2sprintf@f+9)^0,c
  7153   00206C  0E61               	movlw	low i2sprintf@f
  7154   00206E  6E51               	movwf	i2vfprintf@fp^0,c
  7155   002070  0E00               	movlw	high i2sprintf@f
  7156   002072  6E52               	movwf	(i2vfprintf@fp+1)^0,c
  7157   002074  C05B  F053         	movff	i2sprintf@fmt,i2vfprintf@fmt
  7158   002078  C05C  F054         	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
  7159   00207C  0E5F               	movlw	low i2sprintf@ap
  7160   00207E  6E55               	movwf	i2vfprintf@ap^0,c
  7161   002080  0E00               	movlw	high i2sprintf@ap
  7162   002082  6E56               	movwf	(i2vfprintf@ap+1)^0,c
  7163   002084  EC4D  F010         	call	i2_vfprintf	;wreg free
  7164   002088  5064               	movf	(i2sprintf@f+3)^0,w,c
  7165   00208A  2459               	addwf	i2sprintf@s^0,w,c
  7166   00208C  6ED9               	movwf	fsr2l,c
  7167   00208E  5065               	movf	(i2sprintf@f+4)^0,w,c
  7168   002090  205A               	addwfc	(i2sprintf@s+1)^0,w,c
  7169   002092  6EDA               	movwf	fsr2h,c
  7170   002094  0E00               	movlw	0
  7171   002096  6EDF               	movwf	indf2,c
  7172   002098  0012               	return		;funcret
  7173   00209A                     __end_ofi2_sprintf:
  7174                           	callstack 0
  7175                           
  7176 ;; *************** function i2_vfprintf *****************
  7177 ;; Defined at:
  7178 ;;		line 1520 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  7181 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  7182 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  7183 ;;		 -> STR_15(37), STR_14(34), STR_13(34), STR_12(34), 
  7184 ;;		 -> STR_11(34), STR_10(34), STR_9(34), STR_8(34), 
  7185 ;;		 -> STR_1(34), 
  7186 ;;  ap              2   84[COMRAM] PTR PTR void 
  7187 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  7188 ;; Auto vars:     Size  Location     Type
  7189 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  7190 ;;		 -> STR_15(37), STR_14(34), STR_13(34), STR_12(34), 
  7191 ;;		 -> STR_11(34), STR_10(34), STR_9(34), STR_8(34), 
  7192 ;;		 -> STR_1(34), 
  7193 ;; Return value:  Size  Location     Type
  7194 ;;                  2   80[COMRAM] int 
  7195 ;; Registers used:
  7196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7197 ;; Tracked objects:
  7198 ;;		On entry : 0/0
  7199 ;;		On exit  : 0/0
  7200 ;;		Unchanged: 0/0
  7201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7202 ;;      Params:         6       0       0       0       0       0       0
  7203 ;;      Locals:         2       0       0       0       0       0       0
  7204 ;;      Temps:          0       0       0       0       0       0       0
  7205 ;;      Totals:         8       0       0       0       0       0       0
  7206 ;;Total ram usage:        8 bytes
  7207 ;; Hardware stack levels used: 1
  7208 ;; Hardware stack levels required when called: 6
  7209 ;; This function calls:
  7210 ;;		i2_vfpfcnvrt
  7211 ;; This function is called by:
  7212 ;;		i2_sprintf
  7213 ;; This function uses a non-reentrant model
  7214 ;;
  7215                           
  7216                           	psect	text39
  7217   00209A                     __ptext39:
  7218                           	callstack 0
  7219   00209A                     i2_vfprintf:
  7220                           	callstack 10
  7221   00209A                     
  7222                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  7223   00209A  C053  F057         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  7224   00209E  C054  F058         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  7225                           
  7226                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  7227   0020A2  EF61  F010         	goto	i2l2854
  7228   0020A6                     i2l2852:
  7229                           
  7230                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  7231   0020A6  C051  F03F         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  7232   0020AA  C052  F040         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  7233   0020AE  0E57               	movlw	low i2vfprintf@cfmt
  7234   0020B0  6E41               	movwf	i2vfpfcnvrt@fmt^0,c
  7235   0020B2  0E00               	movlw	high i2vfprintf@cfmt
  7236   0020B4  6E42               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
  7237   0020B6  C055  F043         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  7238   0020BA  C056  F044         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  7239   0020BE  EC6A  F009         	call	i2_vfpfcnvrt	;wreg free
  7240   0020C2                     i2l2854:
  7241                           
  7242                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  7243   0020C2  C057  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  7244   0020C6  C058  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  7245   0020CA                     	if	0	;tblptru may be non-zero
  7246   0020CA                     	endif
  7247   0020CA                     	if	0	;tblptru may be non-zero
  7248   0020CA                     	endif
  7249   0020CA  0008               	tblrd		*
  7250   0020CC  50F5               	movf	tablat,w,c
  7251   0020CE  0900               	iorlw	0
  7252   0020D0  A4D8               	btfss	status,2,c
  7253   0020D2  EF6D  F010         	goto	i2u258_41
  7254   0020D6  EF6F  F010         	goto	i2u258_40
  7255   0020DA                     i2u258_41:
  7256   0020DA  EF53  F010         	goto	i2l2852
  7257   0020DE                     i2u258_40:
  7258   0020DE                     
  7259                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  7260   0020DE  0E00               	movlw	0
  7261   0020E0  6E52               	movwf	(?i2_vfprintf+1)^0,c
  7262   0020E2  0E00               	movlw	0
  7263   0020E4  6E51               	movwf	?i2_vfprintf^0,c
  7264   0020E6  0012               	return		;funcret
  7265   0020E8                     __end_ofi2_vfprintf:
  7266                           	callstack 0
  7267                           
  7268 ;; *************** function i2_vfpfcnvrt *****************
  7269 ;; Defined at:
  7270 ;;		line 1007 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  7273 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  7274 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  7275 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  7276 ;;  ap              2   66[COMRAM] PTR PTR void 
  7277 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;  convarg         8   70[COMRAM] struct .
  7280 ;;  cp              2   78[COMRAM] PTR unsigned char 
  7281 ;;		 -> STR_15(37), STR_14(34), STR_13(34), STR_12(34), 
  7282 ;;		 -> STR_11(34), STR_10(34), STR_9(34), STR_8(34), 
  7283 ;;		 -> STR_1(34), 
  7284 ;;  i               2    0        int 
  7285 ;;  done            2    0        int 
  7286 ;;  c               1    0        unsigned char 
  7287 ;; Return value:  Size  Location     Type
  7288 ;;                  1    wreg      void 
  7289 ;; Registers used:
  7290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7291 ;; Tracked objects:
  7292 ;;		On entry : 0/0
  7293 ;;		On exit  : 0/0
  7294 ;;		Unchanged: 0/0
  7295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7296 ;;      Params:         6       0       0       0       0       0       0
  7297 ;;      Locals:        10       0       0       0       0       0       0
  7298 ;;      Temps:          2       0       0       0       0       0       0
  7299 ;;      Totals:        18       0       0       0       0       0       0
  7300 ;;Total ram usage:       18 bytes
  7301 ;; Hardware stack levels used: 1
  7302 ;; Hardware stack levels required when called: 5
  7303 ;; This function calls:
  7304 ;;		i2_dtoa
  7305 ;;		i2_fputc
  7306 ;; This function is called by:
  7307 ;;		i2_vfprintf
  7308 ;; This function uses a non-reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text40
  7312   0012D4                     __ptext40:
  7313                           	callstack 0
  7314   0012D4                     i2_vfpfcnvrt:
  7315                           	callstack 10
  7316   0012D4                     
  7317                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  7318   0012D4  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7319   0012D8  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7320   0012DC  CFDE FFF6          	movff	postinc2,tblptrl
  7321   0012E0  CFDD FFF7          	movff	postdec2,tblptrh
  7322   0012E4                     	if	0	;tblptru may be non-zero
  7323   0012E4                     	endif
  7324   0012E4                     	if	0	;tblptru may be non-zero
  7325   0012E4                     	endif
  7326   0012E4  0008               	tblrd		*
  7327   0012E6  50F5               	movf	tablat,w,c
  7328   0012E8  0A25               	xorlw	37
  7329   0012EA  A4D8               	btfss	status,2,c
  7330   0012EC  EF7A  F009         	goto	i2u244_41
  7331   0012F0  EF7C  F009         	goto	i2u244_40
  7332   0012F4                     i2u244_41:
  7333   0012F4  EFFC  F009         	goto	i2l2714
  7334   0012F8                     i2u244_40:
  7335   0012F8                     
  7336                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  7337   0012F8  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7338   0012FC  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7339   001300  2ADE               	incf	postinc2,f,c
  7340   001302  0E00               	movlw	0
  7341   001304  22DD               	addwfc	postdec2,f,c
  7342   001306                     
  7343                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  7344   001306  0E00               	movlw	0
  7345   001308  0101               	movlb	1	; () banked
  7346   00130A  6F74               	movwf	(_width+1)& (0+255),b
  7347   00130C  0E00               	movlw	0
  7348   00130E  6F73               	movwf	_width& (0+255),b
  7349   001310  C173  F17B         	movff	_width,_flags
  7350   001314                     
  7351                           ; BSR set to: 1
  7352                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  7353   001314  6975               	setf	_prec& (0+255),b
  7354   001316  6976               	setf	(_prec+1)& (0+255),b
  7355   001318                     
  7356                           ; BSR set to: 1
  7357                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  7358   001318  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7359   00131C  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7360   001320  CFDE F04F          	movff	postinc2,i2vfpfcnvrt@cp
  7361   001324  CFDD F050          	movff	postdec2,i2vfpfcnvrt@cp+1
  7362   001328                     
  7363                           ; BSR set to: 1
  7364                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  7365   001328  C04F  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
  7366   00132C  C050  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
  7367   001330                     	if	0	;tblptru may be non-zero
  7368   001330                     	endif
  7369   001330                     	if	0	;tblptru may be non-zero
  7370   001330                     	endif
  7371   001330  0008               	tblrd		*
  7372   001332  50F5               	movf	tablat,w,c
  7373   001334  0A64               	xorlw	100
  7374   001336  B4D8               	btfsc	status,2,c
  7375   001338  EFA0  F009         	goto	i2u245_41
  7376   00133C  EFA2  F009         	goto	i2u245_40
  7377   001340                     i2u245_41:
  7378   001340  EFB0  F009         	goto	i2l2704
  7379   001344                     i2u245_40:
  7380   001344                     
  7381                           ; BSR set to: 1
  7382   001344  C04F  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
  7383   001348  C050  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
  7384   00134C                     	if	0	;tblptru may be non-zero
  7385   00134C                     	endif
  7386   00134C                     	if	0	;tblptru may be non-zero
  7387   00134C                     	endif
  7388   00134C  0008               	tblrd		*
  7389   00134E  50F5               	movf	tablat,w,c
  7390   001350  0A69               	xorlw	105
  7391   001352  A4D8               	btfss	status,2,c
  7392   001354  EFAE  F009         	goto	i2u246_41
  7393   001358  EFB0  F009         	goto	i2u246_40
  7394   00135C                     i2u246_41:
  7395   00135C  EFF3  F009         	goto	i2l2710
  7396   001360                     i2u246_40:
  7397   001360                     i2l2704:
  7398                           
  7399                           ; BSR set to: 1
  7400                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  7401   001360  C043  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  7402   001364  C044  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  7403   001368  CFDF F045          	movff	indf2,??i2_vfpfcnvrt
  7404   00136C  0E02               	movlw	2
  7405   00136E  26DE               	addwf	postinc2,f,c
  7406   001370  CFDF F046          	movff	indf2,??i2_vfpfcnvrt+1
  7407   001374  0E00               	movlw	0
  7408   001376  22DD               	addwfc	postdec2,f,c
  7409   001378  C045  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  7410   00137C  C046  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  7411   001380  CFDE F047          	movff	postinc2,i2vfpfcnvrt@convarg
  7412   001384  CFDD F048          	movff	postdec2,i2vfpfcnvrt@convarg+1
  7413   001388  0E00               	movlw	0
  7414   00138A  BE48               	btfsc	(i2vfpfcnvrt@convarg+1)^0,7,c
  7415   00138C  0EFF               	movlw	-1
  7416   00138E  6E49               	movwf	(i2vfpfcnvrt@convarg+2)^0,c
  7417   001390  6E4A               	movwf	(i2vfpfcnvrt@convarg+3)^0,c
  7418   001392  6E4B               	movwf	(i2vfpfcnvrt@convarg+4)^0,c
  7419   001394  6E4C               	movwf	(i2vfpfcnvrt@convarg+5)^0,c
  7420   001396  6E4D               	movwf	(i2vfpfcnvrt@convarg+6)^0,c
  7421   001398  6E4E               	movwf	(i2vfpfcnvrt@convarg+7)^0,c
  7422                           
  7423                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  7424   00139A  0E01               	movlw	1
  7425   00139C  244F               	addwf	i2vfpfcnvrt@cp^0,w,c
  7426   00139E  6E45               	movwf	??i2_vfpfcnvrt^0,c
  7427   0013A0  0E00               	movlw	0
  7428   0013A2  2050               	addwfc	(i2vfpfcnvrt@cp+1)^0,w,c
  7429   0013A4  6E46               	movwf	(??i2_vfpfcnvrt+1)^0,c
  7430   0013A6  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7431   0013AA  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7432   0013AE  C045  FFDE         	movff	??i2_vfpfcnvrt,postinc2
  7433   0013B2  C046  FFDD         	movff	??i2_vfpfcnvrt+1,postdec2
  7434   0013B6                     
  7435                           ; BSR set to: 1
  7436                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of i2_vfpfcnvrt is never used
  7437   0013B6  C03F  F01C         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  7438   0013BA  C040  F01D         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  7439   0013BE  C047  F01E         	movff	i2vfpfcnvrt@convarg,i2dtoa@d
  7440   0013C2  C048  F01F         	movff	i2vfpfcnvrt@convarg+1,i2dtoa@d+1
  7441   0013C6  C049  F020         	movff	i2vfpfcnvrt@convarg+2,i2dtoa@d+2
  7442   0013CA  C04A  F021         	movff	i2vfpfcnvrt@convarg+3,i2dtoa@d+3
  7443   0013CE  C04B  F022         	movff	i2vfpfcnvrt@convarg+4,i2dtoa@d+4
  7444   0013D2  C04C  F023         	movff	i2vfpfcnvrt@convarg+5,i2dtoa@d+5
  7445   0013D6  C04D  F024         	movff	i2vfpfcnvrt@convarg+6,i2dtoa@d+6
  7446   0013DA  C04E  F025         	movff	i2vfpfcnvrt@convarg+7,i2dtoa@d+7
  7447   0013DE  EC96  F004         	call	i2_dtoa	;wreg free
  7448   0013E2  EF10  F00A         	goto	i2l1020
  7449   0013E6                     i2l2710:
  7450                           
  7451                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  7452   0013E6  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7453   0013EA  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7454   0013EE  2ADE               	incf	postinc2,f,c
  7455   0013F0  0E00               	movlw	0
  7456   0013F2  22DD               	addwfc	postdec2,f,c
  7457   0013F4  EF10  F00A         	goto	i2l1020
  7458   0013F8                     i2l2714:
  7459                           
  7460                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  7461   0013F8  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7462   0013FC  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7463   001400  CFDE FFF6          	movff	postinc2,tblptrl
  7464   001404  CFDD FFF7          	movff	postdec2,tblptrh
  7465   001408                     	if	0	;tblptru may be non-zero
  7466   001408                     	endif
  7467   001408                     	if	0	;tblptru may be non-zero
  7468   001408                     	endif
  7469   001408  0008               	tblrd		*
  7470   00140A  50F5               	movf	tablat,w,c
  7471   00140C  6E01               	movwf	i2fputc@c^0,c
  7472   00140E  6A02               	clrf	(i2fputc@c+1)^0,c
  7473   001410  C03F  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  7474   001414  C040  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  7475   001418  ECA5  F00C         	call	i2_fputc	;wreg free
  7476   00141C  EFF3  F009         	goto	i2l2710
  7477   001420                     i2l1020:
  7478   001420  0012               	return		;funcret
  7479   001422                     __end_ofi2_vfpfcnvrt:
  7480                           	callstack 0
  7481                           
  7482 ;; *************** function i2_dtoa *****************
  7483 ;; Defined at:
  7484 ;;		line 443 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7487 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  7488 ;;  d               8   29[COMRAM] long long 
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;  n               8   51[COMRAM] long long 
  7491 ;;  i               2   59[COMRAM] int 
  7492 ;;  w               2   49[COMRAM] int 
  7493 ;;  p               2   47[COMRAM] int 
  7494 ;;  s               1   61[COMRAM] unsigned char 
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  1    wreg      void 
  7497 ;; Registers used:
  7498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7504 ;;      Params:        10       0       0       0       0       0       0
  7505 ;;      Locals:        17       0       0       0       0       0       0
  7506 ;;      Temps:          8       0       0       0       0       0       0
  7507 ;;      Totals:        35       0       0       0       0       0       0
  7508 ;;Total ram usage:       35 bytes
  7509 ;; Hardware stack levels used: 1
  7510 ;; Hardware stack levels required when called: 4
  7511 ;; This function calls:
  7512 ;;		i2___aodiv
  7513 ;;		i2___aomod
  7514 ;;		i2_abs
  7515 ;;		i2_pad
  7516 ;; This function is called by:
  7517 ;;		i2_vfpfcnvrt
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           	psect	text41
  7522   00092C                     __ptext41:
  7523                           	callstack 0
  7524   00092C                     i2_dtoa:
  7525                           	callstack 10
  7526   00092C                     
  7527                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  7528   00092C  C01E  F034         	movff	i2dtoa@d,i2dtoa@n
  7529   000930  C01F  F035         	movff	i2dtoa@d+1,i2dtoa@n+1
  7530   000934  C020  F036         	movff	i2dtoa@d+2,i2dtoa@n+2
  7531   000938  C021  F037         	movff	i2dtoa@d+3,i2dtoa@n+3
  7532   00093C  C022  F038         	movff	i2dtoa@d+4,i2dtoa@n+4
  7533   000940  C023  F039         	movff	i2dtoa@d+5,i2dtoa@n+5
  7534   000944  C024  F03A         	movff	i2dtoa@d+6,i2dtoa@n+6
  7535   000948  C025  F03B         	movff	i2dtoa@d+7,i2dtoa@n+7
  7536   00094C                     
  7537                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  7538   00094C  BE3B               	btfsc	(i2dtoa@n+7)^0,7,c
  7539   00094E  EFAB  F004         	goto	i2u222_41
  7540   000952  EFAE  F004         	goto	i2u222_40
  7541   000956                     i2u222_41:
  7542   000956  0E01               	movlw	1
  7543   000958  EFAF  F004         	goto	i2u223_40
  7544   00095C                     i2u222_40:
  7545   00095C  0E00               	movlw	0
  7546   00095E                     i2u223_40:
  7547   00095E  6E3E               	movwf	i2dtoa@s^0,c
  7548   000960                     
  7549                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  7550   000960  503E               	movf	i2dtoa@s^0,w,c
  7551   000962  B4D8               	btfsc	status,2,c
  7552   000964  EFB6  F004         	goto	i2u224_41
  7553   000968  EFB8  F004         	goto	i2u224_40
  7554   00096C                     i2u224_41:
  7555   00096C  EFC8  F004         	goto	i2l2560
  7556   000970                     i2u224_40:
  7557   000970                     
  7558                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  7559   000970  1E3B               	comf	(i2dtoa@n+7)^0,f,c
  7560   000972  1E3A               	comf	(i2dtoa@n+6)^0,f,c
  7561   000974  1E39               	comf	(i2dtoa@n+5)^0,f,c
  7562   000976  1E38               	comf	(i2dtoa@n+4)^0,f,c
  7563   000978  1E37               	comf	(i2dtoa@n+3)^0,f,c
  7564   00097A  1E36               	comf	(i2dtoa@n+2)^0,f,c
  7565   00097C  1E35               	comf	(i2dtoa@n+1)^0,f,c
  7566   00097E  6C34               	negf	i2dtoa@n^0,c
  7567   000980  0E00               	movlw	0
  7568   000982  2235               	addwfc	(i2dtoa@n+1)^0,f,c
  7569   000984  2236               	addwfc	(i2dtoa@n+2)^0,f,c
  7570   000986  2237               	addwfc	(i2dtoa@n+3)^0,f,c
  7571   000988  2238               	addwfc	(i2dtoa@n+4)^0,f,c
  7572   00098A  2239               	addwfc	(i2dtoa@n+5)^0,f,c
  7573   00098C  223A               	addwfc	(i2dtoa@n+6)^0,f,c
  7574   00098E  223B               	addwfc	(i2dtoa@n+7)^0,f,c
  7575   000990                     i2l2560:
  7576                           
  7577                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  7578   000990  0101               	movlb	1	; () banked
  7579   000992  BF76               	btfsc	(_prec+1)& (0+255),7,b
  7580   000994  EFD6  F004         	goto	i2u225_40
  7581   000998  5176               	movf	(_prec+1)& (0+255),w,b
  7582   00099A  E106               	bnz	i2u225_41
  7583   00099C  0575               	decf	_prec& (0+255),w,b
  7584   00099E  B0D8               	btfsc	status,0,c
  7585   0009A0  EFD4  F004         	goto	i2u225_41
  7586   0009A4  EFD6  F004         	goto	i2u225_40
  7587   0009A8                     i2u225_41:
  7588   0009A8  EFDC  F004         	goto	i2l999
  7589   0009AC                     i2u225_40:
  7590   0009AC                     
  7591                           ; BSR set to: 1
  7592   0009AC  0E00               	movlw	0
  7593   0009AE  6E31               	movwf	(i2dtoa@p+1)^0,c
  7594   0009B0  0E01               	movlw	1
  7595   0009B2  6E30               	movwf	i2dtoa@p^0,c
  7596   0009B4  EFE0  F004         	goto	i2l1001
  7597   0009B8                     i2l999:
  7598                           
  7599                           ; BSR set to: 1
  7600   0009B8  C175  F030         	movff	_prec,i2dtoa@p
  7601   0009BC  C176  F031         	movff	_prec+1,i2dtoa@p+1
  7602   0009C0                     i2l1001:
  7603                           
  7604                           ; BSR set to: 1
  7605                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  7606   0009C0  C173  F032         	movff	_width,i2dtoa@w
  7607   0009C4  C174  F033         	movff	_width+1,i2dtoa@w+1
  7608   0009C8                     
  7609                           ; BSR set to: 1
  7610                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  7611   0009C8  503E               	movf	i2dtoa@s^0,w,c
  7612   0009CA  B4D8               	btfsc	status,2,c
  7613   0009CC  EFEA  F004         	goto	i2u226_41
  7614   0009D0  EFEC  F004         	goto	i2u226_40
  7615   0009D4                     i2u226_41:
  7616   0009D4  EF03  F005         	goto	i2l1002
  7617   0009D8                     i2u226_40:
  7618   0009D8                     
  7619                           ; BSR set to: 1
  7620                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;D:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  7621   0009D8  0632               	decf	i2dtoa@w^0,f,c
  7622   0009DA  A0D8               	btfss	status,0,c
  7623   0009DC  0633               	decf	(i2dtoa@w+1)^0,f,c
  7624   0009DE                     
  7625                           ; BSR set to: 1
  7626                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  7627   0009DE  503E               	movf	i2dtoa@s^0,w,c
  7628   0009E0  A4D8               	btfss	status,2,c
  7629   0009E2  EFF5  F004         	goto	i2u227_41
  7630   0009E6  EFF7  F004         	goto	i2u227_40
  7631   0009EA                     i2u227_41:
  7632   0009EA  EFFD  F004         	goto	i2l2572
  7633   0009EE                     i2u227_40:
  7634   0009EE                     
  7635                           ; BSR set to: 1
  7636   0009EE  0E00               	movlw	0
  7637   0009F0  6E2F               	movwf	(i2_dtoa$1986+1)^0,c
  7638   0009F2  0E2B               	movlw	43
  7639   0009F4  6E2E               	movwf	i2_dtoa$1986^0,c
  7640   0009F6  EF01  F005         	goto	i2l2574
  7641   0009FA                     i2l2572:
  7642                           
  7643                           ; BSR set to: 1
  7644   0009FA  0E00               	movlw	0
  7645   0009FC  6E2F               	movwf	(i2_dtoa$1986+1)^0,c
  7646   0009FE  0E2D               	movlw	45
  7647   000A00  6E2E               	movwf	i2_dtoa$1986^0,c
  7648   000A02                     i2l2574:
  7649                           
  7650                           ; BSR set to: 1
  7651   000A02  C02E  F03E         	movff	i2_dtoa$1986,i2dtoa@s
  7652   000A06                     i2l1002:
  7653                           
  7654                           ; BSR set to: 1
  7655                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  7656   000A06  0E00               	movlw	0
  7657   000A08  6E3D               	movwf	(i2dtoa@i+1)^0,c
  7658   000A0A  0E1F               	movlw	31
  7659   000A0C  6E3C               	movwf	i2dtoa@i^0,c
  7660   000A0E                     
  7661                           ; BSR set to: 1
  7662                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  7663   000A0E  0E00               	movlw	0
  7664   000A10  6F9B               	movwf	(_dbuf+31)& (0+255),b
  7665                           
  7666                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  7667   000A12  EF87  F005         	goto	i2l2588
  7668   000A16                     i2l2578:
  7669                           
  7670                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;D:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  7671   000A16  063C               	decf	i2dtoa@i^0,f,c
  7672   000A18  A0D8               	btfss	status,0,c
  7673   000A1A  063D               	decf	(i2dtoa@i+1)^0,f,c
  7674   000A1C                     
  7675                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7676   000A1C  0E7C               	movlw	low _dbuf
  7677   000A1E  243C               	addwf	i2dtoa@i^0,w,c
  7678   000A20  6ED9               	movwf	fsr2l,c
  7679   000A22  0E01               	movlw	high _dbuf
  7680   000A24  203D               	addwfc	(i2dtoa@i+1)^0,w,c
  7681   000A26  6EDA               	movwf	fsr2h,c
  7682   000A28  C034  F001         	movff	i2dtoa@n,i2___aomod@dividend
  7683   000A2C  C035  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  7684   000A30  C036  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  7685   000A34  C037  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  7686   000A38  C038  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  7687   000A3C  C039  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  7688   000A40  C03A  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  7689   000A44  C03B  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  7690   000A48  0E0A               	movlw	10
  7691   000A4A  6E09               	movwf	i2___aomod@divisor^0,c
  7692   000A4C  0E00               	movlw	0
  7693   000A4E  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
  7694   000A50  0E00               	movlw	0
  7695   000A52  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
  7696   000A54  0E00               	movlw	0
  7697   000A56  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
  7698   000A58  0E00               	movlw	0
  7699   000A5A  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
  7700   000A5C  0E00               	movlw	0
  7701   000A5E  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
  7702   000A60  0E00               	movlw	0
  7703   000A62  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
  7704   000A64  0E00               	movlw	0
  7705   000A66  6E10               	movwf	(i2___aomod@divisor+7)^0,c
  7706   000A68  EC10  F008         	call	i2___aomod	;wreg free
  7707   000A6C  C001  F026         	movff	?i2___aomod,??i2_dtoa
  7708   000A70  C002  F027         	movff	?i2___aomod+1,??i2_dtoa+1
  7709   000A74  C003  F028         	movff	?i2___aomod+2,??i2_dtoa+2
  7710   000A78  C004  F029         	movff	?i2___aomod+3,??i2_dtoa+3
  7711   000A7C  C005  F02A         	movff	?i2___aomod+4,??i2_dtoa+4
  7712   000A80  C006  F02B         	movff	?i2___aomod+5,??i2_dtoa+5
  7713   000A84  C007  F02C         	movff	?i2___aomod+6,??i2_dtoa+6
  7714   000A88  C008  F02D         	movff	?i2___aomod+7,??i2_dtoa+7
  7715   000A8C  C026  F013         	movff	??i2_dtoa,i2abs@a
  7716   000A90  C027  F014         	movff	??i2_dtoa+1,i2abs@a+1
  7717   000A94  EC40  F011         	call	i2_abs	;wreg free
  7718   000A98  5013               	movf	?i2_abs^0,w,c
  7719   000A9A  0F30               	addlw	48
  7720   000A9C  6EDF               	movwf	indf2,c
  7721   000A9E                     
  7722                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  7723   000A9E  0630               	decf	i2dtoa@p^0,f,c
  7724   000AA0  A0D8               	btfss	status,0,c
  7725   000AA2  0631               	decf	(i2dtoa@p+1)^0,f,c
  7726   000AA4                     
  7727                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  7728   000AA4  0632               	decf	i2dtoa@w^0,f,c
  7729   000AA6  A0D8               	btfss	status,0,c
  7730   000AA8  0633               	decf	(i2dtoa@w+1)^0,f,c
  7731   000AAA                     
  7732                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  7733   000AAA  C034  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  7734   000AAE  C035  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  7735   000AB2  C036  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  7736   000AB6  C037  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  7737   000ABA  C038  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  7738   000ABE  C039  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  7739   000AC2  C03A  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  7740   000AC6  C03B  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  7741   000ACA  0E0A               	movlw	10
  7742   000ACC  6E09               	movwf	i2___aodiv@divisor^0,c
  7743   000ACE  0E00               	movlw	0
  7744   000AD0  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
  7745   000AD2  0E00               	movlw	0
  7746   000AD4  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
  7747   000AD6  0E00               	movlw	0
  7748   000AD8  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
  7749   000ADA  0E00               	movlw	0
  7750   000ADC  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
  7751   000ADE  0E00               	movlw	0
  7752   000AE0  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
  7753   000AE2  0E00               	movlw	0
  7754   000AE4  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
  7755   000AE6  0E00               	movlw	0
  7756   000AE8  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
  7757   000AEA  EC99  F006         	call	i2___aodiv	;wreg free
  7758   000AEE  C001  F034         	movff	?i2___aodiv,i2dtoa@n
  7759   000AF2  C002  F035         	movff	?i2___aodiv+1,i2dtoa@n+1
  7760   000AF6  C003  F036         	movff	?i2___aodiv+2,i2dtoa@n+2
  7761   000AFA  C004  F037         	movff	?i2___aodiv+3,i2dtoa@n+3
  7762   000AFE  C005  F038         	movff	?i2___aodiv+4,i2dtoa@n+4
  7763   000B02  C006  F039         	movff	?i2___aodiv+5,i2dtoa@n+5
  7764   000B06  C007  F03A         	movff	?i2___aodiv+6,i2dtoa@n+6
  7765   000B0A  C008  F03B         	movff	?i2___aodiv+7,i2dtoa@n+7
  7766   000B0E                     i2l2588:
  7767                           
  7768                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  7769   000B0E  BE3D               	btfsc	(i2dtoa@i+1)^0,7,c
  7770   000B10  EF92  F005         	goto	i2u228_41
  7771   000B14  503D               	movf	(i2dtoa@i+1)^0,w,c
  7772   000B16  E108               	bnz	i2u228_40
  7773   000B18  043C               	decf	i2dtoa@i^0,w,c
  7774   000B1A  A0D8               	btfss	status,0,c
  7775   000B1C  EF92  F005         	goto	i2u228_41
  7776   000B20  EF94  F005         	goto	i2u228_40
  7777   000B24                     i2u228_41:
  7778   000B24  EFB0  F005         	goto	i2l2594
  7779   000B28                     i2u228_40:
  7780   000B28  5034               	movf	i2dtoa@n^0,w,c
  7781   000B2A  1035               	iorwf	(i2dtoa@n+1)^0,w,c
  7782   000B2C  1036               	iorwf	(i2dtoa@n+2)^0,w,c
  7783   000B2E  1037               	iorwf	(i2dtoa@n+3)^0,w,c
  7784   000B30  1038               	iorwf	(i2dtoa@n+4)^0,w,c
  7785   000B32  1039               	iorwf	(i2dtoa@n+5)^0,w,c
  7786   000B34  103A               	iorwf	(i2dtoa@n+6)^0,w,c
  7787   000B36  103B               	iorwf	(i2dtoa@n+7)^0,w,c
  7788   000B38  A4D8               	btfss	status,2,c
  7789   000B3A  EFA1  F005         	goto	i2u229_41
  7790   000B3E  EFA3  F005         	goto	i2u229_40
  7791   000B42                     i2u229_41:
  7792   000B42  EF0B  F005         	goto	i2l2578
  7793   000B46                     i2u229_40:
  7794   000B46  BE31               	btfsc	(i2dtoa@p+1)^0,7,c
  7795   000B48  EFB0  F005         	goto	i2u230_40
  7796   000B4C  5031               	movf	(i2dtoa@p+1)^0,w,c
  7797   000B4E  E106               	bnz	i2u230_41
  7798   000B50  0430               	decf	i2dtoa@p^0,w,c
  7799   000B52  B0D8               	btfsc	status,0,c
  7800   000B54  EFAE  F005         	goto	i2u230_41
  7801   000B58  EFB0  F005         	goto	i2u230_40
  7802   000B5C                     i2u230_41:
  7803   000B5C  EF0B  F005         	goto	i2l2578
  7804   000B60                     i2u230_40:
  7805   000B60                     i2l2594:
  7806                           
  7807                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  7808   000B60  503E               	movf	i2dtoa@s^0,w,c
  7809   000B62  B4D8               	btfsc	status,2,c
  7810   000B64  EFB6  F005         	goto	i2u231_41
  7811   000B68  EFB8  F005         	goto	i2u231_40
  7812   000B6C                     i2u231_41:
  7813   000B6C  EFC3  F005         	goto	i2l2600
  7814   000B70                     i2u231_40:
  7815   000B70                     
  7816                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  7817   000B70  063C               	decf	i2dtoa@i^0,f,c
  7818   000B72  A0D8               	btfss	status,0,c
  7819   000B74  063D               	decf	(i2dtoa@i+1)^0,f,c
  7820   000B76                     
  7821                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  7822   000B76  0E7C               	movlw	low _dbuf
  7823   000B78  243C               	addwf	i2dtoa@i^0,w,c
  7824   000B7A  6ED9               	movwf	fsr2l,c
  7825   000B7C  0E01               	movlw	high _dbuf
  7826   000B7E  203D               	addwfc	(i2dtoa@i+1)^0,w,c
  7827   000B80  6EDA               	movwf	fsr2h,c
  7828   000B82  C03E  FFDF         	movff	i2dtoa@s,indf2
  7829   000B86                     i2l2600:
  7830                           
  7831                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  7832   000B86  C01C  F011         	movff	i2dtoa@fp,i2pad@fp
  7833   000B8A  C01D  F012         	movff	i2dtoa@fp+1,i2pad@fp+1
  7834   000B8E  0E7C               	movlw	low _dbuf
  7835   000B90  243C               	addwf	i2dtoa@i^0,w,c
  7836   000B92  6E13               	movwf	i2pad@buf^0,c
  7837   000B94  0E01               	movlw	high _dbuf
  7838   000B96  203D               	addwfc	(i2dtoa@i+1)^0,w,c
  7839   000B98  6E14               	movwf	(i2pad@buf+1)^0,c
  7840   000B9A  C032  F015         	movff	i2dtoa@w,i2pad@p
  7841   000B9E  C033  F016         	movff	i2dtoa@w+1,i2pad@p+1
  7842   000BA2  EC8F  F00E         	call	i2_pad	;wreg free
  7843   000BA6  0012               	return		;funcret
  7844   000BA8                     __end_ofi2_dtoa:
  7845                           	callstack 0
  7846                           
  7847 ;; *************** function i2_pad *****************
  7848 ;; Defined at:
  7849 ;;		line 133 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7852 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  7853 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7854 ;;		 -> dbuf(32), 
  7855 ;;  p               2   20[COMRAM] int 
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;  w               2   25[COMRAM] int 
  7858 ;;  i               2   23[COMRAM] int 
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  1    wreg      void 
  7861 ;; Registers used:
  7862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7868 ;;      Params:         6       0       0       0       0       0       0
  7869 ;;      Locals:         4       0       0       0       0       0       0
  7870 ;;      Temps:          1       0       0       0       0       0       0
  7871 ;;      Totals:        11       0       0       0       0       0       0
  7872 ;;Total ram usage:       11 bytes
  7873 ;; Hardware stack levels used: 1
  7874 ;; Hardware stack levels required when called: 3
  7875 ;; This function calls:
  7876 ;;		i2_fputc
  7877 ;;		i2_fputs
  7878 ;; This function is called by:
  7879 ;;		i2_dtoa
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883                           	psect	text42
  7884   001D1E                     __ptext42:
  7885                           	callstack 0
  7886   001D1E                     i2_pad:
  7887                           	callstack 10
  7888   001D1E                     
  7889                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  7890   001D1E  BE16               	btfsc	(i2pad@p+1)^0,7,c
  7891   001D20  EF94  F00E         	goto	i2u214_41
  7892   001D24  EF96  F00E         	goto	i2u214_40
  7893   001D28                     i2u214_41:
  7894   001D28  EF9C  F00E         	goto	i2l2498
  7895   001D2C                     i2u214_40:
  7896   001D2C  C015  F01A         	movff	i2pad@p,i2pad@w
  7897   001D30  C016  F01B         	movff	i2pad@p+1,i2pad@w+1
  7898   001D34  EFA0  F00E         	goto	i2l990
  7899   001D38                     i2l2498:
  7900   001D38  0E00               	movlw	0
  7901   001D3A  6E1B               	movwf	(i2pad@w+1)^0,c
  7902   001D3C  0E00               	movlw	0
  7903   001D3E  6E1A               	movwf	i2pad@w^0,c
  7904   001D40                     i2l990:
  7905                           
  7906                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  7907   001D40  0E00               	movlw	0
  7908   001D42  6E19               	movwf	(i2pad@i+1)^0,c
  7909   001D44  0E00               	movlw	0
  7910   001D46  6E18               	movwf	i2pad@i^0,c
  7911                           
  7912                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  7913   001D48  EFB2  F00E         	goto	i2l2504
  7914   001D4C                     i2l2500:
  7915                           
  7916                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  7917   001D4C  0E00               	movlw	0
  7918   001D4E  6E02               	movwf	(i2fputc@c+1)^0,c
  7919   001D50  0E20               	movlw	32
  7920   001D52  6E01               	movwf	i2fputc@c^0,c
  7921   001D54  C011  F003         	movff	i2pad@fp,i2fputc@fp
  7922   001D58  C012  F004         	movff	i2pad@fp+1,i2fputc@fp+1
  7923   001D5C  ECA5  F00C         	call	i2_fputc	;wreg free
  7924   001D60                     
  7925                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  7926   001D60  4A18               	infsnz	i2pad@i^0,f,c
  7927   001D62  2A19               	incf	(i2pad@i+1)^0,f,c
  7928   001D64                     i2l2504:
  7929                           
  7930                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  7931   001D64  501A               	movf	i2pad@w^0,w,c
  7932   001D66  5C18               	subwf	i2pad@i^0,w,c
  7933   001D68  5019               	movf	(i2pad@i+1)^0,w,c
  7934   001D6A  0A80               	xorlw	128
  7935   001D6C  6E17               	movwf	??i2_pad^0,c
  7936   001D6E  501B               	movf	(i2pad@w+1)^0,w,c
  7937   001D70  0A80               	xorlw	128
  7938   001D72  5817               	subwfb	??i2_pad^0,w,c
  7939   001D74  A0D8               	btfss	status,0,c
  7940   001D76  EFBF  F00E         	goto	i2u215_41
  7941   001D7A  EFC1  F00E         	goto	i2u215_40
  7942   001D7E                     i2u215_41:
  7943   001D7E  EFA6  F00E         	goto	i2l2500
  7944   001D82                     i2u215_40:
  7945   001D82                     
  7946                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  7947   001D82  C013  F00A         	movff	i2pad@buf,i2fputs@s
  7948   001D86  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  7949   001D8A  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  7950   001D8E  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  7951   001D92  ECDD  F010         	call	i2_fputs	;wreg free
  7952   001D96  0012               	return		;funcret
  7953   001D98                     __end_ofi2_pad:
  7954                           	callstack 0
  7955                           
  7956 ;; *************** function i2_fputs *****************
  7957 ;; Defined at:
  7958 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  7959 ;; Parameters:    Size  Location     Type
  7960 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7961 ;;		 -> dbuf(32), 
  7962 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7963 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;  i               2   14[COMRAM] int 
  7966 ;;  c               1   13[COMRAM] unsigned char 
  7967 ;; Return value:  Size  Location     Type
  7968 ;;                  2    9[COMRAM] int 
  7969 ;; Registers used:
  7970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7971 ;; Tracked objects:
  7972 ;;		On entry : 0/0
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7976 ;;      Params:         4       0       0       0       0       0       0
  7977 ;;      Locals:         3       0       0       0       0       0       0
  7978 ;;      Temps:          0       0       0       0       0       0       0
  7979 ;;      Totals:         7       0       0       0       0       0       0
  7980 ;;Total ram usage:        7 bytes
  7981 ;; Hardware stack levels used: 1
  7982 ;; Hardware stack levels required when called: 2
  7983 ;; This function calls:
  7984 ;;		i2_fputc
  7985 ;; This function is called by:
  7986 ;;		i2_pad
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990                           	psect	text43
  7991   0021BA                     __ptext43:
  7992                           	callstack 0
  7993   0021BA                     i2_fputs:
  7994                           	callstack 10
  7995   0021BA  0E00               	movlw	0
  7996   0021BC  6E10               	movwf	(i2fputs@i+1)^0,c
  7997   0021BE  0E00               	movlw	0
  7998   0021C0  6E0F               	movwf	i2fputs@i^0,c
  7999   0021C2  EFEE  F010         	goto	i2l2360
  8000   0021C6                     i2l2356:
  8001   0021C6  C00E  F001         	movff	i2fputs@c,i2fputc@c
  8002   0021CA  6A02               	clrf	(i2fputc@c+1)^0,c
  8003   0021CC  C00C  F003         	movff	i2fputs@fp,i2fputc@fp
  8004   0021D0  C00D  F004         	movff	i2fputs@fp+1,i2fputc@fp+1
  8005   0021D4  ECA5  F00C         	call	i2_fputc	;wreg free
  8006   0021D8  4A0F               	infsnz	i2fputs@i^0,f,c
  8007   0021DA  2A10               	incf	(i2fputs@i+1)^0,f,c
  8008   0021DC                     i2l2360:
  8009   0021DC  500F               	movf	i2fputs@i^0,w,c
  8010   0021DE  240A               	addwf	i2fputs@s^0,w,c
  8011   0021E0  6ED9               	movwf	fsr2l,c
  8012   0021E2  5010               	movf	(i2fputs@i+1)^0,w,c
  8013   0021E4  200B               	addwfc	(i2fputs@s+1)^0,w,c
  8014   0021E6  6EDA               	movwf	fsr2h,c
  8015   0021E8  50DF               	movf	indf2,w,c
  8016   0021EA  6E0E               	movwf	i2fputs@c^0,c
  8017   0021EC  500E               	movf	i2fputs@c^0,w,c
  8018   0021EE  A4D8               	btfss	status,2,c
  8019   0021F0  EFFC  F010         	goto	i2u190_41
  8020   0021F4  EFFE  F010         	goto	i2u190_40
  8021   0021F8                     i2u190_41:
  8022   0021F8  EFE3  F010         	goto	i2l2356
  8023   0021FC                     i2u190_40:
  8024   0021FC  0012               	return		;funcret
  8025   0021FE                     __end_ofi2_fputs:
  8026                           	callstack 0
  8027                           
  8028 ;; *************** function i2_fputc *****************
  8029 ;; Defined at:
  8030 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  8031 ;; Parameters:    Size  Location     Type
  8032 ;;  c               2    0[COMRAM] int 
  8033 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8034 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;		None
  8037 ;; Return value:  Size  Location     Type
  8038 ;;                  2    0[COMRAM] int 
  8039 ;; Registers used:
  8040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8041 ;; Tracked objects:
  8042 ;;		On entry : 0/0
  8043 ;;		On exit  : 0/0
  8044 ;;		Unchanged: 0/0
  8045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8046 ;;      Params:         4       0       0       0       0       0       0
  8047 ;;      Locals:         0       0       0       0       0       0       0
  8048 ;;      Temps:          5       0       0       0       0       0       0
  8049 ;;      Totals:         9       0       0       0       0       0       0
  8050 ;;Total ram usage:        9 bytes
  8051 ;; Hardware stack levels used: 1
  8052 ;; Hardware stack levels required when called: 1
  8053 ;; This function calls:
  8054 ;;		i2_putch
  8055 ;; This function is called by:
  8056 ;;		i2_pad
  8057 ;;		i2_vfpfcnvrt
  8058 ;;		i2_fputs
  8059 ;; This function uses a non-reentrant model
  8060 ;;
  8061                           
  8062                           	psect	text44
  8063   00194A                     __ptext44:
  8064                           	callstack 0
  8065   00194A                     i2_fputc:
  8066                           	callstack 13
  8067   00194A  5003               	movf	i2fputc@fp^0,w,c
  8068   00194C  1004               	iorwf	(i2fputc@fp+1)^0,w,c
  8069   00194E  B4D8               	btfsc	status,2,c
  8070   001950  EFAC  F00C         	goto	i2u170_41
  8071   001954  EFAE  F00C         	goto	i2u170_40
  8072   001958                     i2u170_41:
  8073   001958  EFB7  F00C         	goto	i2l2246
  8074   00195C                     i2u170_40:
  8075   00195C  5003               	movf	i2fputc@fp^0,w,c
  8076   00195E  1004               	iorwf	(i2fputc@fp+1)^0,w,c
  8077   001960  A4D8               	btfss	status,2,c
  8078   001962  EFB5  F00C         	goto	i2u171_41
  8079   001966  EFB7  F00C         	goto	i2u171_40
  8080   00196A                     i2u171_41:
  8081   00196A  EFBC  F00C         	goto	i2l2248
  8082   00196E                     i2u171_40:
  8083   00196E                     i2l2246:
  8084   00196E  5001               	movf	i2fputc@c^0,w,c
  8085   001970  EC05  F012         	call	i2_putch
  8086   001974  EF09  F00D         	goto	i2l1045
  8087   001978                     i2l2248:
  8088   001978  EE20 F009          	lfsr	2,9
  8089   00197C  5003               	movf	i2fputc@fp^0,w,c
  8090   00197E  26D9               	addwf	fsr2l,f,c
  8091   001980  5004               	movf	(i2fputc@fp+1)^0,w,c
  8092   001982  22DA               	addwfc	fsr2h,f,c
  8093   001984  50DE               	movf	postinc2,w,c
  8094   001986  10DE               	iorwf	postinc2,w,c
  8095   001988  B4D8               	btfsc	status,2,c
  8096   00198A  EFC9  F00C         	goto	i2u172_41
  8097   00198E  EFCB  F00C         	goto	i2u172_40
  8098   001992                     i2u172_41:
  8099   001992  EFE6  F00C         	goto	i2l2252
  8100   001996                     i2u172_40:
  8101   001996  EE20 F009          	lfsr	2,9
  8102   00199A  5003               	movf	i2fputc@fp^0,w,c
  8103   00199C  26D9               	addwf	fsr2l,f,c
  8104   00199E  5004               	movf	(i2fputc@fp+1)^0,w,c
  8105   0019A0  22DA               	addwfc	fsr2h,f,c
  8106   0019A2  EE10 F003          	lfsr	1,3
  8107   0019A6  5003               	movf	i2fputc@fp^0,w,c
  8108   0019A8  26E1               	addwf	fsr1l,f,c
  8109   0019AA  5004               	movf	(i2fputc@fp+1)^0,w,c
  8110   0019AC  22E2               	addwfc	fsr1h,f,c
  8111   0019AE  50DE               	movf	postinc2,w,c
  8112   0019B0  5CE6               	subwf	postinc1,w,c
  8113   0019B2  50E6               	movf	postinc1,w,c
  8114   0019B4  0A80               	xorlw	128
  8115   0019B6  6E09               	movwf	(??i2_fputc+4)^0,c
  8116   0019B8  50DE               	movf	postinc2,w,c
  8117   0019BA  0A80               	xorlw	128
  8118   0019BC  5809               	subwfb	(??i2_fputc+4)^0,w,c
  8119   0019BE  B0D8               	btfsc	status,0,c
  8120   0019C0  EFE4  F00C         	goto	i2u173_41
  8121   0019C4  EFE6  F00C         	goto	i2u173_40
  8122   0019C8                     i2u173_41:
  8123   0019C8  EF09  F00D         	goto	i2l1045
  8124   0019CC                     i2u173_40:
  8125   0019CC                     i2l2252:
  8126   0019CC  EE20 F003          	lfsr	2,3
  8127   0019D0  5003               	movf	i2fputc@fp^0,w,c
  8128   0019D2  26D9               	addwf	fsr2l,f,c
  8129   0019D4  5004               	movf	(i2fputc@fp+1)^0,w,c
  8130   0019D6  22DA               	addwfc	fsr2h,f,c
  8131   0019D8  CFDE F005          	movff	postinc2,??i2_fputc
  8132   0019DC  CFDD F006          	movff	postdec2,??i2_fputc+1
  8133   0019E0  C003  FFD9         	movff	i2fputc@fp,fsr2l
  8134   0019E4  C004  FFDA         	movff	i2fputc@fp+1,fsr2h
  8135   0019E8  CFDE F007          	movff	postinc2,??i2_fputc+2
  8136   0019EC  CFDD F008          	movff	postdec2,??i2_fputc+3
  8137   0019F0  5005               	movf	??i2_fputc^0,w,c
  8138   0019F2  2407               	addwf	(??i2_fputc+2)^0,w,c
  8139   0019F4  6ED9               	movwf	fsr2l,c
  8140   0019F6  5006               	movf	(??i2_fputc+1)^0,w,c
  8141   0019F8  2008               	addwfc	(??i2_fputc+3)^0,w,c
  8142   0019FA  6EDA               	movwf	fsr2h,c
  8143   0019FC  C001  FFDF         	movff	i2fputc@c,indf2
  8144   001A00  EE20 F003          	lfsr	2,3
  8145   001A04  5003               	movf	i2fputc@fp^0,w,c
  8146   001A06  26D9               	addwf	fsr2l,f,c
  8147   001A08  5004               	movf	(i2fputc@fp+1)^0,w,c
  8148   001A0A  22DA               	addwfc	fsr2h,f,c
  8149   001A0C  2ADE               	incf	postinc2,f,c
  8150   001A0E  0E00               	movlw	0
  8151   001A10  22DD               	addwfc	postdec2,f,c
  8152   001A12                     i2l1045:
  8153   001A12  0012               	return		;funcret
  8154   001A14                     __end_ofi2_fputc:
  8155                           	callstack 0
  8156                           
  8157 ;; *************** function i2_putch *****************
  8158 ;; Defined at:
  8159 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  8160 ;; Parameters:    Size  Location     Type
  8161 ;;  c               1    wreg     unsigned char 
  8162 ;; Auto vars:     Size  Location     Type
  8163 ;;  c               1  (no storage) unsigned char 
  8164 ;; Return value:  Size  Location     Type
  8165 ;;                  1    wreg      void 
  8166 ;; Registers used:
  8167 ;;		wreg
  8168 ;; Tracked objects:
  8169 ;;		On entry : 0/0
  8170 ;;		On exit  : 0/0
  8171 ;;		Unchanged: 0/0
  8172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8173 ;;      Params:         0       0       0       0       0       0       0
  8174 ;;      Locals:         0       0       0       0       0       0       0
  8175 ;;      Temps:          0       0       0       0       0       0       0
  8176 ;;      Totals:         0       0       0       0       0       0       0
  8177 ;;Total ram usage:        0 bytes
  8178 ;; Hardware stack levels used: 1
  8179 ;; This function calls:
  8180 ;;		Nothing
  8181 ;; This function is called by:
  8182 ;;		i2_fputc
  8183 ;; This function uses a non-reentrant model
  8184 ;;
  8185                           
  8186                           	psect	text45
  8187   00240A                     __ptext45:
  8188                           	callstack 0
  8189   00240A                     i2_putch:
  8190                           	callstack 13
  8191   00240A  0012               	return		;funcret
  8192   00240C                     __end_ofi2_putch:
  8193                           	callstack 0
  8194                           
  8195 ;; *************** function i2_abs *****************
  8196 ;; Defined at:
  8197 ;;		line 1 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;  a               2   18[COMRAM] int 
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;		None
  8202 ;; Return value:  Size  Location     Type
  8203 ;;                  2   18[COMRAM] int 
  8204 ;; Registers used:
  8205 ;;		wreg, status,2, status,0
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8211 ;;      Params:         2       0       0       0       0       0       0
  8212 ;;      Locals:         0       0       0       0       0       0       0
  8213 ;;      Temps:          2       0       0       0       0       0       0
  8214 ;;      Totals:         4       0       0       0       0       0       0
  8215 ;;Total ram usage:        4 bytes
  8216 ;; Hardware stack levels used: 1
  8217 ;; This function calls:
  8218 ;;		Nothing
  8219 ;; This function is called by:
  8220 ;;		i2_dtoa
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           	psect	text46
  8225   002280                     __ptext46:
  8226                           	callstack 0
  8227   002280                     i2_abs:
  8228                           	callstack 13
  8229   002280  BE14               	btfsc	(i2abs@a+1)^0,7,c
  8230   002282  EF4D  F011         	goto	i2u216_40
  8231   002286  5014               	movf	(i2abs@a+1)^0,w,c
  8232   002288  E106               	bnz	i2u216_41
  8233   00228A  0413               	decf	i2abs@a^0,w,c
  8234   00228C  B0D8               	btfsc	status,0,c
  8235   00228E  EF4B  F011         	goto	i2u216_41
  8236   002292  EF4D  F011         	goto	i2u216_40
  8237   002296                     i2u216_41:
  8238   002296  EF5B  F011         	goto	i2l1030
  8239   00229A                     i2u216_40:
  8240   00229A  C013  F015         	movff	i2abs@a,??i2_abs
  8241   00229E  C014  F016         	movff	i2abs@a+1,??i2_abs+1
  8242   0022A2  1E15               	comf	??i2_abs^0,f,c
  8243   0022A4  1E16               	comf	(??i2_abs+1)^0,f,c
  8244   0022A6  4A15               	infsnz	??i2_abs^0,f,c
  8245   0022A8  2A16               	incf	(??i2_abs+1)^0,f,c
  8246   0022AA  C015  F013         	movff	??i2_abs,?i2_abs
  8247   0022AE  C016  F014         	movff	??i2_abs+1,?i2_abs+1
  8248   0022B2  EF5F  F011         	goto	i2l1033
  8249   0022B6                     i2l1030:
  8250   0022B6  C013  F013         	movff	i2abs@a,?i2_abs
  8251   0022BA  C014  F014         	movff	i2abs@a+1,?i2_abs+1
  8252   0022BE                     i2l1033:
  8253   0022BE  0012               	return		;funcret
  8254   0022C0                     __end_ofi2_abs:
  8255                           	callstack 0
  8256                           
  8257 ;; *************** function i2___aomod *****************
  8258 ;; Defined at:
  8259 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;  dividend        8    0[COMRAM] long long 
  8262 ;;  divisor         8    8[COMRAM] long long 
  8263 ;; Auto vars:     Size  Location     Type
  8264 ;;  sign            1   17[COMRAM] unsigned char 
  8265 ;;  counter         1   16[COMRAM] unsigned char 
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  8    0[COMRAM] long long 
  8268 ;; Registers used:
  8269 ;;		wreg, status,2, status,0
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8275 ;;      Params:        16       0       0       0       0       0       0
  8276 ;;      Locals:         2       0       0       0       0       0       0
  8277 ;;      Temps:          0       0       0       0       0       0       0
  8278 ;;      Totals:        18       0       0       0       0       0       0
  8279 ;;Total ram usage:       18 bytes
  8280 ;; Hardware stack levels used: 1
  8281 ;; This function calls:
  8282 ;;		Nothing
  8283 ;; This function is called by:
  8284 ;;		i2_dtoa
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           	psect	text47
  8289   001020                     __ptext47:
  8290                           	callstack 0
  8291   001020                     i2___aomod:
  8292                           	callstack 13
  8293   001020  0E00               	movlw	0
  8294   001022  6E12               	movwf	i2___aomod@sign^0,c
  8295   001024  BE08               	btfsc	(i2___aomod@dividend+7)^0,7,c
  8296   001026  EF19  F008         	goto	i2u208_40
  8297   00102A  EF17  F008         	goto	i2u208_41
  8298   00102E                     i2u208_41:
  8299   00102E  EF2B  F008         	goto	i2l2466
  8300   001032                     i2u208_40:
  8301   001032  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  8302   001034  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  8303   001036  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  8304   001038  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  8305   00103A  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  8306   00103C  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  8307   00103E  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  8308   001040  6C01               	negf	i2___aomod@dividend^0,c
  8309   001042  0E00               	movlw	0
  8310   001044  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  8311   001046  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  8312   001048  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  8313   00104A  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  8314   00104C  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  8315   00104E  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  8316   001050  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  8317   001052  0E01               	movlw	1
  8318   001054  6E12               	movwf	i2___aomod@sign^0,c
  8319   001056                     i2l2466:
  8320   001056  BE10               	btfsc	(i2___aomod@divisor+7)^0,7,c
  8321   001058  EF32  F008         	goto	i2u209_40
  8322   00105C  EF30  F008         	goto	i2u209_41
  8323   001060                     i2u209_41:
  8324   001060  EF42  F008         	goto	i2l2470
  8325   001064                     i2u209_40:
  8326   001064  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
  8327   001066  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
  8328   001068  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
  8329   00106A  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
  8330   00106C  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
  8331   00106E  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
  8332   001070  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
  8333   001072  6C09               	negf	i2___aomod@divisor^0,c
  8334   001074  0E00               	movlw	0
  8335   001076  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
  8336   001078  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
  8337   00107A  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
  8338   00107C  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
  8339   00107E  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
  8340   001080  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
  8341   001082  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
  8342   001084                     i2l2470:
  8343   001084  5009               	movf	i2___aomod@divisor^0,w,c
  8344   001086  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
  8345   001088  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
  8346   00108A  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
  8347   00108C  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
  8348   00108E  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
  8349   001090  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
  8350   001092  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
  8351   001094  B4D8               	btfsc	status,2,c
  8352   001096  EF4F  F008         	goto	i2u210_41
  8353   00109A  EF51  F008         	goto	i2u210_40
  8354   00109E                     i2u210_41:
  8355   00109E  EF99  F008         	goto	i2l2486
  8356   0010A2                     i2u210_40:
  8357   0010A2  0E01               	movlw	1
  8358   0010A4  6E11               	movwf	i2___aomod@counter^0,c
  8359   0010A6  EF5F  F008         	goto	i2l2476
  8360   0010AA                     i2l2474:
  8361   0010AA  90D8               	bcf	status,0,c
  8362   0010AC  3609               	rlcf	i2___aomod@divisor^0,f,c
  8363   0010AE  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
  8364   0010B0  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
  8365   0010B2  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
  8366   0010B4  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
  8367   0010B6  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
  8368   0010B8  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
  8369   0010BA  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
  8370   0010BC  2A11               	incf	i2___aomod@counter^0,f,c
  8371   0010BE                     i2l2476:
  8372   0010BE  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
  8373   0010C0  EF64  F008         	goto	i2u211_41
  8374   0010C4  EF66  F008         	goto	i2u211_40
  8375   0010C8                     i2u211_41:
  8376   0010C8  EF55  F008         	goto	i2l2474
  8377   0010CC                     i2u211_40:
  8378   0010CC                     i2l2478:
  8379   0010CC  5009               	movf	i2___aomod@divisor^0,w,c
  8380   0010CE  5C01               	subwf	i2___aomod@dividend^0,w,c
  8381   0010D0  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  8382   0010D2  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
  8383   0010D4  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  8384   0010D6  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
  8385   0010D8  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  8386   0010DA  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
  8387   0010DC  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  8388   0010DE  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
  8389   0010E0  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  8390   0010E2  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
  8391   0010E4  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  8392   0010E6  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
  8393   0010E8  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  8394   0010EA  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
  8395   0010EC  A0D8               	btfss	status,0,c
  8396   0010EE  EF7B  F008         	goto	i2u212_41
  8397   0010F2  EF7D  F008         	goto	i2u212_40
  8398   0010F6                     i2u212_41:
  8399   0010F6  EF8D  F008         	goto	i2l2482
  8400   0010FA                     i2u212_40:
  8401   0010FA  5009               	movf	i2___aomod@divisor^0,w,c
  8402   0010FC  5E01               	subwf	i2___aomod@dividend^0,f,c
  8403   0010FE  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  8404   001100  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
  8405   001102  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  8406   001104  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
  8407   001106  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  8408   001108  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
  8409   00110A  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  8410   00110C  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
  8411   00110E  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  8412   001110  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
  8413   001112  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  8414   001114  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
  8415   001116  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  8416   001118  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
  8417   00111A                     i2l2482:
  8418   00111A  90D8               	bcf	status,0,c
  8419   00111C  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
  8420   00111E  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
  8421   001120  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
  8422   001122  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
  8423   001124  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
  8424   001126  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
  8425   001128  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
  8426   00112A  3209               	rrcf	i2___aomod@divisor^0,f,c
  8427   00112C  2E11               	decfsz	i2___aomod@counter^0,f,c
  8428   00112E  EF66  F008         	goto	i2l2478
  8429   001132                     i2l2486:
  8430   001132  5012               	movf	i2___aomod@sign^0,w,c
  8431   001134  B4D8               	btfsc	status,2,c
  8432   001136  EF9F  F008         	goto	i2u213_41
  8433   00113A  EFA1  F008         	goto	i2u213_40
  8434   00113E                     i2u213_41:
  8435   00113E  EFB1  F008         	goto	i2l2490
  8436   001142                     i2u213_40:
  8437   001142  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  8438   001144  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  8439   001146  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  8440   001148  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  8441   00114A  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  8442   00114C  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  8443   00114E  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  8444   001150  6C01               	negf	i2___aomod@dividend^0,c
  8445   001152  0E00               	movlw	0
  8446   001154  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  8447   001156  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  8448   001158  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  8449   00115A  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  8450   00115C  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  8451   00115E  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  8452   001160  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  8453   001162                     i2l2490:
  8454   001162  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
  8455   001166  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
  8456   00116A  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
  8457   00116E  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
  8458   001172  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
  8459   001176  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
  8460   00117A  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
  8461   00117E  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
  8462   001182  0012               	return		;funcret
  8463   001184                     __end_ofi2___aomod:
  8464                           	callstack 0
  8465                           
  8466 ;; *************** function i2___aodiv *****************
  8467 ;; Defined at:
  8468 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  8469 ;; Parameters:    Size  Location     Type
  8470 ;;  dividend        8    0[COMRAM] long long 
  8471 ;;  divisor         8    8[COMRAM] long long 
  8472 ;; Auto vars:     Size  Location     Type
  8473 ;;  quotient        8   18[COMRAM] long long 
  8474 ;;  sign            1   17[COMRAM] unsigned char 
  8475 ;;  counter         1   16[COMRAM] unsigned char 
  8476 ;; Return value:  Size  Location     Type
  8477 ;;                  8    0[COMRAM] long long 
  8478 ;; Registers used:
  8479 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8480 ;; Tracked objects:
  8481 ;;		On entry : 0/0
  8482 ;;		On exit  : 0/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8485 ;;      Params:        16       0       0       0       0       0       0
  8486 ;;      Locals:        10       0       0       0       0       0       0
  8487 ;;      Temps:          0       0       0       0       0       0       0
  8488 ;;      Totals:        26       0       0       0       0       0       0
  8489 ;;Total ram usage:       26 bytes
  8490 ;; Hardware stack levels used: 1
  8491 ;; This function calls:
  8492 ;;		Nothing
  8493 ;; This function is called by:
  8494 ;;		i2_dtoa
  8495 ;; This function uses a non-reentrant model
  8496 ;;
  8497                           
  8498                           	psect	text48
  8499   000D32                     __ptext48:
  8500                           	callstack 0
  8501   000D32                     i2___aodiv:
  8502                           	callstack 13
  8503   000D32  0E00               	movlw	0
  8504   000D34  6E12               	movwf	i2___aodiv@sign^0,c
  8505   000D36  BE10               	btfsc	(i2___aodiv@divisor+7)^0,7,c
  8506   000D38  EFA2  F006         	goto	i2u201_40
  8507   000D3C  EFA0  F006         	goto	i2u201_41
  8508   000D40                     i2u201_41:
  8509   000D40  EFB4  F006         	goto	i2l2422
  8510   000D44                     i2u201_40:
  8511   000D44  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
  8512   000D46  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
  8513   000D48  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
  8514   000D4A  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
  8515   000D4C  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
  8516   000D4E  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
  8517   000D50  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
  8518   000D52  6C09               	negf	i2___aodiv@divisor^0,c
  8519   000D54  0E00               	movlw	0
  8520   000D56  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
  8521   000D58  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
  8522   000D5A  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
  8523   000D5C  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
  8524   000D5E  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
  8525   000D60  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
  8526   000D62  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
  8527   000D64  0E01               	movlw	1
  8528   000D66  6E12               	movwf	i2___aodiv@sign^0,c
  8529   000D68                     i2l2422:
  8530   000D68  BE08               	btfsc	(i2___aodiv@dividend+7)^0,7,c
  8531   000D6A  EFBB  F006         	goto	i2u202_40
  8532   000D6E  EFB9  F006         	goto	i2u202_41
  8533   000D72                     i2u202_41:
  8534   000D72  EFCD  F006         	goto	i2l2428
  8535   000D76                     i2u202_40:
  8536   000D76  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
  8537   000D78  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
  8538   000D7A  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
  8539   000D7C  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
  8540   000D7E  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
  8541   000D80  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
  8542   000D82  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
  8543   000D84  6C01               	negf	i2___aodiv@dividend^0,c
  8544   000D86  0E00               	movlw	0
  8545   000D88  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
  8546   000D8A  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
  8547   000D8C  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
  8548   000D8E  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
  8549   000D90  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
  8550   000D92  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
  8551   000D94  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
  8552   000D96  0E01               	movlw	1
  8553   000D98  1A12               	xorwf	i2___aodiv@sign^0,f,c
  8554   000D9A                     i2l2428:
  8555   000D9A  EE20  F013         	lfsr	2,i2___aodiv@quotient
  8556   000D9E  0E07               	movlw	7
  8557   000DA0                     i2u203_41:
  8558   000DA0  6ADE               	clrf	postinc2,c
  8559   000DA2  06E8               	decf	wreg,f,c
  8560   000DA4  E2FD               	bc	i2u203_41
  8561   000DA6  5009               	movf	i2___aodiv@divisor^0,w,c
  8562   000DA8  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
  8563   000DAA  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
  8564   000DAC  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
  8565   000DAE  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
  8566   000DB0  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
  8567   000DB2  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
  8568   000DB4  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
  8569   000DB6  B4D8               	btfsc	status,2,c
  8570   000DB8  EFE0  F006         	goto	i2u204_41
  8571   000DBC  EFE2  F006         	goto	i2u204_40
  8572   000DC0                     i2u204_41:
  8573   000DC0  EF34  F007         	goto	i2l2450
  8574   000DC4                     i2u204_40:
  8575   000DC4  0E01               	movlw	1
  8576   000DC6  6E11               	movwf	i2___aodiv@counter^0,c
  8577   000DC8  EFF0  F006         	goto	i2l2436
  8578   000DCC                     i2l2434:
  8579   000DCC  90D8               	bcf	status,0,c
  8580   000DCE  3609               	rlcf	i2___aodiv@divisor^0,f,c
  8581   000DD0  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
  8582   000DD2  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
  8583   000DD4  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
  8584   000DD6  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
  8585   000DD8  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
  8586   000DDA  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
  8587   000DDC  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
  8588   000DDE  2A11               	incf	i2___aodiv@counter^0,f,c
  8589   000DE0                     i2l2436:
  8590   000DE0  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
  8591   000DE2  EFF5  F006         	goto	i2u205_41
  8592   000DE6  EFF7  F006         	goto	i2u205_40
  8593   000DEA                     i2u205_41:
  8594   000DEA  EFE6  F006         	goto	i2l2434
  8595   000DEE                     i2u205_40:
  8596   000DEE                     i2l2438:
  8597   000DEE  90D8               	bcf	status,0,c
  8598   000DF0  3613               	rlcf	i2___aodiv@quotient^0,f,c
  8599   000DF2  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
  8600   000DF4  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
  8601   000DF6  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
  8602   000DF8  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
  8603   000DFA  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
  8604   000DFC  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
  8605   000DFE  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
  8606   000E00  5009               	movf	i2___aodiv@divisor^0,w,c
  8607   000E02  5C01               	subwf	i2___aodiv@dividend^0,w,c
  8608   000E04  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  8609   000E06  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
  8610   000E08  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  8611   000E0A  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
  8612   000E0C  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  8613   000E0E  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
  8614   000E10  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  8615   000E12  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
  8616   000E14  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  8617   000E16  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
  8618   000E18  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  8619   000E1A  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
  8620   000E1C  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  8621   000E1E  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
  8622   000E20  A0D8               	btfss	status,0,c
  8623   000E22  EF15  F007         	goto	i2u206_41
  8624   000E26  EF17  F007         	goto	i2u206_40
  8625   000E2A                     i2u206_41:
  8626   000E2A  EF28  F007         	goto	i2l2446
  8627   000E2E                     i2u206_40:
  8628   000E2E  5009               	movf	i2___aodiv@divisor^0,w,c
  8629   000E30  5E01               	subwf	i2___aodiv@dividend^0,f,c
  8630   000E32  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  8631   000E34  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
  8632   000E36  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  8633   000E38  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
  8634   000E3A  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  8635   000E3C  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
  8636   000E3E  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  8637   000E40  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
  8638   000E42  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  8639   000E44  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
  8640   000E46  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  8641   000E48  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
  8642   000E4A  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  8643   000E4C  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
  8644   000E4E  8013               	bsf	i2___aodiv@quotient^0,0,c
  8645   000E50                     i2l2446:
  8646   000E50  90D8               	bcf	status,0,c
  8647   000E52  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
  8648   000E54  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
  8649   000E56  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
  8650   000E58  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
  8651   000E5A  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
  8652   000E5C  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
  8653   000E5E  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
  8654   000E60  3209               	rrcf	i2___aodiv@divisor^0,f,c
  8655   000E62  2E11               	decfsz	i2___aodiv@counter^0,f,c
  8656   000E64  EFF7  F006         	goto	i2l2438
  8657   000E68                     i2l2450:
  8658   000E68  5012               	movf	i2___aodiv@sign^0,w,c
  8659   000E6A  B4D8               	btfsc	status,2,c
  8660   000E6C  EF3A  F007         	goto	i2u207_41
  8661   000E70  EF3C  F007         	goto	i2u207_40
  8662   000E74                     i2u207_41:
  8663   000E74  EF4C  F007         	goto	i2l2454
  8664   000E78                     i2u207_40:
  8665   000E78  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
  8666   000E7A  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
  8667   000E7C  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
  8668   000E7E  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
  8669   000E80  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
  8670   000E82  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
  8671   000E84  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
  8672   000E86  6C13               	negf	i2___aodiv@quotient^0,c
  8673   000E88  0E00               	movlw	0
  8674   000E8A  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
  8675   000E8C  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
  8676   000E8E  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
  8677   000E90  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
  8678   000E92  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
  8679   000E94  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
  8680   000E96  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
  8681   000E98                     i2l2454:
  8682   000E98  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
  8683   000E9C  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
  8684   000EA0  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
  8685   000EA4  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
  8686   000EA8  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
  8687   000EAC  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
  8688   000EB0  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
  8689   000EB4  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
  8690   000EB8  0012               	return		;funcret
  8691   000EBA                     __end_ofi2___aodiv:
  8692                           	callstack 0
  8693                           
  8694 ;; *************** function i2___awdiv *****************
  8695 ;; Defined at:
  8696 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  8697 ;; Parameters:    Size  Location     Type
  8698 ;;  dividend        2    0[COMRAM] int 
  8699 ;;  divisor         2    2[COMRAM] int 
  8700 ;; Auto vars:     Size  Location     Type
  8701 ;;  quotient        2    6[COMRAM] int 
  8702 ;;  sign            1    5[COMRAM] unsigned char 
  8703 ;;  counter         1    4[COMRAM] unsigned char 
  8704 ;; Return value:  Size  Location     Type
  8705 ;;                  2    0[COMRAM] int 
  8706 ;; Registers used:
  8707 ;;		wreg, status,2, status,0
  8708 ;; Tracked objects:
  8709 ;;		On entry : 0/0
  8710 ;;		On exit  : 0/0
  8711 ;;		Unchanged: 0/0
  8712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8713 ;;      Params:         4       0       0       0       0       0       0
  8714 ;;      Locals:         4       0       0       0       0       0       0
  8715 ;;      Temps:          0       0       0       0       0       0       0
  8716 ;;      Totals:         8       0       0       0       0       0       0
  8717 ;;Total ram usage:        8 bytes
  8718 ;; Hardware stack levels used: 1
  8719 ;; This function calls:
  8720 ;;		Nothing
  8721 ;; This function is called by:
  8722 ;;		_ISR
  8723 ;; This function uses a non-reentrant model
  8724 ;;
  8725                           
  8726                           	psect	text49
  8727   001ADA                     __ptext49:
  8728                           	callstack 0
  8729   001ADA                     i2___awdiv:
  8730                           	callstack 17
  8731   001ADA  0E00               	movlw	0
  8732   001ADC  6E06               	movwf	i2___awdiv@sign^0,c
  8733   001ADE  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
  8734   001AE0  EF76  F00D         	goto	i2u310_40
  8735   001AE4  EF74  F00D         	goto	i2u310_41
  8736   001AE8                     i2u310_41:
  8737   001AE8  EF7C  F00D         	goto	i2l3156
  8738   001AEC                     i2u310_40:
  8739   001AEC  6C03               	negf	i2___awdiv@divisor^0,c
  8740   001AEE  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
  8741   001AF0  B0D8               	btfsc	status,0,c
  8742   001AF2  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
  8743   001AF4  0E01               	movlw	1
  8744   001AF6  6E06               	movwf	i2___awdiv@sign^0,c
  8745   001AF8                     i2l3156:
  8746   001AF8  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
  8747   001AFA  EF83  F00D         	goto	i2u311_40
  8748   001AFE  EF81  F00D         	goto	i2u311_41
  8749   001B02                     i2u311_41:
  8750   001B02  EF89  F00D         	goto	i2l3162
  8751   001B06                     i2u311_40:
  8752   001B06  6C01               	negf	i2___awdiv@dividend^0,c
  8753   001B08  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
  8754   001B0A  B0D8               	btfsc	status,0,c
  8755   001B0C  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
  8756   001B0E  0E01               	movlw	1
  8757   001B10  1A06               	xorwf	i2___awdiv@sign^0,f,c
  8758   001B12                     i2l3162:
  8759   001B12  0E00               	movlw	0
  8760   001B14  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
  8761   001B16  0E00               	movlw	0
  8762   001B18  6E07               	movwf	i2___awdiv@quotient^0,c
  8763   001B1A  5003               	movf	i2___awdiv@divisor^0,w,c
  8764   001B1C  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  8765   001B1E  B4D8               	btfsc	status,2,c
  8766   001B20  EF94  F00D         	goto	i2u312_41
  8767   001B24  EF96  F00D         	goto	i2u312_40
  8768   001B28                     i2u312_41:
  8769   001B28  EFBE  F00D         	goto	i2l3184
  8770   001B2C                     i2u312_40:
  8771   001B2C  0E01               	movlw	1
  8772   001B2E  6E05               	movwf	i2___awdiv@counter^0,c
  8773   001B30  EF9E  F00D         	goto	i2l3170
  8774   001B34                     i2l3168:
  8775   001B34  90D8               	bcf	status,0,c
  8776   001B36  3603               	rlcf	i2___awdiv@divisor^0,f,c
  8777   001B38  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  8778   001B3A  2A05               	incf	i2___awdiv@counter^0,f,c
  8779   001B3C                     i2l3170:
  8780   001B3C  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  8781   001B3E  EFA3  F00D         	goto	i2u313_41
  8782   001B42  EFA5  F00D         	goto	i2u313_40
  8783   001B46                     i2u313_41:
  8784   001B46  EF9A  F00D         	goto	i2l3168
  8785   001B4A                     i2u313_40:
  8786   001B4A                     i2l3172:
  8787   001B4A  90D8               	bcf	status,0,c
  8788   001B4C  3607               	rlcf	i2___awdiv@quotient^0,f,c
  8789   001B4E  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  8790   001B50  5003               	movf	i2___awdiv@divisor^0,w,c
  8791   001B52  5C01               	subwf	i2___awdiv@dividend^0,w,c
  8792   001B54  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  8793   001B56  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  8794   001B58  A0D8               	btfss	status,0,c
  8795   001B5A  EFB1  F00D         	goto	i2u314_41
  8796   001B5E  EFB3  F00D         	goto	i2u314_40
  8797   001B62                     i2u314_41:
  8798   001B62  EFB8  F00D         	goto	i2l3180
  8799   001B66                     i2u314_40:
  8800   001B66  5003               	movf	i2___awdiv@divisor^0,w,c
  8801   001B68  5E01               	subwf	i2___awdiv@dividend^0,f,c
  8802   001B6A  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  8803   001B6C  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  8804   001B6E  8007               	bsf	i2___awdiv@quotient^0,0,c
  8805   001B70                     i2l3180:
  8806   001B70  90D8               	bcf	status,0,c
  8807   001B72  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  8808   001B74  3203               	rrcf	i2___awdiv@divisor^0,f,c
  8809   001B76  2E05               	decfsz	i2___awdiv@counter^0,f,c
  8810   001B78  EFA5  F00D         	goto	i2l3172
  8811   001B7C                     i2l3184:
  8812   001B7C  5006               	movf	i2___awdiv@sign^0,w,c
  8813   001B7E  B4D8               	btfsc	status,2,c
  8814   001B80  EFC4  F00D         	goto	i2u315_41
  8815   001B84  EFC6  F00D         	goto	i2u315_40
  8816   001B88                     i2u315_41:
  8817   001B88  EFCA  F00D         	goto	i2l3188
  8818   001B8C                     i2u315_40:
  8819   001B8C  6C07               	negf	i2___awdiv@quotient^0,c
  8820   001B8E  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  8821   001B90  B0D8               	btfsc	status,0,c
  8822   001B92  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  8823   001B94                     i2l3188:
  8824   001B94  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  8825   001B98  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  8826   001B9C  0012               	return		;funcret
  8827   001B9E                     __end_ofi2___awdiv:
  8828                           	callstack 0
  8829                           
  8830 ;; *************** function i2_UART_Write_Text *****************
  8831 ;; Defined at:
  8832 ;;		line 47 in file "setting_hardaware/uart.c"
  8833 ;; Parameters:    Size  Location     Type
  8834 ;;  text            2    1[COMRAM] PTR unsigned char 
  8835 ;;		 -> STR_24(42), STR_23(29), STR_22(34), STR_21(14), 
  8836 ;;		 -> STR_20(19), STR_19(17), STR_18(17), STR_17(17), 
  8837 ;;		 -> STR_16(3), count_score@txt_830(30), count_score@txt_827(30), count_score@txt_821(30), 
  8838 ;;		 -> count_score@txt_819(30), count_score@txt_817(30), count_score@txt_815(30), count_score@txt_813(30), 
  8839 ;;		 -> count_score@txt(30), STR_7(32), STR_6(57), STR_5(41), 
  8840 ;;		 -> STR_4(33), STR_3(48), STR_2(31), ISR@s(50), 
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;  i               2    5[COMRAM] int 
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  1    wreg      void 
  8845 ;; Registers used:
  8846 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8852 ;;      Params:         2       0       0       0       0       0       0
  8853 ;;      Locals:         2       0       0       0       0       0       0
  8854 ;;      Temps:          2       0       0       0       0       0       0
  8855 ;;      Totals:         6       0       0       0       0       0       0
  8856 ;;Total ram usage:        6 bytes
  8857 ;; Hardware stack levels used: 1
  8858 ;; Hardware stack levels required when called: 1
  8859 ;; This function calls:
  8860 ;;		i2_UART_Write
  8861 ;; This function is called by:
  8862 ;;		_ISR
  8863 ;; This function uses a non-reentrant model
  8864 ;;
  8865                           
  8866                           	psect	text50
  8867   001CA0                     __ptext50:
  8868                           	callstack 0
  8869   001CA0                     i2_UART_Write_Text:
  8870                           	callstack 16
  8871   001CA0                     
  8872                           ;setting_hardaware/uart.c: 48:     for(int i=0;text[i]!='\0';i++){
  8873   001CA0  0E00               	movlw	0
  8874   001CA2  6E07               	movwf	(i2UART_Write_Text@i+1)^0,c
  8875   001CA4  0E00               	movlw	0
  8876   001CA6  6E06               	movwf	i2UART_Write_Text@i^0,c
  8877   001CA8  EF70  F00E         	goto	i2l3146
  8878   001CAC                     i2l3142:
  8879                           
  8880                           ;setting_hardaware/uart.c: 49:         UART_Write(text[i]);
  8881   001CAC  5006               	movf	i2UART_Write_Text@i^0,w,c
  8882   001CAE  2402               	addwf	i2UART_Write_Text@text^0,w,c
  8883   001CB0  6E04               	movwf	??i2_UART_Write_Text^0,c
  8884   001CB2  5007               	movf	(i2UART_Write_Text@i+1)^0,w,c
  8885   001CB4  2003               	addwfc	(i2UART_Write_Text@text+1)^0,w,c
  8886   001CB6  6E05               	movwf	(??i2_UART_Write_Text+1)^0,c
  8887   001CB8  C004  FFF6         	movff	??i2_UART_Write_Text,tblptrl
  8888   001CBC  C005  FFF7         	movff	??i2_UART_Write_Text+1,tblptrh
  8889   001CC0  6AF8               	clrf	tblptru,c
  8890   001CC2  0E05               	movlw	(high __ramtop+-1)
  8891   001CC4  64F7               	cpfsgt	tblptrh,c
  8892   001CC6  D003               	bra	i2u307_47
  8893   001CC8  0008               	tblrd		*
  8894   001CCA  50F5               	movf	tablat,w,c
  8895   001CCC  D005               	bra	i2u307_40
  8896   001CCE                     i2u307_47:
  8897   001CCE  CFF6 FFE1          	movff	tblptrl,fsr1l
  8898   001CD2  CFF7 FFE2          	movff	tblptrh,fsr1h
  8899   001CD6  50E7               	movf	indf1,w,c
  8900   001CD8                     i2u307_40:
  8901   001CD8  ECDB  F011         	call	i2_UART_Write
  8902   001CDC                     
  8903                           ;setting_hardaware/uart.c: 50:     }
  8904   001CDC  4A06               	infsnz	i2UART_Write_Text@i^0,f,c
  8905   001CDE  2A07               	incf	(i2UART_Write_Text@i+1)^0,f,c
  8906   001CE0                     i2l3146:
  8907   001CE0  5006               	movf	i2UART_Write_Text@i^0,w,c
  8908   001CE2  2402               	addwf	i2UART_Write_Text@text^0,w,c
  8909   001CE4  6E04               	movwf	??i2_UART_Write_Text^0,c
  8910   001CE6  5007               	movf	(i2UART_Write_Text@i+1)^0,w,c
  8911   001CE8  2003               	addwfc	(i2UART_Write_Text@text+1)^0,w,c
  8912   001CEA  6E05               	movwf	(??i2_UART_Write_Text+1)^0,c
  8913   001CEC  C004  FFF6         	movff	??i2_UART_Write_Text,tblptrl
  8914   001CF0  C005  FFF7         	movff	??i2_UART_Write_Text+1,tblptrh
  8915   001CF4  6AF8               	clrf	tblptru,c
  8916   001CF6  0E05               	movlw	(high __ramtop+-1)
  8917   001CF8  64F7               	cpfsgt	tblptrh,c
  8918   001CFA  D003               	bra	i2u308_47
  8919   001CFC  0008               	tblrd		*
  8920   001CFE  50F5               	movf	tablat,w,c
  8921   001D00  D005               	bra	i2u308_40
  8922   001D02                     i2u308_47:
  8923   001D02  CFF6 FFE1          	movff	tblptrl,fsr1l
  8924   001D06  CFF7 FFE2          	movff	tblptrh,fsr1h
  8925   001D0A  50E7               	movf	indf1,w,c
  8926   001D0C                     i2u308_40:
  8927   001D0C  0900               	iorlw	0
  8928   001D0E  A4D8               	btfss	status,2,c
  8929   001D10  EF8C  F00E         	goto	i2u309_41
  8930   001D14  EF8E  F00E         	goto	i2u309_40
  8931   001D18                     i2u309_41:
  8932   001D18  EF56  F00E         	goto	i2l3142
  8933   001D1C                     i2u309_40:
  8934   001D1C  0012               	return		;funcret
  8935   001D1E                     __end_ofi2_UART_Write_Text:
  8936                           	callstack 0
  8937                           
  8938 ;; *************** function i2_UART_Write *****************
  8939 ;; Defined at:
  8940 ;;		line 40 in file "setting_hardaware/uart.c"
  8941 ;; Parameters:    Size  Location     Type
  8942 ;;  data            1    wreg     unsigned char 
  8943 ;; Auto vars:     Size  Location     Type
  8944 ;;  data            1    0[COMRAM] unsigned char 
  8945 ;; Return value:  Size  Location     Type
  8946 ;;                  1    wreg      void 
  8947 ;; Registers used:
  8948 ;;		wreg
  8949 ;; Tracked objects:
  8950 ;;		On entry : 0/0
  8951 ;;		On exit  : 0/0
  8952 ;;		Unchanged: 0/0
  8953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8954 ;;      Params:         0       0       0       0       0       0       0
  8955 ;;      Locals:         1       0       0       0       0       0       0
  8956 ;;      Temps:          0       0       0       0       0       0       0
  8957 ;;      Totals:         1       0       0       0       0       0       0
  8958 ;;Total ram usage:        1 bytes
  8959 ;; Hardware stack levels used: 1
  8960 ;; This function calls:
  8961 ;;		Nothing
  8962 ;; This function is called by:
  8963 ;;		i2_UART_Write_Text
  8964 ;; This function uses a non-reentrant model
  8965 ;;
  8966                           
  8967                           	psect	text51
  8968   0023B6                     __ptext51:
  8969                           	callstack 0
  8970   0023B6                     i2_UART_Write:
  8971                           	callstack 16
  8972                           
  8973                           ;incstack = 0
  8974                           ;i2UART_Write@data stored from wreg
  8975   0023B6  6E01               	movwf	i2UART_Write@data^0,c
  8976   0023B8                     i2l258:
  8977   0023B8  A2AC               	btfss	172,1,c	;volatile
  8978   0023BA  EFE1  F011         	goto	i2u256_41
  8979   0023BE  EFE3  F011         	goto	i2u256_40
  8980   0023C2                     i2u256_41:
  8981   0023C2  EFDC  F011         	goto	i2l258
  8982   0023C6                     i2u256_40:
  8983   0023C6                     
  8984                           ;setting_hardaware/uart.c: 43:     TXREG = data;
  8985   0023C6  C001  FFAD         	movff	i2UART_Write@data,4013	;volatile
  8986   0023CA  0012               	return		;funcret
  8987   0023CC                     __end_ofi2_UART_Write:
  8988                           	callstack 0
  8989                           
  8990                           	psect	rparam
  8991   000000                     
  8992                           	psect	temp
  8993   000074                     btemp:
  8994                           	callstack 0
  8995   000074                     	ds	1
  8996   000000                     int$flags	set	btemp
  8997   000000                     wtemp8	set	btemp+1
  8998   000000                     ttemp5	set	btemp+1
  8999   000000                     ttemp6	set	btemp+4
  9000   000000                     ttemp7	set	btemp+8
  9001                           
  9002                           	psect	idloc
  9003                           
  9004                           ;Config register IDLOC0 @ 0x200000
  9005                           ;	unspecified, using default values
  9006   200000                     	org	2097152
  9007   200000  FF                 	db	255
  9008                           
  9009                           ;Config register IDLOC1 @ 0x200001
  9010                           ;	unspecified, using default values
  9011   200001                     	org	2097153
  9012   200001  FF                 	db	255
  9013                           
  9014                           ;Config register IDLOC2 @ 0x200002
  9015                           ;	unspecified, using default values
  9016   200002                     	org	2097154
  9017   200002  FF                 	db	255
  9018                           
  9019                           ;Config register IDLOC3 @ 0x200003
  9020                           ;	unspecified, using default values
  9021   200003                     	org	2097155
  9022   200003  FF                 	db	255
  9023                           
  9024                           ;Config register IDLOC4 @ 0x200004
  9025                           ;	unspecified, using default values
  9026   200004                     	org	2097156
  9027   200004  FF                 	db	255
  9028                           
  9029                           ;Config register IDLOC5 @ 0x200005
  9030                           ;	unspecified, using default values
  9031   200005                     	org	2097157
  9032   200005  FF                 	db	255
  9033                           
  9034                           ;Config register IDLOC6 @ 0x200006
  9035                           ;	unspecified, using default values
  9036   200006                     	org	2097158
  9037   200006  FF                 	db	255
  9038                           
  9039                           ;Config register IDLOC7 @ 0x200007
  9040                           ;	unspecified, using default values
  9041   200007                     	org	2097159
  9042   200007  FF                 	db	255
  9043                           
  9044                           	psect	config
  9045                           
  9046                           ; Padding undefined space
  9047   300000                     	org	3145728
  9048   300000  FF                 	db	255
  9049                           
  9050                           ;Config register CONFIG1H @ 0x300001
  9051                           ;	Oscillator Selection bits
  9052                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  9053                           ;	Fail-Safe Clock Monitor Enable bit
  9054                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9055                           ;	Internal/External Oscillator Switchover bit
  9056                           ;	IESO = ON, Oscillator Switchover mode enabled
  9057   300001                     	org	3145729
  9058   300001  88                 	db	136
  9059                           
  9060                           ;Config register CONFIG2L @ 0x300002
  9061                           ;	Power-up Timer Enable bit
  9062                           ;	PWRT = OFF, PWRT disabled
  9063                           ;	Brown-out Reset Enable bits
  9064                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  9065                           ;	Brown Out Reset Voltage bits
  9066                           ;	BORV = 3, Minimum setting
  9067   300002                     	org	3145730
  9068   300002  1F                 	db	31
  9069                           
  9070                           ;Config register CONFIG2H @ 0x300003
  9071                           ;	Watchdog Timer Enable bit
  9072                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9073                           ;	Watchdog Timer Postscale Select bits
  9074                           ;	WDTPS = 1, 1:1
  9075   300003                     	org	3145731
  9076   300003  00                 	db	0
  9077                           
  9078                           ; Padding undefined space
  9079   300004                     	org	3145732
  9080   300004  FF                 	db	255
  9081                           
  9082                           ;Config register CONFIG3H @ 0x300005
  9083                           ;	CCP2 MUX bit
  9084                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  9085                           ;	PORTB A/D Enable bit
  9086                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  9087                           ;	Low-Power Timer1 Oscillator Enable bit
  9088                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9089                           ;	MCLR Pin Enable bit
  9090                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9091   300005                     	org	3145733
  9092   300005  83                 	db	131
  9093                           
  9094                           ;Config register CONFIG4L @ 0x300006
  9095                           ;	Stack Full/Underflow Reset Enable bit
  9096                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9097                           ;	Single-Supply ICSP Enable bit
  9098                           ;	LVP = OFF, Single-Supply ICSP disabled
  9099                           ;	Extended Instruction Set Enable bit
  9100                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9101                           ;	Background Debugger Enable bit
  9102                           ;	DEBUG = 0x1, unprogrammed default
  9103   300006                     	org	3145734
  9104   300006  81                 	db	129
  9105                           
  9106                           ; Padding undefined space
  9107   300007                     	org	3145735
  9108   300007  FF                 	db	255
  9109                           
  9110                           ;Config register CONFIG5L @ 0x300008
  9111                           ;	Code Protection bit
  9112                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  9113                           ;	Code Protection bit
  9114                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  9115                           ;	Code Protection bit
  9116                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  9117                           ;	Code Protection bit
  9118                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  9119   300008                     	org	3145736
  9120   300008  0F                 	db	15
  9121                           
  9122                           ;Config register CONFIG5H @ 0x300009
  9123                           ;	Boot Block Code Protection bit
  9124                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  9125                           ;	Data EEPROM Code Protection bit
  9126                           ;	CPD = OFF, Data EEPROM not code-protected
  9127   300009                     	org	3145737
  9128   300009  C0                 	db	192
  9129                           
  9130                           ;Config register CONFIG6L @ 0x30000A
  9131                           ;	Write Protection bit
  9132                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  9133                           ;	Write Protection bit
  9134                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  9135                           ;	Write Protection bit
  9136                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  9137                           ;	Write Protection bit
  9138                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  9139   30000A                     	org	3145738
  9140   30000A  0F                 	db	15
  9141                           
  9142                           ;Config register CONFIG6H @ 0x30000B
  9143                           ;	Configuration Register Write Protection bit
  9144                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  9145                           ;	Boot Block Write Protection bit
  9146                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  9147                           ;	Data EEPROM Write Protection bit
  9148                           ;	WRTD = OFF, Data EEPROM not write-protected
  9149   30000B                     	org	3145739
  9150   30000B  E0                 	db	224
  9151                           
  9152                           ;Config register CONFIG7L @ 0x30000C
  9153                           ;	Table Read Protection bit
  9154                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  9155                           ;	Table Read Protection bit
  9156                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  9157                           ;	Table Read Protection bit
  9158                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  9159                           ;	Table Read Protection bit
  9160                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  9161   30000C                     	org	3145740
  9162   30000C  0F                 	db	15
  9163                           
  9164                           ;Config register CONFIG7H @ 0x30000D
  9165                           ;	Boot Block Table Read Protection bit
  9166                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  9167   30000D                     	org	3145741
  9168   30000D  40                 	db	64
  9169                           tosu	equ	0xFFF
  9170                           tosh	equ	0xFFE
  9171                           tosl	equ	0xFFD
  9172                           stkptr	equ	0xFFC
  9173                           pclatu	equ	0xFFB
  9174                           pclath	equ	0xFFA
  9175                           pcl	equ	0xFF9
  9176                           tblptru	equ	0xFF8
  9177                           tblptrh	equ	0xFF7
  9178                           tblptrl	equ	0xFF6
  9179                           tablat	equ	0xFF5
  9180                           prodh	equ	0xFF4
  9181                           prodl	equ	0xFF3
  9182                           indf0	equ	0xFEF
  9183                           postinc0	equ	0xFEE
  9184                           postdec0	equ	0xFED
  9185                           preinc0	equ	0xFEC
  9186                           plusw0	equ	0xFEB
  9187                           fsr0h	equ	0xFEA
  9188                           fsr0l	equ	0xFE9
  9189                           wreg	equ	0xFE8
  9190                           indf1	equ	0xFE7
  9191                           postinc1	equ	0xFE6
  9192                           postdec1	equ	0xFE5
  9193                           preinc1	equ	0xFE4
  9194                           plusw1	equ	0xFE3
  9195                           fsr1h	equ	0xFE2
  9196                           fsr1l	equ	0xFE1
  9197                           bsr	equ	0xFE0
  9198                           indf2	equ	0xFDF
  9199                           postinc2	equ	0xFDE
  9200                           postdec2	equ	0xFDD
  9201                           preinc2	equ	0xFDC
  9202                           plusw2	equ	0xFDB
  9203                           fsr2h	equ	0xFDA
  9204                           fsr2l	equ	0xFD9
  9205                           status	equ	0xFD8

Data Sizes:
    Strings     706
    Constant    0
    Data        20
    BSS         89
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    115     115
    BANK0           128     64      70
    BANK1           256    115     216
    BANK2           256    242     244
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    i2sprintf@f...source	PTR const unsigned char  size(2) Largest target is 0

    i2sprintf@f...buffer	PTR unsigned char  size(2) Largest target is 0

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> str(BANK1[20]), round@level_str(BANK1[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 20
		 -> str(BANK1[20]), round@level_str(BANK1[10]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 20
		 -> str(BANK1[20]), round@level_str(BANK1[10]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 20
		 -> str(BANK1[20]), round@level_str(BANK1[10]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(BANK1[20]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(BANK1[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_15(CODE[37]), STR_14(CODE[34]), STR_13(CODE[34]), STR_12(CODE[34]), 
		 -> STR_11(CODE[34]), STR_10(CODE[34]), STR_9(CODE[34]), STR_8(CODE[34]), 
		 -> STR_1(CODE[34]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 37
		 -> STR_15(CODE[37]), STR_14(CODE[34]), STR_13(CODE[34]), STR_12(CODE[34]), 
		 -> STR_11(CODE[34]), STR_10(CODE[34]), STR_9(CODE[34]), STR_8(CODE[34]), 
		 -> STR_1(CODE[34]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 37
		 -> STR_15(CODE[37]), STR_14(CODE[34]), STR_13(CODE[34]), STR_12(CODE[34]), 
		 -> STR_11(CODE[34]), STR_10(CODE[34]), STR_9(CODE[34]), STR_8(CODE[34]), 
		 -> STR_1(CODE[34]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S1958$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_15(CODE[37]), STR_14(CODE[34]), STR_13(CODE[34]), STR_12(CODE[34]), 
		 -> STR_11(CODE[34]), STR_10(CODE[34]), STR_9(CODE[34]), STR_8(CODE[34]), 
		 -> STR_1(CODE[34]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> count_score@txt_830(BANK2[30]), count_score@txt_827(BANK2[30]), count_score@txt_821(BANK2[30]), count_score@txt_819(BANK2[30]), 
		 -> count_score@txt_817(BANK2[30]), count_score@txt_815(BANK2[30]), count_score@txt_813(BANK2[30]), count_score@txt(BANK2[30]), 
		 -> ISR@s(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1905$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1905$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[42]), STR_23(CODE[29]), STR_22(CODE[34]), STR_21(CODE[14]), 
		 -> STR_20(CODE[19]), STR_19(CODE[17]), STR_18(CODE[17]), STR_17(CODE[17]), 
		 -> STR_16(CODE[3]), count_score@txt_830(BANK2[30]), count_score@txt_827(BANK2[30]), count_score@txt_821(BANK2[30]), 
		 -> count_score@txt_819(BANK2[30]), count_score@txt_817(BANK2[30]), count_score@txt_815(BANK2[30]), count_score@txt_813(BANK2[30]), 
		 -> count_score@txt(BANK2[30]), STR_7(CODE[32]), STR_6(CODE[57]), STR_5(CODE[41]), 
		 -> STR_4(CODE[33]), STR_3(CODE[48]), STR_2(CODE[31]), ISR@s(BANK0[50]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> str(BANK1[20]), round@level_str(BANK1[10]), 

    sp__GetString	PTR unsigned char  size(2) Largest target is 20
		 -> mystring(BANK1[20]), 

    shuffle@array	PTR int  size(2) Largest target is 16
		 -> round@leds(BANK1[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->i2_sprintf
    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_abs->i2___aomod
    i2_UART_Write_Text->i2_UART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    _Lo_ISR->_MyusartRead
    _MyusartRead->i1_ClearBuffer

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_count_score
    _start->_UART_Write_Text
    _show_result->_UART_Write_Text
    _round->_shuffle
    _strcpy->_GetString
    _shuffle->___awdiv
    _rand->___lmul
    ___awdiv->_rand
    _count_score->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _UART_Write_Text->_UART_Write

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_count_score

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   25059
                                            113 BANK1      2     2      0
                        _ClearBuffer
                          _GetString
                  _SYSTEM_Initialize
                        _count_score
                              _round
                        _show_result
                              _start
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0    2315
                        _ClearBuffer
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (1) _show_result                                          0     0      0    2315
                        _ClearBuffer
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (1) _round                                               28    28      0    7338
                                             38 BANK1     28    28      0
                        _ClearBuffer
                          _GetString
                    _UART_Write_Text
                            _shuffle
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2     400
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               8     4      4     677
                                              2 BANK1      8     4      4
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (2) _shuffle                                             12     8      4    2629
                                             26 BANK1     12     8      4
                            ___awdiv
                            ___lwdiv
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2     456
                                             12 BANK1      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     456
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     735
                                             18 BANK1      8     4      4
                            ___lwdiv (ARG)
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _GetString                                            2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _count_score                                        244   244      0   11881
                                            111 BANK1      2     2      0
                                              0 BANK2    242   242      0
                        _ClearBuffer
                    _UART_Write_Text
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    15     10    8705
                                             88 BANK1     23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6822
                                             80 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6    6328
                                             62 BANK1     18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    4761
                                             27 BANK1     35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             16 BANK1     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                              9 BANK1      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                              0 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK1     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK1     26    10     16
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      6     4      2    2216
                                              1 BANK1      6     4      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearBuffer                                          2     2      0      99
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Lo_ISR                                              5     5      0      90
                                             59 BANK0      5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (11) _MyusartRead                                         1     1      0      90
                                             58 BANK0      1     1      0
                      i1_ClearBuffer
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (12) i1_UART_Write                                        1     1      0      22
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (12) i1_ClearBuffer                                       2     2      0      68
                                             56 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _ISR                                                64    64      0    4406
                                            107 COMRAM     8     8      0
                                              0 BANK0     56    56      0
                  i2_UART_Write_Text
                          i2___awdiv
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (14) i2_sprintf                                          21    15      6    3670
                                             88 COMRAM    19    13      6
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (15) i2_vfprintf                                          8     2      6    3419
                                             80 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (16) i2_vfpfcnvrt                                        23    17      6    3219
                                             62 COMRAM    18    12      6
                             i2_dtoa
                            i2_fputc
 ---------------------------------------------------------------------------------
 (17) i2_dtoa                                             35    25     10    2449
                                             27 COMRAM    35    25     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (18) i2_pad                                              11     5      6    1149
                                             16 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
 ---------------------------------------------------------------------------------
 (19) i2_fputs                                             7     3      4     531
                                              9 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (17) i2_fputc                                             9     5      4     382
                                              0 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (18) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (18) i2_abs                                               4     2      2      92
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___aomod                                          18     2     16     348
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (18) i2___aodiv                                          26    10     16     352
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (14) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (14) i2_UART_Write_Text                                   6     4      2     190
                                              1 COMRAM     6     4      2
                       i2_UART_Write
 ---------------------------------------------------------------------------------
 (15) i2_UART_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearBuffer
   _GetString
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _count_score
     _ClearBuffer
     _UART_Write_Text
       _UART_Write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _round
     _ClearBuffer
     _GetString
     _UART_Write_Text
     _shuffle
       ___awdiv
         ___lwdiv (ARG)
         _rand (ARG)
           ___lmul
       ___lwdiv
       _rand
     _strcpy
       _GetString (ARG)
     _strlen
   _show_result
     _ClearBuffer
     _UART_Write_Text
   _start
     _ClearBuffer
     _UART_Write_Text
   _strcpy
   _strlen

 _Lo_ISR (ROOT)
   _MyusartRead
     i1_ClearBuffer
     i1_UART_Write

 _ISR (ROOT)
   i2_UART_Write_Text
     i2_UART_Write
   i2___awdiv
   i2_sprintf
     i2_vfprintf
       i2_vfpfcnvrt
         i2_dtoa
           i2___aodiv
           i2___aomod
           i2_abs
             i2___aomod (ARG)
           i2_pad
             i2_fputc
               i2_putch
             i2_fputs
               i2_fputc
         i2_fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     F2      F4       8       95.3%
BITBANK1           100      0       0       5        0.0%
BANK1              100     73      D8       6       84.4%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     40      46       4       54.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     73      73       1       91.3%
BITBIGSFR_1lhll      B      0       0      26        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFR_1lhll      8      0       0      25        0.0%
BITBIGSFRhlh         6      0       0      29        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFRhhhh        5      0       0      27        0.0%
BITBIGSFRhhl         5      0       0      28        0.0%
BITBIGSFR_1hl        5      0       0      22        0.0%
BITBIGSFR_1lhll      4      0       0      24        0.0%
BITBIGSFR_1hhl       4      0       0      21        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_1hhh       2      0       0      20        0.0%
BITBIGSFRhll         2      0       0      30        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BITBIGSFR_1lhlh      1      0       0      23        0.0%
BITBIGSFRl           1      0       0      31        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     285      32        0.0%
DATA                 0      0     285      34        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jan 11 15:45:38 2023

                 shuffle@array 011A                             l90 187C                             l93 22FC  
                 ___awdiv@sign 0117                             bsr 000FE0        __end_of_CCP1_Initialize 23F4  
                          l200 2402                            l301 1ED8                            l222 23FA  
                          l302 1EE8                            l150 06AA                            l119 034C  
                          l128 03F6                            l145 0696                            l137 178C  
                          l219 239E                            l404 0D30                            l261 2370  
                          l255 2358                            l176 23B4                            l272 2174  
                          l280 23E6                            l193 23F2                            l417 101E  
                          l521 1AD8                            l258 235E                            l267 1C20  
                          l781 1E04                            l788 1E0C                            l990 1C46  
                          l968 1FF8                            l994 1C9E                            l999 0738  
                          _PR2 000FCB                            _ISR 0008             i2___aodiv@quotient 0013  
                          _abs 21FE                            _pad 1C22                            _str 01B0  
                          wreg 000FE8            __end_ofi2_vfpfcnvrt 1422                           ?_ISR 0001  
                         ISR@s 0080                           l1001 0740                           l1002 0786  
                         l1020 12D2                           l1013 092A                           l1030 2236  
                         l1033 223E                           l1026 204A                           ?_abs 0112  
                         l1045 1948                           l1053 212E                           l1070 227E  
                         l1056 2408                           l1064 1E7C                           l1076 2336  
                         l4000 066E                           l4002 0676                           l4010 0696  
                         l4012 238A                           l4004 068A                           l4100 150E  
                         l4020 1422                           l4014 2392                           l2350 21FE  
                         l4110 1542                           l4102 1520                           l4030 1438  
                         l4022 1426                           l4016 2396                           l3400 0C78  
                         l2352 221A                           l4112 154A                           l4104 1532  
                         l4040 144C                           l4032 143A                           l4024 1428  
                         l4018 239A                           l3402 0CA6                           l3410 0CE0  
                         l4114 154E                           l4106 153A                           l4050 1460  
                         l4042 144E                           l4034 143C                           l4026 142C  
                         l3412 0CF0                           l3404 0CC6                           l3420 0EC0  
                         l3500 0826                           l4116 1552                           l4108 153E  
                         l4060 1470                           l4052 1468                           l4044 1450  
                         l4036 1440                           l4028 1430                           l3414 0D10  
                         l3406 0CC8                           l3430 0F20                           l3422 0ECE  
                         l3510 08E4                           l3502 082C                           l4070 147A  
                         l4062 1472                           l4054 146A                           l4046 1458  
                         l4038 1444                           l3408 0CDA                           l3440 0F96  
                         l3432 0F3E                           l3424 0EEE                           l3360 18CC  
                         l3352 187E                           l3512 08F4                           l3504 0890  
                         l3600 1AAA                           l3520 1E7E                           l4080 1484  
                         l4072 147C                           l4064 1474                           l4056 146C  
                         l4048 145C                           l3450 0FFE                           l3442 0FB6  
                         l3434 0F46                           l3426 0EF2                           l3418 0EBA  
                         l3362 1902                           l3354 1892                           l3370 2108  
                         l3514 08FA                           l3506 08AC                           l3530 1184  
                         l3610 1AD0                           l3602 1AAC                           l3522 1E90  
                         l4090 14AC                           l4082 1488                           l4074 147E  
                         l4066 1476                           l4058 146E                           l3380 0BDC  
                         l3444 0FC8                           l3436 0F5A                           l3428 0F00  
                         l3356 18A4                           l3372 210E                           l3460 1C52  
                         l3516 090A                           l3508 08CA                           l3540 11D8  
                         l3532 11A8                           l3604 1AB2                           l3620 1DBC  
                         l3524 1E9E                           l3700 2240                           l4092 14C2  
                         l4084 148C                           l4076 1480                           l4068 1478  
                         l3390 0C1E                           l3382 0BE0                           l3374 0BA8  
                         l3438 0F68                           l3446 0FCE                           l3358 18AE  
                         l3366 20E8                           l3462 1C66                           l3454 1C22  
                         l3470 06CC                           l3550 1296                           l3542 11F4  
                         l3534 11B6                           l3606 1AB8                           l3630 1DF6  
                         l3622 1DC4                           l3614 1D98                           l3526 1EAE  
                         l3702 2250                           l3710 2328                           l4094 14D8  
                         l4086 1490                           l4078 1482                           l3720 23E8  
                         l3392 0C3C                           l3384 0BEE                           l3376 0BAE  
                         l3448 0FDE                           l3368 20F6                           l3464 1C6C  
                         l3456 1C32                           l3480 0748                           l3472 06E2  
                         l3544 1210                           l3536 11C4                           l3640 2024  
                         l3800 0192                           l3608 1AC8                           l3632 1DF8  
                         l3624 1DD2                           l3616 1DA2                           l3528 1EB8  
                         l3560 1E0E                           l3704 22FE                           l4096 14EA  
                         l4088 1492                           l3714 23A0                           l3722 23EA  
                         l3730 23F4                           l3394 0C44                           l3386 0C0E  
                         l3378 0BBC                           l3466 1C8A                           l3458 1C3E  
                         l3490 0782                           l3482 0758                           l3474 06F2  
                         l3546 1266                           l3538 11C8                           l3554 12A8  
                         l3642 2040                           l3650 1FC2                           l3810 01C2  
                         l3802 019A                           l3570 1A14                           l3634 1DFE  
                         l3626 1DD8                           l3618 1DB4                           l3562 1E4E  
                         l3706 230A                           l4098 14FC                           l3716 23A2  
                         l3724 23EE                           l3740 234A                           l3732 2338  
                         l3660 1BAC                           l3396 0C58                           l3388 0C12  
                         l3492 078E                           l3484 075E                           l3476 0712  
                         l3468 06AC                           l3636 1FFA                           l3652 1FCA  
                         l3820 0216                           l3812 01E4                           l3804 01A8  
                         l3580 1A42                           l3572 1A1A                           l3628 1DEE  
                         l3708 2310                           l3900 170A                           l3718 23A6  
                         l3726 23F0                           l3750 2354                           l3742 234C  
                         l3734 2342                           l3566 235E                           l3662 1BDE  
                         l3398 0C66                           l3494 0796                           l3486 076E  
                         l3478 072C                           l3638 2006                           l3654 1FE6  
                         l3646 1FA8                           l3822 021E                           l3830 025A  
                         l3814 01F2                           l3806 01B6                           l3590 1A70  
                         l3582 1A4A                           l3574 1A28                           l3670 17B2  
                         l3910 1756                           l3902 1720                           ?_pad 0110  
                         l3728 23FC                           l3752 2356                           l3744 234E  
                         l3736 2346                           l3568 236C                           l3664 1BE4  
                         l3496 079C                           l3488 077A                           l3648 1FBA  
                         l3840 02A4                           l3832 0268                           l3824 0222  
                         l3808 01BE                           l3816 01FA                           l3760 007A  
                         l3592 1A78                           l3584 1A4E                           l3576 1A30  
                         l3672 17F6                           l3680 185A                           l3920 177A  
                         l3912 175E                           l3904 1732                           l3746 2350  
                         l3738 2348                           l3690 214A                           l3682 2130  
                         l3658 1B9E                           l3498 0820                           l3850 02DE  
                         l3842 02B2                           l3834 0276                           l3826 0244  
                         l3818 0208                           l3770 00C4                           l3762 0088  
                         l3594 1A86                           l3586 1A56                           l3578 1A34  
                         l3674 1810                           l3666 178E                           l3930 0432  
                         l3922 1788                           l3914 1762                           l3906 1744  
                         l3754 22C0                           l3748 2352                           l3692 214E  
                         l3860 0324                           l3852 02E2                           l3836 027E  
                         l3844 02BA                           l3828 0252                           l3780 00FE  
                         l3772 00D2                           l3764 0096                           l3596 1A8C  
                         l3588 1A68                           l3676 183C                           l3668 17A6  
                         l3940 049A                           l3932 0440                           l3924 03F8  
                         l3916 1768                           l3908 1752                           l3756 22F8  
                         l3694 216A                           l3870 0362                           l3862 0332  
                         l3854 0304                           l3846 02C8                           l3838 0282  
                         l3790 0148                           l3782 0102                           l3766 009E  
                         l3774 00DA                           l3758 0070                           l3598 1AA2  
                         l3678 1856                           l3950 04F4                           l3942 04AC  
                         l3934 0456                           l3926 0414                           l3918 176C  
                         l3688 213A                           l3880 03A4                           l3864 0340  
                         l3856 0312                           l3848 02D6                           l3792 0156  
                         l3784 0124                           l3776 00E8                           l3768 00A2  
                         l3696 23DC                           l3960 053A                           l3952 0506  
                         l3944 04BE                           l3936 046E                           l3928 0418  
                         l3882 03D6                           l3874 0364                           l3866 0350  
                         l3858 031A                           l3794 015E                           l3786 0132  
                         l3778 00F6                           l3970 058C                           l3954 050E  
                         l3946 04D0                           l3962 0542                           l3938 0484  
                         l3890 16AC                           l3884 03E6                           l3876 038E  
                         l3868 0362                           l3796 0162                           l3788 013A  
                         l3980 05DE                           l3972 059E                           l3964 0556  
                         l3956 0522                           l3948 04E2                           l3892 16BE  
                         l3886 03F2                           l3878 039C                           l3798 0184  
                         l3990 0614                           l3974 05B0                           l3966 0568  
                         l3958 0532                           l3894 16D0                           l3992 0626  
                         l3976 05C2                           l3968 057A                           l3896 16E6  
                         l3888 1698                           _ADFM 007E07                           l3994 0638  
                         l3978 05CA                           l3986 05EE                           l3898 16F8  
                         l3996 064A                           l3988 0602                           l3998 065C  
                         STR_1 7C00                           STR_2 7D51                           STR_3 7B36  
                         STR_4 7D10                           STR_5 7B90                           STR_6 7AFD  
                         STR_7 7D31                           STR_8 7C22                           STR_9 7C44  
                         _CREN 007D5C                           u4000 03D6                           _LATD 000F8C  
                         u4001 03D2                           u4010 16AC                           u4011 16A8  
                         u3300 18CC                           u4100 04BE                           u4020 16BE  
                         u3301 18C8                           u4101 04BA                           u4021 16BA  
                         u3310 1902                           u4110 04D0                           u4030 16E6  
                         u3311 18FE                           u4111 04CC                           u4031 16E2  
                         u3400 0ECE                           u3320 212E                           u4200 05B0  
                         u4120 04E2                           u4040 16F8                           u3401 0ECA  
                         u3321 212A                           u4201 05AC                           u4121 04DE  
                         u4041 16F4                           u3330 0BBC                           u3410 0F00  
                         u4210 05C2                           u4130 04F4                           u4050 1720  
                         u3331 0BB8                           u3411 0EFC                           u4211 05BE  
                         u4131 04F0                           u4051 171C                           u3340 0BEE  
                         u3420 0F3E                           u3500 06F2                           u4220 0602  
                         u4140 0506                           u4060 1732                           u4300 14D8  
                         u3341 0BEA                           u3421 0F3A                           u3501 06EE  
                         u4221 05FE                           u4141 0502                           u4061 172E  
                         u4301 14D4                           u3430 0F68                           u3510 072C  
                         u4230 0614                           u4150 0556                           u4310 14EA  
                         u3351 0C18                           u3431 0F64                           u3511 0728  
                         u4231 0610                           u4151 0552                           u4071 044A  
                         u4311 14E6                           u3360 0C3C                           u3440 0F96  
                         u3280 1892                           u3520 0758                           u3600 11A8  
                         u4240 0626                           u4160 0568                           u4080 049A  
                         u4320 14FC                           u3361 0C38                           u3441 0F92  
                         u3281 188E                           u3521 0754                           u3601 11A4  
                         u4241 0622                           u4161 0564                           u4081 0496  
                         u4321 14F8                           u3370 0C66                           u3450 0FDE  
                         u3290 18A4                           u3530 076E                           u3610 11F4  
                         u4250 0638                           u4170 057A                           u4090 04AC  
                         u4330 150E                           u3371 0C62                           u3451 0FDA  
                         u3291 18A0                           u3531 076A                           u3611 11F0  
                         u4251 0634                           u4171 0576                           u4091 04A8  
                         u4331 150A                           u3380 0CA6                           u3460 1C32  
                         u3540 08AC                           u3620 1210                           u3700 1AC8  
                         u4260 064A                           u4180 058C                           u4340 1520  
                         u3381 0CA2                           u3461 1C2E                           u3541 08A8  
                         u3621 120C                           u3701 1AC4                           u4261 0646  
                         u4181 0588                           u4341 151C                           u3390 0CF0  
                         u3470 1C8A                           u3550 08CA                           u3710 1DB4  
                         u3630 1E6E                           u4270 065C                           u4190 059E  
                         u4350 1532                           u3391 0CEC                           u3471 1C86  
                         u3551 08C6                           u4407 0254                           u3711 1DB0  
                         u4271 0658                           u4191 059A                           u4351 152E  
                         u3800 216A                           u3640 236C                           u3560 08E4  
                         u3480 06DE                           u3720 1DD2                           u4280 066E  
                         u3801 2166                           u3641 2368                           u3561 08E0  
                         u3481 06D8                           u4417 02B4                           u3721 1DCE  
                         u4281 066A                           u1890 221A                           u3570 08F4  
                         u3490 06E0                           u3650 1A28                           u3730 1DEE  
                         u3810 227E                           u4290 06AA                           u1891 2216  
                         u3571 08F0                           u4427 0314                           u3651 1A24  
                         u3731 1DEA                           u3635 1E64                           u3811 227A  
                         u4291 06A6                           u3740 2040                           u3900 01B6  
                         u3660 1A42                           u3580 1E9E                           u3820 2328  
                         u3741 203C                           u4437 039E                           u3901 01B2  
                         u3661 1A3E                           u3581 1E9A                           u3821 2324  
                         u3750 1BDA                           u3910 0208                           u3830 0088  
                         u3670 1A68                           u3590 1ED8                           u4447 03E8  
                         u3911 0204                           u4367 00D4                           u3831 0084  
                         u3671 1A64                           u3591 1ED4                           u3760 1C10  
                         u3920 0216                           u3840 0096                           u3680 1A86  
                         u3921 0212                           u4377 0134                           u3841 0092  
                         u3681 1A82                           u3770 1C20                           u3930 0268  
                         u3850 00E8                           u3690 1AA2                           u3771 1C1C  
                         u3931 0264                           u4387 0194                           u3851 00E4  
                         u3691 1A9E                           u3940 0276                           u3860 00F6  
                         u3780 17A6                           _RCIF 007CF5                           u3757 1BD0  
                         u3941 0272                           u4397 01F4                           u3861 00F2  
                         u3781 17A2                           u3950 02C8                           u3870 0148  
                         u3790 187C                           u3767 1C06                           u3951 02C4  
                         u3871 0144                           u3791 1878                           u3960 02D6  
                         u3880 0156                           u3961 02D2                           u3881 0152  
                         u3970 0332                           u3890 01A8                           u3971 032E  
                         u3891 01A4                           u3980 0340                           u3981 033C  
                         u3990 0362                           u3991 035E                           i2l83 1674  
                         abs@a 0112                           _dbuf 017C                           _main 1422  
                         _dtoa 06AC                           _rand 1E0E                           _seed 01C4  
                         _prec 0175                           pad@i 0117                           pad@p 0114  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf1 000FE7  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 0119  
                         fsr2l 000FD9                           btemp 0074                   ?_count_score 0001  
                         start 006C                __end_ofi2_fputc 1A14                __end_ofi2_fputs 21FE  
              __end_ofi2_putch 240C                    i2_dtoa$1986 002E                   ___param_bank 000000  
      __end_of_UART_Write_Text 1C22                          ??_ISR 006C                          ??_abs 0114  
                        ??_pad 0116               ?_UART_Initialize 0001                     i2_vfprintf 209A  
__end_of_OSCILLATOR_Initialize 23FC                __end_of___aodiv 0D32                          ?_main 0001  
                        ?_dtoa 011B                __end_of___aomod 1020                          ?_rand 010C  
              __end_of___awdiv 1ADA                          STR_10 7C66                          STR_11 7C88  
                        STR_20 7D8D                          STR_12 7CAA                          STR_21 7DB1  
                        STR_13 7CCC                          STR_14 7CEE                          STR_22 7BDE  
                        STR_23 7D70                          STR_15 7BB9                          STR_16 7B63  
                        STR_24 7B66                          STR_17 7DA0                          STR_18 7DA0  
                        STR_19 7DA0                ___awdiv@divisor 0114                          _IRCF0 007E9C  
                        _IRCF1 007E9D                          _IRCF2 007E9E                __end_of___lwdiv 1E0E  
                        i1l261 2388                          i1l272 21B8                          i1l258 2376  
                        i1l277 1FA6                          i1l287 0054                          i2l404 0EB8  
                        i2l261 23CA                          i2l521 1B9C                          i2l417 1182  
                        i2l258 23B8                          i2l267 1D1C                ___awdiv@counter 0116  
                        i2l990 1D40                          i2l968 2098                          i2l994 1D96  
                        i2l999 09B8                          _RCREG 000FAE                   vfpfcnvrt@fmt 0140  
                        _SPBRG 000FAF                          _TRISA 000F92                          _TRISD 000F95  
                        i2_abs 2280                          _TXREG 000FAD                          i2_pad 1D1E  
          ___lmul@multiplicand 0104                    ?_UART_Write 0001                          _begin 0177  
                        _flags 017B                          _fputc 187E                          _fputs 20E8  
                        pad@fp 0110                          _width 0173                          _putch 2408  
                        _start 22C0                          _round 03F8                          dtoa@d 011D  
                        dtoa@i 013C                          dtoa@n 0133                          dtoa@p 012F  
                        dtoa@s 013B                          dtoa@w 0131                    _ClearBuffer 2130  
                        tablat 000FF5                __end_of_shuffle 187E                          plusw1 000FE3  
                        plusw2 000FDB                          ttemp5 0075                          ttemp6 0078  
                        ttemp7 007C                          status 000FD8                          wtemp8 0075  
              __end_of_sprintf 1FFA                __initialization 1EEA                   __end_of_main 155E  
                 __end_of_dtoa 092C                   __end_of_rand 1E7E                    i2_vfpfcnvrt 12D4  
                i2vfpfcnvrt@ap 0043                  i2vfpfcnvrt@cp 004F                  i2vfpfcnvrt@fp 003F  
                       ??_main 0171                         ??_dtoa 0125               ?_CCP1_Initialize 0001  
                       ??_rand 010E                  __activetblptr 000002                     i2sprintf@f 0061  
                   i2sprintf@s 0059                         ?i2_abs 0013                         ?i2_pad 0011  
                       _ADCON1 000FC1                         ?_fputc 0100                         ?_fputs 0109  
                       _ADRESH 000FC4                         _ADRESL 000FC3                         _CCPR1L 000FBE  
             ___awdiv@dividend 0112                         ?_putch 0001                         ?_round 0001  
                       ?_start 0001          __end_ofi1_ClearBuffer 21BA                         i1l3130 1F74  
                       i1l3132 1F94                         i1l3134 1F9A                         i1l3126 1F50  
                       i1l3136 1FA2                         i1l3128 1F62                         i2l1001 09C0  
                       i2l1002 0A06                         i2l1020 1420                         i2l1013 0BA6  
                       i2l1030 22B6                         i1l3342 002E                         i1l3344 003C  
                       i2l1033 22BE                         i2l1026 20E6                         i1l3346 004A  
                       i1l3348 0050                         i2l1045 1A12                         i2l1053 21FC  
                       i1l2830 2384                         i2l1056 240A                         i1l2842 2180  
                       i1l2844 2190                         i1l2836 2176                         i1l2828 2376  
                       i1l2846 2194                         i2l3200 2088                         i1l2848 21B0  
                       i2l2250 1996                         i2l2242 194A                         i2l3210 15A4  
                       i2l3140 1CA0                         i2l2420 0D64                         i2l2252 19CC  
                       i2l2244 195C                         i2l2500 1D4C                         i2l3220 15EA  
                       i2l3212 15B8                         i2l3204 1580                         i2l3142 1CAC  
                       i2l3150 1ADE                         i2l2430 0DA6                         i2l2422 0D68  
                       i2l2414 0D32                         i2l2510 229A                         i2l2246 196E  
                       i2l2502 1D60                         i2l3230 163A                         i2l3222 1602  
                       i2l3214 15C4                         i2l3206 1588                         i2l3144 1CDC  
                       i2l3160 1B0E                         i2l3152 1AEC                         i2l2440 0E00  
                       i2l2432 0DC4                         i2l2424 0D76                         i2l2416 0D36  
                       i2l2248 1978                         i2l2360 21DC                         i2l2504 1D64  
                       i2l2600 0B86                         i2l3232 163C                         i2l3224 161E  
                       i2l3216 15D6                         i2l3208 15A4                         i2l3146 1CE0  
                       i2l3170 1B3C                         i2l3162 1B12                         i2l3154 1AF4  
                       i2l2442 0E2E                         i2l2434 0DCC                         i2l2450 0E68  
                       i2l2426 0D96                         i2l2418 0D44                         i2l2354 21BA  
                       i2l2506 1D82                         i2l3234 163E                         i2l3226 162A  
                       i2l3218 15E2                         i2l3180 1B70                         i2l3172 1B4A  
                       i2l3164 1B1A                         i2l3156 1AF8                         i2l3148 1ADA  
                       i2l2452 0E78                         i2l2444 0E4E                         i2l2436 0DE0  
                       i2l2428 0D9A                         i2l2460 1024                         i2l2508 2280  
                       i2l2356 21C6                         i2l2700 1328                         i2l3236 1658  
                       i2l3228 1632                         i2l3182 1B76                         i2l3174 1B50  
                       i2l3166 1B2C                         i2l3158 1B06                         i2l2454 0E98  
                       i2l2446 0E50                         i2l2438 0DEE                         i2l2470 1084  
                       i2l2462 1032                         i2l2358 21D8                         i2l2710 13E6  
                       i2l2702 1344                         i2l3238 165C                         i2l3176 1B66  
                       i2l3168 1B34                         i2l3184 1B7C                         i2l2448 0E62  
                       i2l2480 10FA                         i2l2472 10A2                         i2l2464 1052  
                       i2l2560 0990                         i2l2552 092C                         i2l2704 1360  
                       i2l3192 204C                         i2l3186 1B8C                         i2l3178 1B6E  
                       i2l2490 1162                         i2l2482 111A                         i2l2474 10AA  
                       i2l2466 1056                         i2l2458 1020                         i2l2570 09EE  
                       i2l2562 09AC                         i2l2554 094C                         i2l2706 13B6  
                       i2l2714 13F8                         i2l3194 205C                         i2l3188 1B94  
                       i2l2484 112C                         i2l2476 10BE                         i2l2468 1064  
                       i2l2580 0A1C                         i2l2572 09FA                         i2l2564 09C8  
                       i2l2556 0960                         i2l3196 2064                         i2l2478 10CC  
                       i2l2486 1132                         i2l2494 1D1E                         i2l2590 0B28  
                       i2l2582 0A9E                         i2l2574 0A02                         i2l2566 09D8  
                       i2l2558 0970                         i2l3198 206C                         i2l2832 23B8  
                       i2l2488 1142                         i2l2496 1D2C                         i2l2592 0B46  
                       i2l2584 0AA4                         i2l2576 0A0E                         i2l2568 09DE  
                       i2l2834 23C6                         i2l2498 1D38                         i2l2594 0B60  
                       i2l2586 0AAA                         i2l2578 0A16                         i2l2690 12D4  
                       i2l2850 209A                         i2l2596 0B70                         i2l2588 0B0E  
                       i2l2692 12F8                         i2l2852 20A6                         i2l2598 0B76  
                       i2l2694 1306                         i2l2854 20C2                         i2l2696 1314  
                       i2l2856 20DE                         i2l2698 1318                      ??i2_fputc 0005  
                    ??i2_fputs 000E                 count_score@txt 0200                      ??i2_putch 0001  
               i2___aodiv@sign 0012                         i2abs@a 0013                         i2_dtoa 092C  
                       i2pad@i 0018                         i2pad@p 0015                         i2pad@w 001A  
                       _Lo_ISR 0018                   vfprintf@cfmt 0156                 i2___aomod@sign 0012  
                       ___lmul 1E7E                      ??___aodiv 0110                  i2vfprintf@fmt 0053  
                    ??___aomod 0110                      ??___awdiv 0116               ?_UART_Write_Text 0101  
                    ??___lwdiv 0104                    ?i2_vfprintf 0051                         _lenStr 00C4  
                       clear_0 1F36               ___awdiv@quotient 0118                         _scored 02F3  
                       isa$std 000001                         pad@buf 0112                         dtoa@fp 011B  
                       _strcpy 2240                         _strlen 22FE                 i2___awdiv@sign 0006  
                       fputc@c 0100                         fputs@c 010D                         fputs@i 010E  
            __end_ofi2___aodiv 0EBA                         fputs@s 0109              __end_ofi2___aomod 1184  
            __end_ofi2___awdiv 1B9E                   __mediumconst 7AFC                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8                      ??_shuffle 011E  
                       putch@c 0001             i2___aomod@dividend 0001               __end_of_vfprintf 204C  
                    ??_sprintf 0162                   ?_show_result 0001              _SYSTEM_Initialize 238A  
                   __accesstop 0080        __end_of__initialization 1F42             ?_SYSTEM_Initialize 0001  
                ___rparam_used 000001              __end_ofi2_sprintf 209A                  __end_ofi2_abs 22C0  
            __end_of_GetString 23E8                  __end_ofi2_pad 1D98                  ?i1_UART_Write 0001  
               __pcstackCOMRAM 0001                   __pidataBANK0 2404                   __pidataBANK1 23CC  
          ??_SYSTEM_Initialize 0100                  __end_of_fputc 194A                  __end_of_fputs 2130  
                __end_of_putch 240A                  __end_of_round 06AC                  __end_of_start 22FE  
                      ??i2_abs 0015                        ??i2_pad 0017                  ??_MyusartRead 00BA  
                ?i2_UART_Write 0001                 i2vfpfcnvrt@fmt 0041                        ??_fputc 0104  
    __end_of_SYSTEM_Initialize 23A0                        ??_fputs 010D                        ??_putch 0100  
                      ??_round 0126                        ??_start 0107                     __pbssBANK0 00C4  
                   __pbssBANK1 0173                     __pbssBANK2 02F2                    i2sprintf@ap 005F  
                      ?i2_dtoa 001C               i2UART_Write@data 0001                        ?_Lo_ISR 0001  
               ??i1_UART_Write 00B8             i2UART_Write_Text@i 0006                        ISR@temp 00B6  
                   _difficulty 0179                        ?___lmul 0100                        _CCP1CON 000FBD  
               ___lmul@product 0108                        ?_strcpy 0102                        ?_strlen 0100  
               ??i2_UART_Write 0001                   ??_UART_Write 0100                 _cur_play_times 00C2  
                 ?_ClearBuffer 0001                        i2_fputc 194A            __end_of_MyusartRead 1FA8  
                      i2_fputs 21BA                        i2pad@fp 0011                        i2_putch 240A  
                      i2dtoa@d 001E                        i2dtoa@i 003C                        i2dtoa@n 0034  
                      i2dtoa@p 0030                        i2dtoa@s 003E                        i2dtoa@w 0032  
                      __Hparam 0000                        __Lparam 0000                        ___aodiv 0BA8  
                      ___aomod 0EBA                        ___awdiv 1A14             __end_of_UART_Write 2372  
                      ___lwdiv 1D98                      ?_vfprintf 0150                 i2vfprintf@cfmt 0057  
                 ?i2_vfpfcnvrt 003F                        __pcinit 1EEA                        __ramtop 0600  
                      __ptext0 1422                        __ptext1 22C0                        __ptext2 1698  
                      __ptext3 03F8                        __ptext4 22FE                        __ptext5 2240  
                      __ptext6 178E                        __ptext7 1E0E                        __ptext8 1E7E  
                      __ptext9 1D98          _OSCILLATOR_Initialize 23F4                      _T2CONbits 000FCA  
                      _shuffle 178E                        _sprintf 1FA8                 __pintcode_body 155E  
         end_of_initialization 1F42                        fputc@fp 0102                  __Lmediumconst 7AFC  
                      int_func 155E                        fputs@fp 010B              __end_of_vfpfcnvrt 12D4  
                    _RCSTAbits 000FAB                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 0146                   ??i2_vfprintf 0057                     ??_vfprintf 0156  
                      strcpy@d 0108                        strlen@a 0102                        strcpy@s 0106  
                      strlen@s 0100                      _PORTBbits 000F81                      _PORTEbits 000F84  
               UART_Write@data 0100              i2___aodiv@divisor 0009              i2___aodiv@counter 0011  
                    _TRISBbits 000F93                      _TRISCbits 000F94                      _TRISEbits 000F96  
                  _MyusartRead 1F50           __end_ofi1_UART_Write 238A                      i2___aodiv 0D32  
                    i2___aomod 1020                      i2___awdiv 1ADA             __end_ofi2_vfprintf 20E8  
                  _CCP1CONbits 000FBD                     main@lenStr 0171                      _TXSTAbits 000FAC  
           i2___awdiv@dividend 0001                 __end_ofi2_dtoa 0BA8                 __end_of_Lo_ISR 006C  
         __end_ofi2_UART_Write 23CC                      i2_sprintf 204C   __end_of_INTERRUPT_Initialize 2404  
                    _GetString 23DC                 __end_of___lmul 1EEA                    vfpfcnvrt@ap 0142  
                  vfpfcnvrt@cp 014E                    vfpfcnvrt@fp 013E                    _BAUDCONbits 000FB8  
               _ADC_Initialize 23A0                      i2fputc@fp 0003         ?_OSCILLATOR_Initialize 0001  
                    i2fputs@fp 000C                 __end_of_strcpy 2280                 __end_of_strlen 2338  
          start_initialization 1EEA             i2___awdiv@quotient 0007                    __end_of_ISR 1698  
                  __end_of_abs 2240                    __end_of_pad 1CA0                     ?i2___aodiv 0001  
                   ?i2___aomod 0001                     ?i2___awdiv 0001                   ClearBuffer@i 0100  
            ??_UART_Initialize 0100                    round@lenStr 0140                  ??_count_score 016F  
                     ??i2_dtoa 0026                       ??_Lo_ISR 00BB                    vfprintf@fmt 0152  
                 i2vfprintf@ap 0055                   i2vfprintf@fp 0051                       ??___lmul 0108  
                   ?i2_sprintf 0059         __end_of_ADC_Initialize 23B6                    __pdataBANK0 00C0  
                  __pdataBANK1 01C8                     ?_GetString 0100              i2___aomod@divisor 0009  
                     ??_strcpy 0106                       ??_strlen 0102              i2___aomod@counter 0011  
                 i2sprintf@fmt 005B              i2_UART_Write_Text 1CA0                  __pcstackBANK0 0080  
                __pcstackBANK1 0100                  __pcstackBANK2 0200               ___aodiv@dividend 0100  
           ?i2_UART_Write_Text 0002                  i1_ClearBuffer 2176                       ?i2_fputc 0001  
                     ?i2_fputs 000A                 i1ClearBuffer@i 00B8                       ?i2_putch 0001  
        i2UART_Write_Text@text 0002            ??i2_UART_Write_Text 0004              ??_CCP1_Initialize 0100  
                     ISR@range 00B4                       ISR@value 00B2               ___lwdiv@dividend 0100  
                    _dtoa$1986 012D                      __pintcode 0008                  __pmediumconst 7AFC  
                     ?___aodiv 0100            __end_of_count_score 03F8                       ?___aomod 0100  
                     ?___awdiv 0112               ___aodiv@quotient 0112                       ?___lwdiv 0100  
              ?_ADC_Initialize 0001                    __pintcodelo 0018      __end_ofi2_UART_Write_Text 1D1E  
               round@level_str 0136                       ?_shuffle 011A               ___lwdiv@quotient 0105  
                  ??i2___aodiv 0011                    ??i2___aomod 0011                    ??i2___awdiv 0005  
                     ?_sprintf 0158                 ?i1_ClearBuffer 0001              ??_UART_Write_Text 0103  
         _INTERRUPT_Initialize 23FC                      _no_scored 02F2                       _LATCbits 000F8B  
                     _LATDbits 000F8C                       _IPR1bits 000F9F                       _PIE1bits 000F9D  
                     i1u306_20 1F94                       i1u306_21 1F90                       i1u326_20 003C  
                     i1u326_21 0038                       i1u255_20 2384                       i1u327_20 004A  
                     i1u255_21 2380                       i1u327_21 0046               count_score@seven 02F0  
                     i1u257_20 21B0                       i1u257_21 21AC                       i2u201_40 0D44  
                     i2u201_41 0D40                       i2u202_40 0D76                       i2u210_40 10A2  
                     i2u202_41 0D72                       i2u210_41 109E                       i2u211_40 10CC  
                     i2u203_41 0DA0                       i2u211_41 10C8                       i2u204_40 0DC4  
                     i2u212_40 10FA                       i2u204_41 0DC0                       i2u212_41 10F6  
                     i2u205_40 0DEE                       i2u213_40 1142                       i2u205_41 0DEA  
                     i2u213_41 113E                       i2u310_40 1AEC                       i2u206_40 0E2E  
                     i2u214_40 1D2C                       i2u230_40 0B60                       i2u222_40 095C  
                     i2u310_41 1AE8                       i2u206_41 0E2A                       i2u214_41 1D28  
                     i2u230_41 0B5C                       i2u222_41 0956                       i2u311_40 1B06  
                     i2u207_40 0E78                       i2u215_40 1D82                       i2u231_40 0B70  
                     i2u223_40 095E                       i2u311_41 1B02                       i2u207_41 0E74  
                     i2u215_41 1D7E                       i2u231_41 0B6C                       i2u312_40 1B2C  
                     i2u208_40 1032                       i2u216_40 229A                       i2u224_40 0970  
                     i2u312_41 1B28                       i2u208_41 102E                       i2u216_41 2296  
                     i2u224_41 096C                       i2u313_40 1B4A                       i2u209_40 1064  
                     i2u225_40 09AC                       i2u313_41 1B46                       i2u209_41 1060  
                     i2u225_41 09A8                       i2u314_40 1B66                       i2u170_40 195C  
                     i2u226_40 09D8                       i2u314_41 1B62                       i2u170_41 1958  
                     i2u226_41 09D4                       i2u307_40 1CD8                       i2u315_40 1B8C  
                     i2u171_40 196E                       i2u227_40 09EE                       i2u315_41 1B88  
                     i2u171_41 196A                       i2u227_41 09EA                       i2u307_47 1CCE  
                     i2u308_40 1D0C                       i2u172_40 1996                       i2u228_40 0B28  
                     i2u244_40 12F8                       i2u316_40 15B8                       i2u172_41 1992  
                     i2u228_41 0B24                       i2u244_41 12F4                       i2u316_41 15B4  
                     i2u308_47 1D02                       i2u309_40 1D1C                       i2u173_40 19CC  
                     i2u229_40 0B46                       i2u245_40 1344                       i2u317_40 15D6  
                     i2u309_41 1D18                       i2u173_41 19C8                       i2u229_41 0B42  
                     i2u245_41 1340                       i2u317_41 15D2                       i2u190_40 21FC  
                     i2u246_40 1360                       i2u318_40 1602                       i2u190_41 21F8  
                     i2u246_41 135C                       i2u318_41 15FE                       i2u319_40 1658  
                     i2u319_41 1654                       i2u256_40 23C6                       i2u256_41 23C2  
                     _PIR1bits 000F9E                       i2u258_40 20DE                       i2u258_41 20DA  
                 i1_UART_Write 2372                       _RCONbits 000FD0                    ??i2_sprintf 005F  
                  ??_GetString 0102                      _vfpfcnvrt 1184                     _ADCON0bits 000FC2  
                   _ADCON1bits 000FC1                     _ADCON2bits 000FC0              i2___awdiv@divisor 0003  
                 ?_MyusartRead 0001              i2___awdiv@counter 0005                       i2pad@buf 0013  
                   round@F3251 01C8                   i2_UART_Write 23B6                       i2dtoa@fp 001C  
            ___lmul@multiplier 0100                      copy_data0 1EFE                      copy_data1 1F1E  
                     i2fputc@c 0001          ?_INTERRUPT_Initialize 0001                       i2fputs@c 000E  
                     i2fputs@i 000F                       i2fputs@s 000A                  ??_show_result 0107  
             i1UART_Write@data 00B8                    _count_score 0070                       __Hrparam 0000  
                   vfprintf@ap 0154                       __Lrparam 0000                     vfprintf@fp 0150  
      ??_OSCILLATOR_Initialize 0100                     ?_vfpfcnvrt 013E                ___aodiv@divisor 0108  
                     _adc_time 00C0                ___aodiv@counter 0110             i2vfpfcnvrt@convarg 0047  
              _UART_Initialize 2338                     sprintf@fmt 015A                ___lwdiv@divisor 0102  
              ___lwdiv@counter 0104                ??i1_ClearBuffer 00B8                       __ptext10 1A14  
                     __ptext11 23DC                       __ptext20 2408                       __ptext12 0070  
                     __ptext21 21FE                       __ptext13 1FA8                       __ptext30 23FC  
                     __ptext22 0EBA                       __ptext14 1FFA                       __ptext31 23E8  
                     __ptext23 0BA8                       __ptext15 1184                       __ptext40 12D4  
                     __ptext32 23A0                       __ptext24 1B9E                       __ptext16 06AC  
                     __ptext41 092C                       __ptext25 235A                       __ptext17 1C22  
                     __ptext50 1CA0                       __ptext42 1D1E                       __ptext34 1F50  
                     __ptext26 2130                       __ptext18 20E8                       __ptext51 23B6  
                     __ptext43 21BA                       __ptext35 2372                       __ptext27 238A  
                     __ptext19 187E                       __ptext44 194A                       __ptext36 2176  
                     __ptext28 2338                       __ptext45 240A                       __ptext29 23F4  
                     __ptext46 2280                       __ptext38 204C                       __ptext47 1020  
                     __ptext39 209A                       __ptext48 0D32                       __ptext49 1ADA  
                   strcpy@dest 0102            UART_Write_Text@text 0101            __end_of_show_result 178E  
                     isa$xinst 000000                       int$flags 0074                       _vfprintf 1FFA  
                     _mystring 019C               ___aomod@dividend 0100                     _INTCONbits 000FF2  
                    round@leds 0126                _CCP1_Initialize 23E8         ??_INTERRUPT_Initialize 0100  
                ??_ClearBuffer 0100                       intlevel1 0000                       intlevel2 0000  
                    sprintf@ap 0162             count_score@txt_821 0296             count_score@txt_813 021E  
           count_score@txt_830 02D2             count_score@txt_815 023C             count_score@txt_817 025A  
           count_score@txt_827 02B4             count_score@txt_819 0278                      strcpy@src 0104  
             ??_ADC_Initialize 0100                       shuffle@i 0124                       shuffle@j 0122  
                     shuffle@n 011C                       shuffle@t 0120        __end_of_UART_Initialize 235A  
              ___aomod@divisor 0108                  ??i2_vfpfcnvrt 0045                    ??_vfpfcnvrt 0144  
              ___aomod@counter 0110                _UART_Write_Text 1B9E                       sprintf@f 0164  
                     sprintf@s 0158                     _UART_Write 235A                   ___aodiv@sign 0111  
             UART_Write_Text@i 0105                    _show_result 1698             i2___aodiv@dividend 0001  
          __end_of_ClearBuffer 2176                   ___aomod@sign 0111  
